<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book lang="en">
  <bookinfo>
    <title>Component Reference</title>
    <date>2013-05-31</date>
    <subtitle>A reference guide to the components of the RichFaces 4 framework</subtitle>
    <productname class="trade">RichFaces</productname>
    <productnumber>5.0.0-SNAPSHOT</productnumber>
    <edition>1</edition>
    <pubsnumber>1</pubsnumber>
    <abstract>
      <para>
			This book details each component in the RichFaces 4 framework, including examples of their use in applications.
		</para>
    </abstract>
    <corpauthor>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="./images/rf_logo.png" format="PNG" scalefit="1" width="444"/>
        </imageobject>
        <textobject>
          <phrase>Logo</phrase>
        </textobject>
      </inlinemediaobject>
    </corpauthor>
    <copyright>
      <year/>
      <holder/>
    </copyright>
    <!-- FOR PUBLICAN -->
    <legalnotice xml:base="fallback_content/Legal_Notice.xml">
      <para>
		Copyright <trademark class="copyright"/>  . This material may only be distributed subject to the terms and conditions set forth in the Open Publication License, V1.0, (the latest version is presently available at <ulink url="http://www.opencontent.org/openpub/">http://www.opencontent.org/openpub/</ulink>).
	</para>
      <para>
		Red Hat, Red Hat Enterprise Linux, the Shadowman logo, JBoss, MetaMatrix, Fedora, the Infinity Logo, and RHCE are trademarks of Red Hat, Inc., registered in the United States and other countries.
	</para>
      <para><trademark class="registered">Linux</trademark> is the registered trademark of Linus Torvalds in the United States and other countries.
	</para>
      <para>
		All other trademarks are the property of their respective owners.
	</para>
      <para>
        <address format="linespecific"><street>1801 Varsity Drive</street><city>Raleigh</city>, <state>NC</state><postcode>27606-2072</postcode><country>USA</country><phone>Phone: +1 919 754 3700</phone><phone>Phone: 888 733 4281</phone><fax>Fax: +1 919 754 3701</fax><pob>PO Box 13588</pob><city>Research Triangle Park</city>, <state>NC</state><postcode>27709</postcode><country>USA</country></address>
      </para>
    </legalnotice>
    <authorgroup xml:base="Author_Group.xml">
      <author>
        <firstname>Brian</firstname>
        <surname>Leathem</surname>
        <affiliation>
          <shortaffil>Red Hat</shortaffil>
        </affiliation>
      </author>
      <author>
        <firstname>Lukas</firstname>
        <surname>Fryc</surname>
        <affiliation>
          <shortaffil>Red Hat</shortaffil>
        </affiliation>
      </author>
      <author>
        <firstname>Sean</firstname>
        <surname>Rogers</surname>
        <affiliation>
          <shortaffil>Red Hat</shortaffil>
          <jobtitle>Content Author</jobtitle>
          <orgdiv>Engineering Content Services</orgdiv>
        </affiliation>
      </author>
      <collab>
        <collabname>Svetlana Mukhina</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
      <collab>
        <collabname>Anastasiya Bogachuk</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
      <collab>
        <collabname>Gleb Galkin</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
      <collab>
        <collabname>Mikhail Sorokin</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
      <collab>
        <collabname>Alexander Tsebro</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
      <collab>
        <collabname>Olga Chikvina</collabname>
        <affiliation>
          <orgname>Exadel</orgname>
          <orgdiv>Documentation</orgdiv>
        </affiliation>
      </collab>
    </authorgroup>
  </bookinfo>
  <chapter id="chap-Component_Reference-Introduction">
    <title>Introduction</title>
    <simpara>This book is a guide to the various components available in the RichFaces 5.0.0-SNAPSHOT framework. It includes descriptions of the role of the components, details on how best to use them, coded examples of their use, and basic references of their properties and attributes.</simpara>
    <simpara>For full references for all component classes and properties, refer to the following supplementary documentation:</simpara>
    <itemizedlist>
      <listitem>
        <simpara>
          <emphasis role="strong">
            <emphasis>VDL (View Definition Language) Documentation</emphasis>
          </emphasis>
        </simpara>
        <itemizedlist>
          <listitem>
            <simpara>Available at <ulink url="http://docs.jboss.org/richfaces/latest_5_0_X/vdldoc/">http://docs.jboss.org/richfaces/latest_5_0_X/vdldoc/</ulink></simpara>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <simpara>
          <emphasis role="strong">
            <emphasis>Javadoc</emphasis>
          </emphasis>
        </simpara>
        <itemizedlist>
          <listitem>
            <simpara>Available at <ulink url="http://docs.jboss.org/richfaces/latest_5_0_X/javadoc/">http://docs.jboss.org/richfaces/latest_5_0_X/javadoc/</ulink></simpara>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
    <simpara>For further examples for each component, refer to the <emphasis role="strong"><emphasis>RichFaces Showcase</emphasis></emphasis> at <ulink url="http://showcase.richfaces.org/">http://showcase.richfaces.org/</ulink>.</simpara>
    <section id="sect-Component_Reference-Introduction-Libraries">
      <title>Libraries</title>
      <simpara>The RichFaces 5 framework is made up of a single tag library: the <literal><phrase role="classname">r</phrase></literal> library.</simpara>
      <variablelist>
        <varlistentry>
          <term><literal><phrase role="classname">r</phrase></literal>  library</term>
          <listitem>
            <simpara>The <literal><phrase role="classname">r</phrase></literal> tag library provides core Ajax and utility components, as well as ready-made, self-contained, rich user-interface components. These components have built-in Ajax support. By default, the components don’t require additional configuration in order to send requests or update, but can also be customized by plugging in utility behaviors.</simpara>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>
  <chapter id="chap-Component_Reference-Common_Ajax_attributes">
    <title>Common Ajax attributes</title>
    <simpara>The Ajax components share common attributes to perform similar functionality. Most RichFaces components that feature built-in Ajax support share these common attributes as well.</simpara>
    <simpara>Most attributes have default values, so they need not be explicitly set for the component to function in its default state. These attributes can be altered to customize the behavior of the component if necessary.</simpara>
    <section id="sect-Component_Reference-Common_Ajax_attributes-Data_processing">
      <title>Data processing</title>
      <simpara>The RichFaces Ajax script is built on a base of the JSF 2 Ajax script. As such, each time a request is sent, the data from the requesting component’s parent <acronym>JSF</acronym> form is submitted along with the <acronym>XMLHTTPRequest</acronym> object. The form data contains values from the input element and auxiliary information such as state-saving data.</simpara>
      <section id="sect-Component_Reference-Data_processing-execute">
        <title>
          <literal>
            <phrase role="varname">execute</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">execute</phrase></literal> attribute allows <acronym>JSF</acronym> processing to be limited to defined components. The <literal><phrase role="varname">execute</phrase></literal> attribute can point to an <literal><phrase role="varname">id</phrase></literal> identifier of a specific component to process. Components can also be identified through the use of Expression Language ( <acronym>EL</acronym>).</simpara>
        <simpara>Alternatively, the <literal><phrase role="varname">execute</phrase></literal> attribute accepts the following keywords:</simpara>
        <variablelist>
          <varlistentry>
            <term>
              <literal>
                <phrase role="code">@all</phrase>
              </literal>
            </term>
            <listitem>
              <simpara>Every component is processed.</simpara>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>
                <phrase role="code">@none</phrase>
              </literal>
            </term>
            <listitem>
              <simpara>No components are processed.</simpara>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>
                <phrase role="code">@this</phrase>
              </literal>
            </term>
            <listitem>
              <simpara>The requesting component with the <literal><phrase role="varname">execute</phrase></literal> attribute is processed. This is the default behavior for components.</simpara>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>
                <phrase role="code">@form</phrase>
              </literal>
            </term>
            <listitem>
              <simpara>The form that contains the requesting component is processed.</simpara>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <literal>
                <phrase role="code">@region</phrase>
              </literal>
            </term>
            <listitem>
              <simpara>The region that contains the requesting component is processed. Use the <literal><phrase role="sgmltag">&lt;r:region&gt;</phrase></literal> component as a wrapper element to specify regions.</simpara>
            </listitem>
          </varlistentry>
        </variablelist>
        <simpara>Some components make use of additional keywords. These are detailed under the relevant component entry in this book.</simpara>
      </section>
      <section id="sect-Component_Reference-Data_processing-bypassUpdates">
        <title>
          <literal>
            <phrase role="varname">bypassUpdates</phrase>
          </literal>
        </title>
        <simpara>If the <literal><phrase role="varname">bypassUpdates</phrase></literal> attribute is set to <literal>true</literal>, the Update Model phase of the request processing lifecycle is bypassed. This is useful if user input needs to be validated but the model does not need to be updated. This is the opposite functionality to the <literal><phrase role="varname">execute</phrase></literal> attribute in RichFaces.</simpara>
      </section>
    </section>
    <section id="sect-Component_Reference-Common_Ajax_attributes-Rendering">
      <title>Rendering</title>
      <section id="sect-Component_Reference-Rendering-render">
        <title>
          <literal>
            <phrase role="varname">render</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">render</phrase></literal> attribute provides a reference to one or more components on the page that need updating after an Ajax interaction. It uses the <literal><phrase role="methodname">UIComponent.findComponent()</phrase></literal> algorithm to find the components in the component tree using their <literal><phrase role="varname">id</phrase></literal> identifiers as a reference. Components can be referenced by their <literal><phrase role="varname">id</phrase></literal> identifier alone, or by their <literal><phrase role="varname">clientId</phrase></literal> identifier to make locating components more efficient. <xref linkend="exam-Component_Reference-render-render_example"/> shows both ways of referencing components. Each command button will correctly render the referenced panel grids, but the second button locates the references more efficiently with explicit <literal><phrase role="varname">clientId</phrase></literal> paths.</simpara>
        <example id="exam-Component_Reference-render-render_example">
          <title>render example</title>
          <programlisting language="XML" linenumbering="unnumbered">&lt;h:form id="form1"&gt;
    &lt;r:commandButton value="Basic reference" render="infoBlock, infoBlock2" /&gt;
    &lt;r:commandButton value="Specific reference" render=":infoBlock,:sv:infoBlock2" /&gt;
&lt;/h:form&gt;

&lt;h:panelGrid id="infoBlock"&gt;
    ...
&lt;/h:panelGrid&gt;

&lt;h:form id="sv"&gt;
    &lt;h:panelGrid id="infoBlock2"&gt;
        ...
    &lt;/h:panelGrid&gt;
&lt;/h:form&gt;
</programlisting>
        </example>
        <simpara>The value of the <literal><phrase role="varname">render</phrase></literal> attribute can also be an expression written using JavaServer Faces' Expression Language ( <acronym>EL</acronym>); this can either be a <literal><phrase role="type">Set</phrase></literal>, <literal><phrase role="type">Collection</phrase></literal>, <literal><phrase role="type">Array</phrase></literal>, or <literal><phrase role="type">String</phrase></literal>.</simpara>
        <note>
          <title>Differences between <acronym>JSF</acronym> Ajax and RichFaces Ajax</title>
          <simpara><acronym>JSF</acronym> evaluates all parameters during page rendering. As such, during a request from a page, all <literal><phrase role="varname">execute</phrase></literal> and <literal><phrase role="varname">render</phrase></literal> values are passed to the server from the client. In contrast, RichFaces evaluates these options at the server side during the current request.</simpara>
          <simpara>This means that with JSF, making changes during a request to a <literal><phrase role="varname">render</phrase></literal> value defined with EL will not influence the request. RichFaces, however, will always use the newer values.</simpara>
          <simpara>The RichFaces approach additionally increases data integrity. Parameters that are changed from the client side are re-evaluated on the server, where they cannot be changed.</simpara>
        </note>
        <important>
          <title>Conditionally-rendered component updates</title>
          <simpara>A common problem with using <literal><phrase role="varname">render</phrase></literal> occurs when the referenced component is conditionally rendered via the <literal><phrase role="varname">rendered</phrase></literal> attribute. If a component is not initially rendered, it does not have any HTML representation in the Document Object Model ( <acronym>DOM</acronym>). As such, when RichFaces renders the component via Ajax, the page does not update as the place for the update is not known.</simpara>
          <simpara>To work around this issue, wrap the component to be rendered in an <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component will receive the update and render the component as required.</simpara>
        </important>
      </section>
      <section id="sect-Component_Reference-Rendering-ajaxRendered">
        <title>
          <literal>
            <phrase role="varname">ajaxRendered</phrase>
          </literal>
        </title>
        <simpara>A component with <literal><phrase role="code">ajaxRendered="true"</phrase></literal> will be re-rendered with <emphasis>every</emphasis> Ajax request, even when not referenced by the requesting component’s <literal><phrase role="varname">render</phrase></literal> attribute. This can be useful for updating a status display or error message without explicitly requesting it.</simpara>
        <simpara>The <literal><phrase role="varname">ajaxRendered</phrase></literal> attribute’s functionality is the basis for the <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component is designed to mark parts of the page for automatic updating. Refer to <xref linkend="sect-Component_Reference-Containers-outputPanel"/> for details.</simpara>
        <simpara>Automatic rendering of such components can be repressed by adding <literal><phrase role="code">limitRender="true"</phrase></literal> to the requesting component, as described in <xref linkend="sect-Component_Reference-Rendering-limitRender"/>.</simpara>
      </section>
      <section id="sect-Component_Reference-Rendering-limitRender">
        <title>
          <literal>
            <phrase role="varname">limitRender</phrase>
          </literal>
        </title>
        <simpara>RichFaces Ajax-enabled components and Ajax behaviors with <literal><phrase role="code">limitRender="true"</phrase></literal> specified will <emphasis>not</emphasis> cause components with <literal><phrase role="code">ajaxRendered="true"</phrase></literal> to re-render, and only those components listed in the <literal><phrase role="varname">render</phrase></literal> attribute will be updated. This essentially overrides the <literal><phrase role="varname">ajaxRendered</phrase></literal> attribute in other components.</simpara>
        <simpara><xref linkend="exam-Component_Reference-data-Data_reference_example"/> describes two command buttons, a panel grid rendered by the buttons, and an output panel showing error messages. When the first button is clicked, the output panel is rendered even though it is not explicitly referenced with the <literal><phrase role="varname">render</phrase></literal> attribute. The second button, however, uses <literal><phrase role="code">limitRender="true"</phrase></literal> to override the output panel’s rendering and only render the panel grid.</simpara>
        <example id="exam-Component_Reference-limitRender-Rendering_example">
          <title>Rendering example</title>
          <programlisting language="XML" linenumbering="unnumbered">&lt;h:form id="form1"&gt;
    &lt;r:commandButton value="Normal rendering" render="infoBlock" /&gt;
    &lt;r:commandButton value="Limited rendering" render="infoBlock" limitRender="true" /&gt;
&lt;/h:form&gt;

&lt;h:panelGrid id="infoBlock"&gt;
    ...
&lt;/h:panelGrid&gt;

&lt;r:outputPanel ajaxRendered="true"&gt;
    &lt;h:messages /&gt;
&lt;/r:outputPanel&gt;
</programlisting>
        </example>
      </section>
    </section>
    <section id="sect-Component_Reference-Common_Ajax_attributes-Queuing_and_traffic_control">
      <title>Queuing and traffic control</title>
      <section id="sect-Component_Reference-Queuing_and_traffic_control-requestDelay">
        <title>
          <literal>
            <phrase role="varname">requestDelay</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">requestDelay</phrase></literal> attribute specifies an amount of time in milliseconds for the request to wait in the queue before being sent to the server. If a similar request is added to the queue before the delay is over, the original request is replaced with the new one.</simpara>
      </section>
      <section id="sect-Component_Reference-Queuing_and_traffic_control-ignoreDupResponses">
        <title>
          <literal>
            <phrase role="varname">ignoreDupResponses</phrase>
          </literal>
        </title>
        <simpara>When set to <literal>true</literal>, the <literal><phrase role="varname">ignoreDupResponses</phrase></literal> attribute causes responses from the server for the request to be ignored if there is another similar request in the queue. This avoids unnecessary updates on the client when another update is expected. The request is still processed on the server, but if another similar request has been queued then no updates are made on the client.</simpara>
      </section>
    </section>
    <section id="sect-Component_Reference-Common_Ajax_attributes-Events_and_JavaScript_interactions">
      <title>Events and JavaScript interactions</title>
      <simpara>JSF provides global <literal><phrase role="varname">jsf.ajax.onError</phrase></literal> and <literal><phrase role="varname">jsf.ajax.onEvent</phrase></literal> events to define handlers (the <literal><phrase role="varname">jsf.ajax.onEvent</phrase></literal> event is used for all <literal><phrase role="varname">begin</phrase></literal>, <literal><phrase role="varname">success</phrase></literal>, and <literal><phrase role="varname">complete</phrase></literal> events). RichFaces adds event-specific attributes at the component level.</simpara>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-onsubmit">
        <title>
          <literal>
            <phrase role="varname">onbeforesubmit</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">onbeforesubmit</phrase></literal> event attribute invokes the event listener <emphasis>before</emphasis> an Ajax request is sent. The request is canceled if the event listener defined for the <literal><phrase role="varname">onbeforesubmit</phrase></literal> event returns <literal>false</literal>.</simpara>
      </section>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-onbegin">
        <title>
          <literal>
            <phrase role="varname">onbegin</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">onbegin</phrase></literal> event attribute invokes the event listener <emphasis>after</emphasis> an Ajax request is sent.</simpara>
      </section>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-onbeforedomupdate">
        <title>
          <literal>
            <phrase role="varname">onbeforedomupdate</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">onbeforedomupdate</phrase></literal> event attribute invokes the event listener after an Ajax response has been returned but <emphasis>before</emphasis> the <acronym>DOM</acronym> tree of the browser is updated.</simpara>
      </section>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-oncomplete">
        <title>
          <literal>
            <phrase role="varname">oncomplete</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">oncomplete</phrase></literal> event attribute invokes the event listener after an Ajax response has been returned <emphasis>and</emphasis> the <acronym>DOM</acronym> tree of the browser has been updated.</simpara>
        <section id="sect-Component_Reference-Events_and_JavaScript_interactions-data">
          <title>
            <literal>
              <phrase role="varname">data</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="varname">data</phrase></literal> attribute allows additional data to be handled with the <literal><phrase role="varname">oncomplete</phrase></literal> event. Use <acronym>JSF</acronym> Expression Language ( <acronym>EL</acronym>) to reference the property of the managed bean, and its value will be serialized in JavaScript Object Notation ( <acronym>JSON</acronym>) and returned to the client side. The property can then be referenced through the <literal><phrase role="parameter">event.data</phrase></literal> variable in the event attribute definitions. Both primitive types and complex types such as arrays and collections can be serialized and used with <literal><phrase role="varname">data</phrase></literal>.</simpara>
          <example id="exam-Component_Reference-data-Data_reference_example">
            <title>Data reference example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:commandButton value="Update" oncomplete="showTheName(event.data.name)" data="#{userBean.name}" /&gt;
</programlisting>
          </example>
        </section>
      </section>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-onerror">
        <title>
          <literal>
            <phrase role="varname">onerror</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="varname">onerror</phrase></literal> event attribute invokes the event listener when an error has occurred during Ajax communications.</simpara>
      </section>
      <section id="sect-Component_Reference-Events_and_JavaScript_interactions-Registering_event_callbacks_with_jQuery">
        <title>Registering event callbacks with jQuery</title>
        <simpara>RichFaces allows one to register callbacks for the events listed above using jQuery:</simpara>
        <itemizedlist>
          <listitem>
            <simpara><literal><phrase role="varname">ajaxsubmit</phrase></literal>: triggered <emphasis>before</emphasis> an Ajax request is sent.</simpara>
          </listitem>
          <listitem>
            <simpara><literal><phrase role="varname">ajaxbegin</phrase></literal>: triggered <emphasis>after</emphasis> an Ajax request is sent.</simpara>
          </listitem>
          <listitem>
            <simpara><literal><phrase role="varname">ajaxbeforedomupdate</phrase></literal>: triggered after an Ajax response has been returned but <emphasis>before</emphasis> the DOM tree of the browser has been updated.</simpara>
          </listitem>
          <listitem>
            <simpara><literal><phrase role="varname">ajaxcomplete</phrase></literal>: triggered after an Ajax response has been returned <emphasis>and</emphasis> the DOM tree of the browser has been updated.</simpara>
          </listitem>
        </itemizedlist>
        <simpara>The event callback can be registered either on a form or a whole page:</simpara>
        <programlisting language="Java" linenumbering="unnumbered">&lt;h:outputScript&gt;
jQuery(document).ready(function() {
	jQuery(#{r:element('form_id')}).on("ajaxsubmit", function() {
	    // the callback will be triggered before the form is submitted using JSF AJAX
    	console.log("ajaxsubmit");
	});


    jQuery(document).on("ajaxcomplete", function() {
        // the callback will be triggered for each completed JSF AJAX for the current page
    	console.log("ajaxcomplete");
	});
}
&lt;/h:outputScript&gt;</programlisting>
      </section>
    </section>
  </chapter>
  <part id="part-Component_Reference-Ajax_control_components">
    <title>Ajax control components</title>
    <chapter id="chap-Component_Reference-Actions">
      <title>Actions</title>
      <simpara>This chapter details the basic components that respond to a user action and submit an Ajax request.</simpara>
      <section id="sect-Component_Reference-Actions-ajax">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:ajax&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:ajax&gt;</phrase></literal> behavior allows Ajax capability to be added to a non-Ajax component. The non-Ajax component must implement the <literal><phrase role="interfacename">ClientBehaviorHolder</phrase></literal> interface for all the event attributes that support behavior rendering.</simpara>
        <section id="sect-Component_Reference-ajax-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:ajax&gt;</phrase></literal> behavior is placed as a direct child to the component that requires Ajax support.</simpara>
          <simpara>Point the <literal><phrase role="varname">event</phrase></literal> attribute to the standard JSF event that triggers the behavior. If the <literal><phrase role="varname">event</phrase></literal> attribute is not defined, the behavior is triggered on the event that normally provides interaction behavior for the parent component.</simpara>
          <example id="exam-Component_Reference-ajax-ajax_example">
            <title><literal><phrase role="sgmltag">&lt;r:ajax&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:panelGrid columns="2"&gt;
    &lt;h:inputText id="myinput" value="#{userBean.name}"&gt;
        &lt;r:ajax event="keyup" render="outtext" /&gt;
    &lt;/h:inputText&gt;
    &lt;h:outputText id="outtext" value="#{userBean.name}" /&gt;
&lt;/h:panelGrid&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-ajax-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-type</phrase></literal>: <literal><phrase role="classname">org.ajax4jsf.behavior.Ajax</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-id</phrase></literal>: <literal><phrase role="classname">org.ajax4jsf.behavior.Ajax</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.AjaxHandler</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-class</phrase></literal>: <literal><phrase role="classname">org.ajax4jsf.component.behavior.AjaxBehavior</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-class</phrase></literal>: <literal><phrase role="classname">org.ajax4jsf.renderkit.AjaxBehaviorRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-param">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:param&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> behavior combines the functionality of the JavaServer Faces ( <acronym>JSF</acronym>) components <literal><phrase role="sgmltag">&lt;f:param&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;f:actionListener&gt;</phrase></literal>.</simpara>
        <section id="sect-Component_Reference-param-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage of the <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> requires three main attributes:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">value</phrase></literal> attribute is the initial value of the parameter.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">assignTo</phrase></literal> attribute defines the bean property. The property is updated if the parent command component performs an action event during the <emphasis>Process Request</emphasis> phase.</simpara>
            </listitem>
          </itemizedlist>
          <simpara><xref linkend="exam-Component_Reference-param-param_example"/> shows a simple implementation along with the accompanying managed bean.</simpara>
          <example id="exam-Component_Reference-param-param_example">
            <title><literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form id="form"&gt;
    &lt;r:commandButton value="Set name to Alex" reRender="rep"&gt;
        &lt;r:param name="username" value="Alex" assignTo="#{paramBean.name}"/&gt;
    &lt;/r:commandButton&gt;
    &lt;h:outputText id="rep" value="Name: #{paramBean.name}"/&gt;
&lt;/h:form&gt;
</programlisting>
            <programlisting language="Java" linenumbering="unnumbered">public class ParamBean {
    private String name = "John";

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
</programlisting>
            <simpara>When the <guibutton>Set name to Alex</guibutton> button is pressed, the application sets the <literal><phrase role="varname">name</phrase></literal> parameter of the bean to <literal>Alex</literal>, and displays the name in the output field.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-param-Interoperability">
          <title>Interoperability</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> tag can be used with non-Ajax components in addition to Ajax components. This includes components which are working through the <literal><phrase role="code">GET</phrase></literal> request, such as the <literal><phrase role="sgmltag">&lt;h:link&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;h:button&gt;</phrase></literal> components. In this way, data model values can also be updated without any Java code on the server side.</simpara>
          <simpara>The <literal><phrase role="varname">converter</phrase></literal> attribute can be used to specify how to convert the value before it is submitted to the data model. The property is assigned the new value during the <emphasis>Update Model</emphasis> phase.</simpara>
          <note>
            <title>Validation failure</title>
            <simpara>If the validation of the form fails, the <emphasis>Update Model</emphasis> phase will be skipped and the property will not be updated.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-param-Passing_client-side_parameters">
          <title>Passing client-side parameters</title>
          <simpara>Variables from JavaScript functions can be used for the <literal><phrase role="varname">value</phrase></literal> attribute. In such an implementation, the <literal><phrase role="varname">noEscape</phrase></literal> attribute should be set to <literal>true</literal>. Using <literal><phrase role="code">noEscape="true"</phrase></literal>, the <literal><phrase role="varname">value</phrase></literal> attribute can contain any JavaScript expression or JavaScript function invocation, and the result will be sent to the server as the <literal><phrase role="varname">value</phrase></literal> attribute.</simpara>
          <example id="exam-Component_Reference-param-Passing_client-side_parameters">
            <title>Passing client-side parameters</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
   &lt;r:commandButton value="Show Screen Size" render="infoPanel"&gt;
      &lt;r:param name="w" value="screen.width"
                 assignTo="#{paramBean.screenWidth}" noEscape="true" /&gt;
      &lt;r:param name="h" value="screen.height"
                 assignTo="#{paramBean.screenHeight}" noEscape="true" /&gt;
   &lt;/r:commandButton&gt;

   &lt;h:panelGrid columns="2" id="infoPanel"&gt;
      &lt;h:outputText value="Width:" /&gt;
      &lt;h:outputText value="#{paramBean.screenWidth}" /&gt;
      &lt;h:outputText value="Height:" /&gt;
      &lt;h:outputText value="#{paramBean.screenHeight}" /&gt;
   &lt;/h:panelGrid&gt;
&lt;/h:form&gt;
</programlisting>
            <simpara>The command button triggers the <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> behaviors and renders the output text. The <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> behaviors pass client-side parameters for the screen width and height through the backing bean. These parameters are then used to populate the output text values.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-param-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Parameter</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIParameter</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Parameter</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.ParameterHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-actionListener">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:actionListener&gt;</phrase>
          </literal>
        </title>
        <simpara>Use the <literal><phrase role="sgmltag">&lt;r:actionListener&gt;</phrase></literal> tag to register an <literal><phrase role="classname">ActionListener</phrase></literal> class on a parent action component. The class provided as a listener must implement the <literal><phrase role="interfacename">javax.faces.event.ActionListener</phrase></literal> interface. Multiple listener methods can be registered on an action component in this way.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:actionListener&gt;</phrase></literal> tag differs from the standard JSF tag by allowing a listener method to be defined instead of just a class. Use the <literal><phrase role="varname">listener</phrase></literal> attribute to define the listener method.</simpara>
      </section>
      <section id="sect-Component_Reference-Actions-commandButton">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:commandButton&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:commandButton&gt;</phrase></literal> component is similar to the JavaServer Faces ( <acronym>JSF</acronym>) <literal><phrase role="sgmltag">&lt;h:commandButton&gt;</phrase></literal> component, but additionally includes Ajax support.</simpara>
        <figure id="figu-Component_Reference-commandButton-commandButton">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:commandButton&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-commandButton-commandButton.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-commandButton-commandButton</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <note>
          <title>The <literal><phrase role="sgmltag">&lt;r:commandButton&gt;</phrase></literal> component executes the complete form</title>
          <simpara>Button controls are typically used to perform complete form submissions for data storing. As a consequence, the <literal><phrase role="sgmltag">&lt;r:commandButton&gt;</phrase></literal> component has the <literal><phrase role="code">execute="@form"</phrase></literal> setting by default. To limit rendering to a different scope, redefine the <literal><phrase role="varname">execute</phrase></literal> attribute.</simpara>
        </note>
        <section id="sect-Component_Reference-commandButton-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:commandButton&gt;</phrase></literal> requires only the <literal><phrase role="varname">value</phrase></literal> attribute to function. Use the <literal><phrase role="varname">value</phrase></literal> attribute to specify the text of the button.</simpara>
          <simpara>By default, the <literal><phrase role="sgmltag">&lt;r:commandButton&gt;</phrase></literal> uses the <literal><phrase role="varname">click</phrase></literal> event instead of the <literal><phrase role="varname">submit</phrase></literal> event.</simpara>
        </section>
        <section id="sect-Component_Reference-commandButton-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CommandButton</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICommandButton</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Command</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CommandButtonRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-commandLink">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:commandLink&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:commandLink&gt;</phrase></literal> component is similar to the JavaServer Faces ( <acronym>JSF</acronym>) <literal><phrase role="sgmltag">&lt;h:commandLink&gt;</phrase></literal> component, except that it includes plugged-in Ajax behavior.</simpara>
        <figure id="figu-Component_Reference-commandLink-commandLink">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:commandLink&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-commandLink-commandLink.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-commandLink-commandLink</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <note>
          <title>The <literal><phrase role="sgmltag">&lt;r:commandLink&gt;</phrase></literal> component executes the complete form</title>
          <simpara>Link controls are typically used to perform complete form submissions for data storing. As a consequence, the <literal><phrase role="sgmltag">&lt;r:commandLink&gt;</phrase></literal> component has the <literal><phrase role="code">execute="@form"</phrase></literal> setting by default. To limit rendering to a different scope, redefine the <literal><phrase role="varname">execute</phrase></literal> attribute.</simpara>
        </note>
        <section id="sect-Component_Reference-commandLink-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:commandLink&gt;</phrase></literal> requires only the <literal><phrase role="varname">value</phrase></literal> attribute to function. Use the <literal><phrase role="varname">value</phrase></literal> attribute to specify the text of the link.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:commandLink&gt;</phrase></literal> uses the <literal><phrase role="varname">click</phrase></literal> event instead of the <literal><phrase role="varname">submit</phrase></literal> event.</simpara>
        </section>
        <section id="sect-Component_Reference-commandLink-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CommandLink</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICommandLink</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Command</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CommandLinkRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-jsFunction">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase></literal> component performs Ajax requests directly from JavaScript code and retrieves server-side data. The server-side data is returned in JavaScript Object Notation ( <acronym>JSON</acronym>) format prior to the execution of any JavaScript code defined using the <literal><phrase role="varname">oncomplete</phrase></literal> attribute.</simpara>
        <section id="sect-Component_Reference-jsFunction-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase></literal> component requires the <literal><phrase role="varname">data</phrase></literal> attribute. Use the <literal><phrase role="varname">data</phrase></literal> attribute to define where the retrieved server-side data is stored.</simpara>
          <simpara><xref linkend="exam-Component_Reference-jsFunction-jsFunction_example"/> shows how an Ajax request can be initiated from the JavaScript and a partial page update performed. The JavaScript function can be invoked with the data returned by the Ajax response.</simpara>
          <example id="exam-Component_Reference-jsFunction-jsFunction_example">
            <title><literal><phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;table width="400"&gt;
   &lt;tbody&gt;
      &lt;tr&gt;
         &lt;td&gt;
            &lt;span onmouseover="updateName('Kate')"
                  onmouseout="updateName('')"&gt;Kate&lt;/span&gt;
         &lt;/td&gt;
         &lt;td&gt;
            &lt;span onmouseover="updateName('John')"
                  onmouseout="updateName('')"&gt;John&lt;/span&gt;
         &lt;/td&gt;
         &lt;td&gt;
            &lt;span onmouseover="updateName('Alex')"
                  onmouseout="updateName('')"&gt;Alex&lt;/span&gt;
         &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td colspan="3"&gt;
            Name: &lt;b&gt;&lt;h:outputText id="showname" value="#{functionBean.text}" /&gt;&lt;/b&gt;
         &lt;/td&gt;
      &lt;/tr&gt;
   &lt;/tbody&gt;
&lt;/table&gt;
&lt;h:form&gt;
   &lt;r:jsFunction name="updateName" render="showname"&gt;
      &lt;r:param name="name" assignTo="#{functionBean.text}"/&gt;
   &lt;/r:jsFunction&gt;
&lt;/h:form&gt;
</programlisting>
            <simpara>The output text for the name is changed depending on which table cell the user hovers over with the mouse. The <literal><phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase></literal> component manages the updating and display of the name.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-jsFunction-Parameters_and_JavaScript">
          <title>Parameters and JavaScript</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:jsFunction&gt;</phrase></literal> component allows the use of the <literal><phrase role="sgmltag">&lt;r:param&gt;</phrase></literal> component or the JavaServer Faces <literal><phrase role="sgmltag">&lt;f:param&gt;</phrase></literal> component to pass any number of parameters for the JavaScript function.</simpara>
        </section>
        <section id="sect-Component_Reference-jsFunction-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Function</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIFunction</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Command</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.FunctionRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-poll">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:poll&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:poll&gt;</phrase></literal> component allows periodical sending of Ajax requests to the server. It is used for repeatedly updating a page at specific time intervals.</simpara>
        <section id="sect-Component_Reference-poll-Timing_options">
          <title>Timing options</title>
          <simpara>The <literal><phrase role="varname">interval</phrase></literal> attribute specifies the time in milliseconds between requests. The default for this value is 1000 ms (1 second).</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:poll&gt;</phrase></literal> component can be enabled and disabled using the <literal><phrase role="varname">enabled</phrase></literal> attribute. Using Expression Language ( <acronym>EL</acronym>), the <literal><phrase role="varname">enabled</phrase></literal> attribute can point to a bean property to apply a particular attribute value.</simpara>
        </section>
        <section id="sect-Component_Reference-poll-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Poll</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPoll</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Poll</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PollRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.AjaxPollHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Actions-push">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:push&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component performs real-time updates on the client side from events triggered at the server side. The events are pushed out to the client through the RichFaces messaging queue. When the <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component is triggered by a server event, it can in turn cause Ajax updates and changes.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component uses the Comet model for pushing data to the client.</simpara>
        <section id="sect-Component_Reference-push-Setting_up_push">
          <title>Setting up Push</title>
          <simpara>Using the Push component requires configuration steps which depends on an environment in which the Push is used:</simpara>
          <section id="sect-Component_Reference-push-Installing_runtime_dependencies">
            <title>Installing runtime dependencies</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> uses an Atmosphere framework for transporting messages. In order to use the Atmosphere on the server-side, it is necessary to add Atmosphere libraries into a project.</simpara>
            <simpara>In a Maven-based project, you should add <literal><phrase role="code">richfaces-push-depchain</phrase></literal> as a runtime dependency:</simpara>
            <programlisting language="XML" linenumbering="unnumbered"> &lt;dependency&gt;
    &lt;groupId&gt;org.richfaces&lt;/groupId&gt;
    &lt;artifactId&gt;richfaces-push-depchain&lt;/artifactId&gt;
    &lt;type&gt;pom&lt;/type&gt;
    &lt;version&gt;5.0.0-SNAPSHOT&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;</programlisting>
            <simpara>By declarating a dependency chain, all the required runtime dependencies such as <literal><phrase role="code">atmosphere-runtime</phrase></literal> will be added transitively to your project.</simpara>
            <simpara>For non-Maven-based projects, it is necessary to add dependencies manually - check "RichFaces Developer Guide", section "Project libraries and dependencies" for details.</simpara>
          </section>
          <section id="sect-Component_Reference-push-Registering_Push_servlet">
            <title>Registering Push servlet</title>
            <simpara>The Push requires a <literal><phrase role="code">PushServlet</phrase></literal> registered in web application and listening for Push client connections.</simpara>
            <simpara>In the Servlets 3.0 and higher environments, the servlet will be registered automatically.</simpara>
            <simpara>However in the Servlets 2.5 and lower environments, the servlet needs to be registered manually in <literal><phrase role="code">web.xml</phrase></literal>:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;!-- Push Servlet - listens for user sessions --&gt;
&lt;servlet&gt;
    &lt;servlet-name&gt;Push Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.richfaces.servlet.PushServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Push Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/__richfaces_push&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;

&lt;!-- setups servlet-mapping in RichFaces configuration --&gt;
&lt;context-param&gt;
    &lt;param-name&gt;org.richfaces.push.handlerMapping&lt;/param-name&gt;
    &lt;param-value&gt;/__richfaces_push&lt;/param-value&gt;
&lt;/context-param&gt;</programlisting>
            <note>
              <title>Manual registration of servlet in Servlets 3.0</title>
              <simpara>When you attempt to register the Push servlet manually in Servlet 3.0 environments, RichFaces will detect that the Push servlet is already registered and avoid initializing it again.</simpara>
              <simpara>However, be sure to setup the Push servlet to support asynchronous requests - modify the servlet registration from the previous <literal><phrase role="code">web.xml</phrase></literal> snippet as follows:</simpara>
              <programlisting language="XML" linenumbering="unnumbered">&lt;servlet&gt;
    &lt;servlet-name&gt;Push Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;org.richfaces.servlet.PushServlet&lt;/servlet-class&gt;
    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;async-supported&gt;true&lt;/async-supported&gt;
&lt;/servlet&gt;</programlisting>
            </note>
            <note>
              <title>Switching to Blocking I/O instead of asynchronous servlets</title>
              <simpara>Although a container you use supports Servlets 3.0, you may experience problems with using asynchronous servlets.</simpara>
              <simpara>It is possible to force the Atmosphere to use a blocking I/O approach with the following <literal><phrase role="code">web.xml</phrase></literal> configuration:</simpara>
              <programlisting language="XML" linenumbering="unnumbered">&lt;context-param&gt;
    &lt;param-name&gt;org.atmosphere.useBlocking&lt;/param-name&gt;
    &lt;param-value&gt;true&lt;/param-value&gt;
&lt;/context-param&gt;</programlisting>
            </note>
          </section>
        </section>
        <section id="sect-Component_Reference-push-Server_side_Push_methods">
          <title>Server-side Push methods</title>
          <simpara>The Push events can be fired on the server-side in several ways:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><emphasis>TopicsContext</emphasis> - accesses a RichFaces message queue directly</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>Push CDI</emphasis> - uses the CDI Event mechanism to fire messages</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>Push JMS</emphasis> - the RichFaces Push consumes messages from an enterprise messaging system and exposes them to the client (tightly coupled with the JMS runtime)</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-push-Client_side_Push_methods">
          <title>Client-side Push methods</title>
          <simpara>On the client side, push notifications may be processed in the following ways:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="code">ondataavailable</phrase></literal> event handler (serialized message is available)</simpara>
            </listitem>
            <listitem>
              <simpara>Client behaviors attached to <literal><phrase role="code">dataavailable</phrase></literal> event</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-push-Push_Topics">
          <title>Push Topics</title>
          <simpara>The Push messages are delivered to the client based on a <literal><phrase role="code">TopicKey</phrase></literal>'s name (e.g. <literal><phrase role="code">someTopic</phrase></literal>).</simpara>
          <simpara>The <literal><phrase role="code">TopicKey</phrase></literal> can optionally include a subtopic name (e.g. <literal><phrase role="code">subtopic@anotherTopic</phrase></literal>).</simpara>
          <simpara>On the client side, the topic is represted by an <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal>'s attribute <literal><phrase role="varname">address</phrase></literal>.</simpara>
          <note>
            <title>Push Topic relates to JMS topic</title>
            <simpara>The format for the name of the push topic is very close to the JMS topic name and thus enables a seamless transport of JMS messages to the RichFaces message queue.</simpara>
          </note>
          <note>
            <title>Topics with EL expressions</title>
            <simpara>Since the topic key can contain EL expressions, it is possible to achieve dynamic end-points (e.g. addressing specific clients).</simpara>
            <simpara>You need to push a message by using <literal><phrase role="code">TopicContext.publish(TopicKey key, Object message)</phrase></literal> or using CDI events to publish message to dynamically evaluated topic key.</simpara>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal>'s attribute <literal><phrase role="varname">address</phrase></literal> accepts EL expressions.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-push-Handling_a_push_message">
          <title>Handling a push message</title>
          <simpara>A push message sent from the server to the <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component on the client will cause it to trigger any event handlers defined using the <literal><phrase role="varname">dataavailable</phrase></literal> event handler.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component should also include the <literal><phrase role="varname">onerror</phrase></literal> event handler to inform the user when an error has occurred with the push messages.</simpara>
          <simpara><literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> can be used for either immediate processing of messages (like in the previous example) or it can trigger a partial page update. Check out following samples:</simpara>
          <example id="exam-Component_Reference-push-Handling_a_push_message">
            <title>Handling a push message</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:push address="chat"
          onerror="alert(event.rf.data)"
          ondataavailable="chat.addMessage(event.rf.data)" /&gt;
</programlisting>
            <simpara>This example uses the <literal><phrase role="varname">dataavailable</phrase></literal> event attribute with some JavaScript to update messages in a chat room. The <literal><phrase role="parameter">event.rf.data</phrase></literal> parameter contains Push message data serialized to JavaScript.</simpara>
          </example>
          <example id="exam-Component_Reference-push-Updating_DOM_for_each_push_notification">
            <title>Updating DOM for each push message</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:push address="chat"
          onerror="alert(event.rf.data)"&gt;
    &lt;r:ajax event="datavailable" render="chat" /&gt;
&lt;/r:push&gt;</programlisting>
            <simpara>This example uses the <literal><phrase role="varname">dataavailable</phrase></literal> event handler to trigger an AJAX request and a partial page update.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-push-Handling_a_push_subscription">
          <title>Handling a push subscription</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> component establishes connection with server on complete page load (when document is ready).</simpara>
          <simpara>It means that the application starts to handle push messages once the page is completely loaded.</simpara>
          <simpara>However time-critical applications may require keeping client stricly synchronized with the server state.</simpara>
          <simpara>For such applications you may use <literal><phrase role="varname">onsubscribed</phrase></literal> event handler, which is triggered every time the given component is successfully subscribed to the address/topic it listens to (on a page load and on each AJAX re-render).</simpara>
          <example id="exam-Component_Reference-push-Handling_a_push_subscription">
            <title>The time-critical updates in stock application</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:push address="stockUpdates"
          onerror="alert(event.rf.data)"&gt;
    &lt;r:ajax event="dataavailable" render="stocksTable" /&gt;
	&lt;r:ajax event="subscribed" render="stocksTable" /&gt;
&lt;/r:push&gt;
</programlisting>
            <simpara>This example uses the <literal><phrase role="varname">subscribed</phrase></literal> event to update the table content once the push component is subscribed to the topic, ensuring that the table content is not stale.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-push-Using_TopicsContext_to_publish_message">
          <title>Using TopicsContext to publish message</title>
          <simpara>Messages could be produced using the <literal><phrase role="code">TopicsContext</phrase></literal> interface directly as in the following sample:</simpara>
          <programlisting language="Java" linenumbering="unnumbered">private TopicKey topicKey = new TopicKey("chat");

public void initializeTopic() {
	TopicsContext topicsContext = TopicsContext.lookup();
	topicsContext.getOrCreateTopic(topicKey);
}

public void sendMessage(String message) throws MessageException {
    TopicsContext topicsContext = TopicsContext.lookup();
    topicsContext.publish(topicKey, message);
}</programlisting>
          <simpara>A topic needs to first be created using <literal><phrase role="code">TopicsContext#getOrCreate(TopicKey)</phrase></literal> where <literal><phrase role="code">TopicKey</phrase></literal> is the name of the topic. A message to the topic can be sent using the method: <literal><phrase role="code">TopicsContext#publish(topicKey, message)</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-push-Push_CDI_Integration">
          <title>Integrating Push with CDI events</title>
          <simpara>An alternative way of producing messages is to use the CDI event mechanism.</simpara>
          <simpara>Push notifications can be produced by annotating a CDI event injection point with the <literal><phrase role="code">@Push</phrase></literal> annotation, which specifies an end-point (topic name).</simpara>
          <simpara>The payload of the message is the serialized object sent using the CDI event interface ( <literal><phrase role="code">Event.fire(T object)</phrase></literal>).</simpara>
          <programlisting language="Java" linenumbering="unnumbered">@Inject
@Push(topic = "chat")
Event&lt;String&gt; pushEvent;

public void sendMessage(String message) {
    pushEvent.fire(message);
}</programlisting>
        </section>
        <section id="sect-Component_Reference-push-Push_and_JMS_integration">
          <title>Push and JMS integration</title>
          <simpara>An integration of the RichFaces Push and the Java Messaging Service ( JMS) allows to write robust interactive applications.</simpara>
          <section id="_enabling_jms_integraction">
            <title>Enabling JMS integraction</title>
            <simpara>The JMS integration needs to be enabled in <literal><phrase role="code">web.xml</phrase></literal> with a following configuration:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;context-param&gt;
    &lt;param-name&gt;org.richfaces.push.jms.enabled&lt;/param-name&gt;
    &lt;param-value&gt;true&lt;/param-value&gt;
&lt;/context-param&gt;</programlisting>
          </section>
          <section id="_configuring_jms_backend">
            <title>Configuring JMS backend</title>
            <simpara>The JMS instance on the back-end must be configured to work with your <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> components.</simpara>
            <note>
              <title>Configuring JMS on JBoss Application Server</title>
              <simpara>Refer to the <emphasis role="strong"><emphasis>JBoss Application Server Administration Console Guide</emphasis></emphasis> for details on managing JBoss Application Server through the Administration Console.</simpara>
            </note>
            <example id="exam-Component_Reference-push-JMS_server_configuration">
              <title>JMS server configuration</title>
              <simpara>This simple example describes the JMS server configuration required for a pushing server date to the client.</simpara>
              <simpara>The JMS server needs to be setup in order to propagate JMS messages to Push components. Create a new JMS topic using the following settings:</simpara>
              <informaltable tabstyle="horizontal" frame="none" colsep="0" rowsep="0">
                <tgroup cols="2">
                  <colspec colwidth="15*"/>
                  <colspec colwidth="85*"/>
                  <tbody valign="top">
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Name:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>datePush</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>JNDI name:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>/topic/datePush</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara/>
                      </entry>
                      <entry>
                        <simpara>Use the default settings for other options.</simpara>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
              <simpara>Add a single role for the topic in the same form using the following settings:</simpara>
              <informaltable tabstyle="horizontal" frame="none" colsep="0" rowsep="0">
                <tgroup cols="2">
                  <colspec colwidth="15*"/>
                  <colspec colwidth="85*"/>
                  <tbody valign="top">
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Name:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>guest</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Send:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Consume:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Create subscriber:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Delete subscriber:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Create durable subscriber:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                    <row>
                      <entry>
                        <simpara>
                          <guilabel>Delete durable subscriber:</guilabel>
                        </simpara>
                      </entry>
                      <entry>
                        <simpara>true</simpara>
                      </entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable>
            </example>
            <simpara>Ensure the <guilabel>Create durable subscriber</guilabel> and the <guilabel>Delete durable subscriber</guilabel> options are set to <guilabel>true</guilabel> for proper push functionality.</simpara>
            <note>
              <title>Durable subscriptions</title>
              <simpara>Durable subscriptions receive all events, including those events which were sent while the push component was not connected.</simpara>
              <simpara>Refer to <emphasis role="strong"><emphasis>JMS Documentation</emphasis></emphasis> for details on configuring the JMS Server.</simpara>
            </note>
            <note>
              <title>JMS integration with custom configuration</title>
              <simpara>RichFaces looks for the JMS Connection Factory on the JNDI context <literal><phrase role="code">/ConnectionFactory</phrase></literal> by default.</simpara>
              <simpara>The prefix <literal><phrase role="code">/topic</phrase></literal> is used for deriving JMS topic names from Push topic names.</simpara>
              <simpara>When integrating component into an enterprise system, this defaults can be changed.</simpara>
              <simpara>Use following <literal><phrase role="code">web.xml</phrase></literal> parameters to change default values: <literal><phrase role="code">org.richfaces.push.jms.connectionFactory</phrase></literal>, <literal><phrase role="code">org.richfaces.push.jms.topicsNamespace</phrase></literal>.</simpara>
              <simpara>When RichFaces obtains a connection, an empty user name is used with an empty password.</simpara>
              <simpara>Use following <literal><phrase role="code">web.xml</phrase></literal> parameters or equivalent JVM parameters to change default values: <literal><phrase role="code">org.richfaces.push.jms.connectionUsername</phrase></literal>, <literal><phrase role="code">org.richfaces.push.jms.connectionPassword</phrase></literal>.</simpara>
            </note>
          </section>
          <section id="_sending_and_receiving_push_messages_using_jms">
            <title>Sending and receiving Push messages using JMS</title>
            <simpara>The JMS message which should be propagated to Push needs to be created with the method <literal><phrase role="code">session.createObjectMessage(message);</phrase></literal>.</simpara>
            <simpara>The message could be then published using <literal><phrase role="code">publisher.publish(message);</phrase></literal> like in a following example:</simpara>
            <example id="exam-Component_Reference-push-Sending_messages_using_JMS">
              <title>Sending messages using JMS</title>
              <programlisting language="Java" linenumbering="unnumbered">TopicConnection connection;
TopicSession session;
TopicPublisher publisher;

public void sendCurrentDate() throws JMSException {
    String currentDate = new Date().toString();
    ObjectMessage message = session.createObjectMessage(message);
    publisher.publish(message);
}

// messaging needs to be initialized before using method #sendCurrentDate()
private void initializeMessaging() throws JMSException, NamingException {
    if (connection == null) {
        TopicConnectionFactory tcf = (TopicConnectionFactory) InitialContext.doLookup("java:/ConnectionFactory");
        connection = tcf.createTopicConnection();
    }
    if (session == null) {
        session = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
    }
    if (topic == null) {
        topic = InitialContext.doLookup("topic/datePush");
    }
    if (publisher == null) {
        publisher = session.createPublisher(topic);
    }
}</programlisting>
            </example>
            <simpara>Receiving messages from a JMS queue doesn’t differ from receiving messages sent by the <literal><phrase role="code">TopicsContext</phrase></literal> or using CDI events.</simpara>
            <example id="exam-Component_Reference-push-Receiving_messages_using_JMS">
              <title>Receiving messages using JMS</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:push id="datePush" address="datePush"
            ondataavailable="jQuery(#{r:element('serverDate')}).text(event.rf.data)" /&gt;

&lt;r:outputPanel id="serverDate" layout="block"&gt;
    &lt;i&gt;waiting for event...&lt;/i&gt;
&lt;/r:outputPanel&gt;</programlisting>
            </example>
            <simpara>The above example demonstrates a simple use of the <literal><phrase role="sgmltag">&lt;r:push&gt;</phrase></literal> tag that causes an immediate update of the page content.</simpara>
          </section>
        </section>
        <section id="sect-Component_Reference-push-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Push</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPush</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Push</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PushRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Resources">
      <title>Resources</title>
      <simpara>This chapter covers those components used to handle and manage resources and beans.</simpara>
      <section id="sect-Component_Reference-Resources-mediaOutput">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> component is used for generating images, video, sounds, and other resources defined on the fly.</simpara>
        <section id="sect-Component_Reference-mediaOutput-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="varname">createContent</phrase></literal> attribute points to the method used for generating the displayed content.</simpara>
          <simpara>If necessary, the <literal><phrase role="varname">value</phrase></literal> attribute can be used to pass input data to the content generation method specified with <literal><phrase role="varname">createContent</phrase></literal>. The <literal><phrase role="varname">cacheable</phrase></literal> attribute specifies whether the resulting content will be cached or not.</simpara>
        </section>
        <section id="sect-Component_Reference-mediaOutput-Handling_content">
          <title>Handling content</title>
          <simpara>The <literal><phrase role="varname">mimeType</phrase></literal> attribute describes the type of output content, and corresponds to the type in the header of the <acronym>HTTP</acronym> request. The <literal><phrase role="varname">element</phrase></literal> attribute defines <acronym>XHTML</acronym> element used to display the content:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>
                <literal>img</literal>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <literal>object</literal>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <literal>applet</literal>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <literal>script</literal>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <literal>link</literal>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <literal>a</literal>
              </simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-mediaOutput-mediaOutput_example">
            <title><literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> example</title>
            <simpara>This example uses the <literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> component to generate a <acronym>JPEG</acronym> image of verification digits. The code on the application page is a single element:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:mediaOutput element="img" cacheable="false" session="false"
                 createContent="#{mediaBean.paint}" value="#{mediaData}"
                 mimeType="image/jpeg" /&gt;
</programlisting>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> component uses the <literal><phrase role="methodname">MediaBean.paint</phrase></literal> method to create the image. The method generates a random number, which is then converted into an output stream and rendered to a <acronym>JPEG</acronym> image. The <literal><phrase role="classname">MediaBean</phrase></literal> class is as follows:</simpara>
            <programlisting language="Java" linenumbering="unnumbered">package demo;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Random;
import javax.imageio.ImageIO;

public class MediaBean {

    public void paint(OutputStream out, Object data) throws IOException {

        Integer high = 9999;
        Integer low = 1000;
        Random generator = new Random();
        Integer digits = generator.nextInt(high - low + 1) + low;

        if (data instanceof MediaData) {
            MediaData paintData = (MediaData) data;
            BufferedImage img = new BufferedImage(paintData.getWidth(),paintData.getHeight(),BufferedImage.TYPE_INT_RGB);
            Graphics2D graphics2D = img.createGraphics();
            graphics2D.setBackground(paintData.getBackground());
            graphics2D.setColor(paintData.getDrawColor());
            graphics2D.clearRect(0,0,paintData.getWidth(),paintData.getHeight());
            graphics2D.setFont(paintData.getFont());
            graphics2D.drawString(digits.toString(), 20, 35);
            ImageIO.write(img,"png",out);
        }
    }
}
</programlisting>
            <simpara>Another class, <literal><phrase role="classname">MediaData</phrase></literal> is required by the <literal><phrase role="varname">value</phrase></literal> attribute for keeping data to be used as input for the content creation method. The <literal><phrase role="classname">MediaData</phrase></literal> class is as follows:</simpara>
            <programlisting language="Java" linenumbering="unnumbered">package demo;

import java.awt.Color;
import java.awt.Font;
import java.io.Serializable;

public class MediaData implements Serializable {

    private static final long serialVersionUID = 1L;

    Integer Width=110;
    Integer Height=50;

    Color Background=new Color(190, 214, 248);
    Color DrawColor=new Color(0,0,0);

    Font font = new Font("Serif", Font.TRUETYPE_FONT, 30);

    /* Corresponding getters and setters */
    ...

}
</programlisting>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> component uses the <literal><phrase role="classname">MediaBean</phrase></literal> and <literal><phrase role="classname">MediaData</phrase></literal> classes to generate a new image on each page refresh.</simpara>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-mediaOutput-mediaOutput_example_result.png"/>
                </imageobject>
                <textobject>
                  <phrase>The generated image containing a random verification number.</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
          <note>
            <title><literal><phrase role="classname">Serializable</phrase></literal> interface</title>
            <simpara>A bean class passed using the <literal><phrase role="varname">value</phrase></literal> attribute of <literal><phrase role="sgmltag">&lt;r:mediaOutput&gt;</phrase></literal> should implement the <literal><phrase role="classname">Serializable</phrase></literal> interface so that it will be encoded to the <acronym>URL</acronym> of the resource.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-mediaOutput-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MediaOutput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIMediaOutput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.MediaOutput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MediaOutputRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Containers">
      <title>Containers</title>
      <simpara>This chapter details those components in the <literal><phrase role="classname">r</phrase></literal> tag library which define an area used as a container or wrapper for other components.</simpara>
      <section id="sect-Component_Reference-Containers-outputPanel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component is used to group together components in to update them as a whole, rather than having to specify the components individually.</simpara>
        <section id="sect-Component_Reference-outputPanel-Aiding_complex_Ajax_rendering">
          <title>Aiding complex Ajax rendering</title>
          <simpara>Use the <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component to wrap behaviors when using complex Ajax rendering. Parent components may not render correctly when attached behaviors trigger updates. Point the behaviors to the wrapping <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component instead of the parent components. The <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component is properly encoded to ensure the wrapped components are correctly rendered.</simpara>
        </section>
        <section id="sect-Component_Reference-outputPanel-Panel_appearance">
          <title>Panel appearance</title>
          <simpara>The <literal><phrase role="varname">layout</phrase></literal> attribute can be used to determine how the component is rendered in <acronym>HTML</acronym>:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="code">layout="inline"</phrase></literal> is the default behavior, which will render the component as a pair of <literal><phrase role="sgmltag">&lt;span&gt;</phrase></literal> tags containing the child components.</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="code">layout="block"</phrase></literal> will render the component as a pair of <literal><phrase role="sgmltag">&lt;div&gt;</phrase></literal> tags containing the child components, which will use any defined <literal><phrase role="sgmltag">&lt;div&gt;</phrase></literal> element styles.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Setting <literal><phrase role="code">ajaxRendered="true"</phrase></literal> will cause the <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> to be updated with each Ajax response for the page, even when not listed explicitly by the requesting component. This can in turn be overridden by specific attributes on any requesting components.</simpara>
        </section>
        <section id="sect-Component_Reference-outputPanel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.OutputPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIOutputPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Panel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.OutputPanelRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Containers-region">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:region&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:region&gt;</phrase></literal> component specifies a part of the JSF component tree to be processed on the server. The region causes all the <literal><phrase role="classname">r</phrase></literal> Ajax controls to execute: decoding, validating, and updating the model. The region causes these components to execute even if not explicitly declared. As such, processing areas can more easily be marked using a declarative approach.</simpara>
        <simpara>Regions can be nested, in which case only the parent region of the component initiating the request will be processed.</simpara>
        <section id="sect-Component_Reference-region-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Region</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIRegion</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.AjaxContainer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Validation">
      <title>Validation</title>
      <simpara>JavaServer Faces 2 provides built-in support for bean validation as per the Java Specification Request JSR-303 standard. As such, containers must validate model objects. Validation is performed at different application tiers according to annotation-based constraints. Refer to <ulink url="http://jcp.org/en/jsr/detail?id=303">http://jcp.org/en/jsr/detail?id=303</ulink> for further details on the JSR-303 specification.</simpara>
      <simpara><xref linkend="exam-Component_Reference-Validation-JSR-303_validation_annotations"/> shows an example JSF managed bean. The bean includes JSR-303 annotations for validation. Validation annotations defined in this way are registered on components bound to the bean properties, and validation is triggered in the <emphasis>Process Validation</emphasis> phase.</simpara>
      <example id="exam-Component_Reference-Validation-JSR-303_validation_annotations">
        <title>JSR-303 validation annotations</title>
        <programlisting language="Java" linenumbering="unnumbered">import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

@ManagedBean
@RequestScoped
public class UserBean {

   @Size(min=3, max=12)
   private String name = null;

   @Pattern(regexp = "^[\\w\\-]([\\.\\w])+[\\w]+@([\\w\\-]+\\.)+[a-zA-Z]{2,4}$" , message="Bad email")
   private String email = null;

   @Min(value = 18)
   @Max(value = 99)
   private Integer age;

//...
//Getters and Setters
}
</programlisting>
      </example>
      <note>
        <title>Requirements</title>
        <simpara>Bean validation in both JavaServer Faces and RichFaces requires the <emphasis>JSR-303</emphasis> implementation. The implementation is bundled with <productname>JEE 6 Application Server</productname>.</simpara>
        <simpara>If using <productname>Tomcat</productname> or another simple servlet container, add the <literal><phrase role="filename">validation-api</phrase></literal> Java Archive and a validation provider (such as <productname>Hibernate Validator</productname>) to your application libraries.</simpara>
      </note>
      <section id="sect-Component_Reference-Validation-validator">
        <title><literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> client-side validation</title>
        <simpara>The validation built in to JavaServer Faces 2 occurs on the server side. The <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behavior adds client-side validation to a control based on registered server-side validators. It provides this validation without the need to reproduce the server-side annotations. The <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behavior triggers all client validator annotations listed in the relevant managed bean.</simpara>
        <section id="sect-Component_Reference-validator-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behavior is added as a child element to any input control. The value of the input control must reference a managed bean. The content of the input control validates on the client-side based on registered server-side validators included in the managed bean.</simpara>
          <example id="exam-Component_Reference-validator-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:inputText value="#{userBean.name}"&gt;
   &lt;r:validator/&gt;
&lt;/h:inputText&gt;
</programlisting>
          </example>
          <note>
            <title>JSF validation tags</title>
            <simpara>JSF validation tags, such as <literal><phrase role="sgmltag">&lt;f:validateLength&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;f:validateDoubleRange&gt;</phrase></literal> tags, can be declared alongside <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behaviors. However, because this duplicates the validation processes at both the view and model level, it is not recommended.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-validator-Messages_from_client-side_validators">
          <title>Messages from client-side validators</title>
          <simpara>Use the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> components to display validation messages. The <literal><phrase role="varname">for</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component references the <literal><phrase role="varname">id</phrase></literal> identifier of the input control being validated.</simpara>
          <example id="exam-Component_Reference-validator-Messages">
            <title>Messages</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel header="User information"&gt;
   &lt;h:panelGrid columns="3"&gt;

      &lt;h:outputText value="Name:" /&gt;
      &lt;h:inputText value="#{validationBean.name}" id="name"&gt;
         &lt;r:validator /&gt;
      &lt;/h:inputText&gt;
      &lt;r:message for="name" /&gt;

      &lt;h:outputText value="Email" /&gt;
      &lt;h:inputText value="#{validationBean.email}" id="email"&gt;
         &lt;r:validator /&gt;
      &lt;/h:inputText&gt;
      &lt;r:message for="email" /&gt;

      &lt;h:outputText value="Age" /&gt;
      &lt;h:inputText value="#{validationBean.age}" id="age"&gt;
         &lt;r:validator /&gt;
      &lt;/h:inputText&gt;
      &lt;r:message for="age" /&gt;

      &lt;h:outputText value="I agree the terms" /&gt;
      &lt;h:selectBooleanCheckbox value="#{validationBean.agree}" id="agree"&gt;
         &lt;r:validator/&gt;
      &lt;/h:selectBooleanCheckbox&gt;
      &lt;r:message for="agree" /&gt;

   &lt;/h:panelGrid&gt;
&lt;/r:panel&gt;
</programlisting>
            <simpara>Failed validation checks are reported using <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> components. The validation annotations in the managed bean are outlined in <xref linkend="exam-Component_Reference-Validation-JSR-303_validation_annotations"/>.</simpara>
            <simpara>image::images/figu-Component_Reference-validator-Messages.png[Failed validation checks are reported using <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> components.]</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-validator-Validation_triggers">
          <title>Validation triggers</title>
          <simpara>Use the <literal><phrase role="varname">event</phrase></literal> attribute to specify which event on the input control triggers the validation process. By default, the <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behavior triggers validation when the input control is changed ( <literal><phrase role="code">event="change"</phrase></literal>).</simpara>
          <example id="exam-Component_Reference-validator-Validation_triggers">
            <title>Validation triggers</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:inputText value="#{userBean.name}"&gt;
   &lt;r:validator event="keyup"/&gt;
&lt;/h:inputText&gt;
</programlisting>
            <simpara>The <literal><phrase role="varname">event</phrase></literal> attribute is changed to the <literal>keyup</literal> event, such that validation takes place after each key press.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-validator-Ajax_fall-backs">
          <title>Ajax fall-backs</title>
          <simpara>If no client-side validation method exists for a registered server-side validator, Ajax fall-back is used. The <literal><phrase role="sgmltag">&lt;r:validator&gt;</phrase></literal> behavior invokes all available client-side validators. If all the client-side validators return valid, RichFaces performs an Ajax request to invoke the remaining validators on the server side.</simpara>
        </section>
        <section id="sect-Component_Reference-validator-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ClientValidatorRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-id</phrase></literal>: <literal><phrase role="classname">org.richfaces.behavior.ClientValidator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.ClientValidatorHandler</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-class</phrase></literal>: <literal><phrase role="classname">org.ajax4jsf.component.behavior.ClientValidatorImpl</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.renderkit.html.ClientValidatorRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Validation-graphValidator">
        <title><literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> object validation</title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> component is used to wrap a set of input components related to one object. The object defined by the <literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> component can then be completely validated. The validation includes all object properties, even those which are not bound to the individual form components. Validation performed in this way allows for cross-field validation in complex forms.</simpara>
        <note>
          <title>Validation without model updates</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> component performs a <literal><phrase role="methodname">clone()</phrase></literal> method on the referenced bean instance during the validation phase. The cloned object is validated and triggers any required validation messages. As such, the model object remains clean, and the lifecycle is interrupted properly after the <emphasis>Process Validations</emphasis> phase.</simpara>
          <simpara>Ensure the referenced object implements the <literal><phrase role="interfacename">Cloneable</phrase></literal> interface, and allows a deep clone if required.</simpara>
        </note>
        <section id="sect-Component_Reference-graphValidator-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> element must wrap all the input controls that are required to validate the object. The <literal><phrase role="varname">value</phrase></literal> attribute names the bean for the validating object.</simpara>
          <example id="exam-Component_Reference-graphValidator-Basic_usage">
            <title>Basic usage</title>
            <simpara>The example demonstrates a simple form for changing a password. The two entered passwords must match, so a <literal><phrase role="sgmltag">&lt;r:graphValidator&gt;</phrase></literal> component is used for cross-field validation.</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
   &lt;r:graphValidator value="#{userBean}"&gt;
      &lt;r:panel header="Change password"&gt;
         &lt;r:messages/&gt;
         &lt;h:panelGrid columns="3"&gt;
            &lt;h:outputText value="Enter new password:" /&gt;
            &lt;h:inputSecret value="#{userBean.password}" id="pass"/&gt;
            &lt;r:message for="pass"/&gt;
            &lt;h:outputText value="Confirm the new password:" /&gt;
            &lt;h:inputSecret value="#{userBean.confirm}" id="conf"/&gt;
            &lt;r:message for="conf"/&gt;
         &lt;/h:panelGrid&gt;
         &lt;r:commandButton value="Store changes"
                            action="#{userBean.storeNewPassword}" /&gt;
      &lt;/r:panel&gt;
   &lt;/r:graphValidator&gt;
&lt;/h:form&gt;
</programlisting>
            <simpara>The input controls validate against the following bean:</simpara>
            <programlisting language="Java" linenumbering="unnumbered">@ManagedBean
@RequestScoped
public class UserBean implements Cloneable {

   @Size(min = 5, max = 15, message="Wrong size for password")
   private String password;
   @Size(min = 5, max = 15, message="Wrong size for confirmation")
   private String confirm;
   private String status = "";

   @AssertTrue(message = "Different passwords entered!")
   public boolean isPasswordsEquals() {
      return password.equals(confirm);
   }

   public void storeNewPassword() {
      FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_INFO, "Succesfully changed!", "Succesfully changed!"));
   }

   ...
}
</programlisting>
            <simpara>When validation occurs, the whole object is validated against the annotation contstraints. The <literal><phrase role="varname">@AssertTrue</phrase></literal> annotation relies on the <literal><phrase role="methodname">isPasswordsEqual()</phrase></literal> function to check whether the two entered passwords are equal.</simpara>
            <simpara>If the entered passwords do not match, an error message is displayed:</simpara>
            <simpara>image::images/figu-Component_Reference-graphValidator-Basic_usage.png[Failed validation checks are reported using <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> components.]</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-graphValidator-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.GraphValidator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIGraphValidator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.GraphValidator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.GraphValidatorHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Processing_management">
      <title>Processing management</title>
      <simpara>This chapter covers those components that manage the processing of information, requests, and updates.</simpara>
      <section id="sect-Component_Reference-Processing_management-queue">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:queue&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component manages the JSF queue of Ajax requests. It provides additional options for a finer control of request processing.</simpara>
        <section id="sect-Component_Reference-queue-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component works in the same basic way as the standard JSF queue. It can be enabled and disabled through the <literal><phrase role="varname">enabled</phrase></literal> attribute.</simpara>
          <note>
            <title>Requests from other libraries</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component does not handle standard JSF requests or requests from component libraries other than RichFaces.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-queue-Delaying_requests">
          <title>Delaying requests</title>
          <simpara>Use the <literal><phrase role="varname">requestDelay</phrase></literal> attribute to add a delay between each request in the queue. Set the <literal><phrase role="varname">requestDelay</phrase></literal> attribute to the number of milliseconds to wait in between each request. Delaying requests avoids unnecessary processing for actions that would otherwise cause multiple requests, such as typing. Similar requests in the queue are combined while waiting for the request delay.</simpara>
          <example id="exam-Component_Reference-queue-Delaying_requests">
            <title>Delaying requests</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:queue requestDelay="1500"/&gt;</programlisting>
            <simpara>The queue delays each request by 1500 milliseconds.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-queue-Duplicate_responses">
          <title>Duplicate responses</title>
          <simpara>The client side can update unnecessarily if duplicate responses require similar updates. Set <literal><phrase role="code">ignoreDupResponses="true"</phrase></literal> to ignore duplicate responses. With this setting, the client will not update from a request if a similar request is in the queue.</simpara>
        </section>
        <section id="sect-Component_Reference-queue-Queue_scopes">
          <title>Queue scopes</title>
          <simpara>Define the queue scope to make it the default queue for all requests in that scope. The scope depends on the placement of the queue and any naming identifiers.</simpara>
          <itemizedlist>
            <listitem>
              <simpara>An unnamed <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component placed outside any forms becomes the default queue for all requests on the page.</simpara>
            </listitem>
            <listitem>
              <simpara>An unnamed <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component placed inside a form becomes the default queue for all requests within that form.</simpara>
            </listitem>
            <listitem>
              <simpara>Use the <literal><phrase role="varname">name</phrase></literal> identifier attribute to name an <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component. Named queues can be accessed with the <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior to act as a queue for specific components and behaviors. Refer to <xref linkend="sect-Component_Reference-Processing_management-attachQueue"/> for details.</simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-queue-Queue_scopes">
            <title>Queue scopes</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:queue name="viewQueue" requestDelay="2000"/&gt;
&lt;h:form&gt;
	&lt;r:queue name="formQueue" requestDelay="1500"/&gt;
   ...
&lt;/h:form&gt;
</programlisting>
            <simpara>The queue outside the form is scoped to the view. The queue inside the form is scoped only to that form.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-queue-queue_client-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> client-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component features several events relating to queuing actions in addition to the common JSF events:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">complete</phrase></literal> event is fired after a request is completed. The request object is passed as a parameter to the event handler, so the queue is accessible using <literal><phrase role="code">request.queue</phrase></literal> and the element which was the source of the request is accessible using <literal>this</literal>.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">requestqueue</phrase></literal> event is fired after a new request has been added to the queue.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">requestdequeue</phrase></literal> event is fired after a request has been removed from the queue.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-queue-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Queue</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIQueue</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Queue</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.QueueRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-Processing_management-attachQueue">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior is used together with a <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component to further customize queuing for particular components and behaviors. The <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior can override the scope-wide queue settings for an individual component, or attach specific requests to a queue.</simpara>
          <section id="sect-Component_Reference-attachQueue-Overriding_scope_settings">
            <title>Overriding scope settings</title>
            <simpara>Queues can be scoped to various levels as described in <xref linkend="sect-Component_Reference-queue-Queue_scopes"/>. Use an <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior in the same scope as a queue to override the queue settings for a particular control.</simpara>
            <example id="exam-Component_Reference-attachQueue-Overriding_scope_settings">
              <title>Overriding scope settings</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:queue requestDelay="2000"/&gt;
&lt;h:form&gt;
   &lt;r:panel&gt;
      &lt;h:inputText&gt;
         &lt;r:ajax event="keyup" /&gt;
      &lt;/h:inputText&gt;
      &lt;r:commandButton value="submit"&gt;
         &lt;r:attachQueue requestDelay="0" /&gt;
      &lt;/r:commandButton&gt;
   &lt;/r:panel&gt;
&lt;/h:form&gt;
</programlisting>
              <simpara>The request delay is overridden by the <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior on the submit button.</simpara>
            </example>
          </section>
          <section id="sect-Component_Reference-attachQueue-Using_a_named_queue">
            <title>Using a named queue</title>
            <simpara>Name an <literal><phrase role="sgmltag">&lt;r:queue&gt;</phrase></literal> component using the <literal><phrase role="varname">name</phrase></literal> attribute. It can then be used by specific components through the <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior. Use the <literal><phrase role="varname">name</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behavior to identify the name of the destination queue.</simpara>
            <example id="exam-Component_Reference-attachQueue-Using_a_named_queue">
              <title>Using a named queue</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:queue name="viewQueue"/&gt;
&lt;h:form&gt;
	&lt;r:queue name="formQueue"/&gt;
   &lt;r:panel&gt;
      &lt;r:commandButton value="submit"&gt;
         &lt;r:attachQueue name="viewQueue" /&gt;
      &lt;/r:commandButton&gt;
   &lt;/r:panel&gt;
&lt;/h:form&gt;
</programlisting>
              <simpara>The requests from the button are attached to the <literal>viewQueue</literal> queue, rather than the <literal>formQueue</literal> queue.</simpara>
            </example>
          </section>
          <section id="sect-Component_Reference-attachQueue-Grouping_requests">
            <title>Grouping requests</title>
            <simpara>Use grouping to process multiple requests together. Specify a grouping identifier with the <literal><phrase role="varname">requestGroupingId</phrase></literal> attribute. Requests from multiple <literal><phrase role="sgmltag">&lt;r:attachQueue&gt;</phrase></literal> behaviors can use the same identifier to group requests together.</simpara>
            <example id="exam-Component_Reference-attachQueue-Grouping_requests">
              <title>Grouping requests</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
   &lt;r:queue requestDelay="2000"/&gt;
   &lt;h:inputText id="input1" value="#{queueBean.text1}"&gt;
      &lt;r:attachQueue requestGroupingId="registrationForm"/&gt;
   &lt;/h:inputText&gt;
   &lt;h:inputText id="input2" value="#{queueBean.text2}"&gt;
      &lt;r:attachQueue requestGroupingId="registrationForm"/&gt;
   &lt;/h:inputText&gt;
&lt;/h:form&gt;
</programlisting>
              <simpara>Requests from both the text input boxes are grouped together with the <literal>registrationForm</literal> identifier.</simpara>
            </example>
          </section>
          <section id="sect-Component_Reference-attachQueue-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AttachQueue</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIAttachQueue</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.AttachQueue</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AttachQueueRenderer</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.AttachQueueHandler</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Processing_management-log">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:log&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:log&gt;</phrase></literal> component generates JavaScript that opens a debug window, logging application information such as requests, responses, and <acronym>DOM</acronym> changes.</simpara>
        <section id="sect-Component_Reference-log-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:log&gt;</phrase></literal> component doesn’t require any additional attributes for basic functionality.</simpara>
        </section>
        <section id="sect-Component_Reference-log-Log_monitoring">
          <title>Log monitoring</title>
          <simpara>The <literal><phrase role="varname">mode</phrase></literal> attribute determines how the log appears on the page.</simpara>
          <itemizedlist>
            <listitem>
              <simpara>Set <literal><phrase role="code">mode="inline"</phrase></literal> to place the logging data in-line on the current page. This is the default setting.</simpara>
            </listitem>
            <listitem>
              <simpara>Set <literal><phrase role="code">mode="popup"</phrase></literal> to present the logging data in a new pop-up window. The window is set to be opened by pressing the key combination <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap><keycap>L</keycap></keycombo>; this can be partially reconfigured with the <literal><phrase role="varname">hotkey</phrase></literal> attribute, which specifies the letter key to use in combination with <keycombo><keycap>Ctrl</keycap><keycap>Shift</keycap></keycombo> instead of <keycap>L</keycap>.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>The amount of data logged can be determined with the <literal><phrase role="varname">level</phrase></literal> attribute:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>Set <literal><phrase role="code">level="ERROR"</phrase></literal> to log all errors.</simpara>
            </listitem>
            <listitem>
              <simpara>Set <literal><phrase role="code">level="FATAL"</phrase></literal> to log only fatal messages.</simpara>
            </listitem>
            <listitem>
              <simpara>Set <literal><phrase role="code">level="INFO"</phrase></literal> to log only informational messages.</simpara>
            </listitem>
            <listitem>
              <simpara>Set <literal><phrase role="code">level="WARN"</phrase></literal> to log only warning messages.</simpara>
            </listitem>
            <listitem>
              <simpara>Set <literal><phrase role="code">level="ALL"</phrase></literal> to log all data. This is the default setting.</simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-log-log_example">
            <title><literal><phrase role="sgmltag">&lt;r:log&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:log level="ALL" mode="inline" /&gt;
</programlisting>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-log-log_example.png"/>
                </imageobject>
                <textobject>
                  <phrase>figu-Component_Reference-log-log_example</phrase>
                </textobject>
              </mediaobject>
            </figure>
            <simpara>The log readout displays all messages.</simpara>
          </example>
          <note>
            <title>Log renewal</title>
            <simpara>The log is automatically renewed after each Ajax request. It does not need to be explicitly re-rendered. To clear previous requests, implement a <guilabel>Clear</guilabel> button or similar functionality.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-log-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AjaxLog</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIAjaxLog</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.AjaxLog</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AjaxLogRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-log-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:log&gt;</phrase></literal> component is intended primarily for debugging during development. However it is still possible to style the component if desired.</simpara>
          <table id="log-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-popup</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the log when it appears as a pop-up.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-popup-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the log pop-up.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-inline</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the log when it appears in-line.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-contents</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the log contents.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a label in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-lbl-debug</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>debug</guilabel> label in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-lbl-info</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>information</guilabel> label in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-lbl-warn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>warning</guilabel> label in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-lbl-error</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>error</guilabel> label in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg-debug</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>debug</guilabel> message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg-info</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>information</guilabel> message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg-warn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>warning</guilabel> message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg-error</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>error</guilabel> message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-log-entry-msg-xml</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an XML message in the log.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Processing_management-status">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:status&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component displays the status of current Ajax requests. The status can be either in progress, complete, or an error is shown after a failed request.</simpara>
        <section id="sect-Component_Reference-status-Customizing_the_text">
          <title>Customizing the text</title>
          <simpara>The text display can be customized depending on the current status.</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">startText</phrase></literal> attribute defines the text shown after the request has been started and is currently in progress. Set the styles for the text with the <literal><phrase role="varname">startStyle</phrase></literal> and <literal><phrase role="varname">startStyleClass</phrase></literal> attributes. Alternatively, use the <literal>start</literal> facet to customize the text appearance.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">stopText</phrase></literal> attribute defines the text shown once the request is complete. Set the styles for the text with the <literal><phrase role="varname">stopStyle</phrase></literal> and <literal><phrase role="varname">stopStyleClass</phrase></literal> attributes. Alternatively, use the <literal>stop</literal> facet to customize the text appearance.</simpara>
              <simpara>If the <literal><phrase role="varname">stopText</phrase></literal> attribute is not defined, and no facet exists for the stopped state, the complete status is simply not shown. In this way, only the progress of the request is displayed to the user, along with any errors.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">errorText</phrase></literal> attribute defines the text shown when an error has occurred. Set the styles for the text with the <literal><phrase role="varname">errorStyle</phrase></literal> and <literal><phrase role="varname">errorStyleClass</phrase></literal> attributes. Alternatively, use the <literal>error</literal> facet to customize the text appearance.</simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-status-Basic_status_usage">
            <title>Basic <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:status startText="In progress..." stopText="Complete" /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-status-Specifying_a_region">
          <title>Specifying a region</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component monitors the status of the region relevant to where it is placed.</simpara>
          <itemizedlist>
            <listitem>
              <simpara>If unnamed and placed outside any forms, it monitors the status at the view level.</simpara>
            </listitem>
            <listitem>
              <simpara>If unnamed and placed inside a form, it monitors the status at the form level.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>However, if identified with the <literal><phrase role="varname">name</phrase></literal> attribute, the <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component can monitor any Ajax component or behavior. Use the <literal><phrase role="varname">status</phrase></literal> attribute on the Ajax component or behavior to reference the <literal><phrase role="varname">name</phrase></literal> identifier of the <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-status-Updating_a_referenced_status_component">
            <title>Updating a referenced <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel&gt;
   &lt;f:facet name="header"&gt;
      &lt;h:outputText value="User Details Panel" /&gt;
   &lt;/f:facet&gt;
   &lt;h:panelGrid columns="3"&gt;
      &lt;h:outputText value="User name:" /&gt;
      &lt;h:inputText value="#{userBean.name}"&gt;
         &lt;r:ajax status="nameStatus" event="keyup" /&gt;
      &lt;/h:inputText&gt;
      &lt;r:status name="nameStatus"&gt;
         &lt;f:facet name="start"&gt;
            &lt;h:graphicImage value="/images/ai.gif" /&gt;
         &lt;/f:facet&gt;
      &lt;/r:status&gt;
      &lt;h:outputText value="Address:" /&gt;
      &lt;h:inputText value="#{userBean.address}"&gt;
         &lt;r:ajax status="addressStatus" event="keyup" /&gt;
      &lt;/h:inputText&gt;
      &lt;r:status name="addressStatus"&gt;
         &lt;f:facet name="start"&gt;
            &lt;h:graphicImage value="/images/ai.gif" /&gt;
         &lt;/f:facet&gt;
      &lt;/r:status&gt;
   &lt;/h:panelGrid&gt;
&lt;/r:panel&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-status-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:status&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">start()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switches status to the <literal>start</literal> state.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">stop()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switches status to the <literal>stop</literal> state.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">error()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switches status to the <literal>error</literal> state.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-status-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Status</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIStatus</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Status</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.StatusRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
  </part>
  <part id="part-Component_Reference-User_interface_components">
    <title>User interface components</title>
    <chapter id="chap-Component_Reference-inputs">
      <title>Rich inputs</title>
      <simpara>This chapter details components for user input and interaction.</simpara>
      <section id="sect-Component_Reference-inputs-autocomplete">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component is an auto-completing input-box with built-in Ajax capabilities. It supports client-side suggestions, browser-like selection, and customization of the look and feel.</simpara>
        <simpara>The auto-complete box is a standard JSF <literal><phrase role="classname">UIInput</phrase></literal> control with added validation.</simpara>
        <figure id="figu-Component_Reference-autocomplete-autocomplete">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-autocomplete-autocomplete.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-autocomplete-autocomplete</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-autocomplete-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="varname">value</phrase></literal> attribute stores the text entered by the user for the auto-complete box. Suggestions shown in the auto-complete list can be specified using one of two different methods:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">autocompleteMethod</phrase></literal> attribute points to a method which returns a list of suggestions according to a supplied prefix.</simpara>
            </listitem>
          </itemizedlist>
          <note>
            <title><literal>client</literal> and <literal>lazyClient</literal> modes</title>
            <simpara>The prefix is normally ignored in <literal>client</literal> and <literal>lazyClient</literal> modes. In these modes, the component requests the suggestion list once only, and performs filtering on the client.</simpara>
          </note>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">autocompleteList</phrase></literal> attribute points to a collection of suggestions.</simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-autocomplete-Defining_suggestion_values">
            <title>Defining suggestion values</title>
            <variablelist>
              <varlistentry>
                <term>Using the <literal><phrase role="varname">autocompleteMethod</phrase></literal>  attribute</term>
                <listitem>
                  <programlisting language="XML" linenumbering="unnumbered">&lt;r:autocomplete value="#{bean.state}" autocompleteMethod="#{bean.autocomplete}" /&gt;
</programlisting>
                  <simpara>The <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component uses the <literal><phrase role="methodname">bean.autocomplete</phrase></literal> method to provide suggestions, based on the entered prefix.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Using the <literal><phrase role="varname">autocompleteList</phrase></literal>  attribute</term>
                <listitem>
                  <programlisting language="XML" linenumbering="unnumbered">&lt;r:autocomplete value="#{bean.state}" autocompleteList="#{bean.suggestions}" /&gt;
</programlisting>
                  <simpara>The <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component retrieve the suggestion list from <literal><phrase role="methodname">bean.suggestions</phrase></literal>.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </example>
        </section>
        <section id="sect-Component_Reference-autocomplete-Submission_modes">
          <title>Submission modes</title>
          <simpara>Use the <literal><phrase role="varname">mode</phrase></literal> attribute to determine how the suggestion list is requested:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal>client</literal> setting pre-loads data to the client and uses the input to filter the possible suggestions.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal>ajax</literal> setting fetches suggestions with every input change using Ajax requests.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal>lazyClient</literal> setting pre-loads data to the client and uses the input to filter the possible suggestions. The filtering does not start until the input length matches a minimum value. Set the minimum value with the <literal><phrase role="varname">minChars</phrase></literal> attribute.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal>cachedAjax</literal> setting pre-loads data via Ajax requests when the input length matches a minimum value. Set the minimum value with the <literal><phrase role="varname">minChars</phrase></literal> attribute. All suggestions are handled on the client until the input prefix is changed, at which point a new request is made based on the new input prefix.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-autocomplete-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>Users can type into the text field to enter a value, which also searches through the suggestion items in the drop-down box. By default, the first suggestion item is selected as the user types. This behavior can be deactivated by setting <literal><phrase role="code">selectFirst="false"</phrase></literal>.</simpara>
          <simpara>Setting <literal><phrase role="code">autoFill="true"</phrase></literal> causes the combo-box to fill the text field box with a matching suggestion as the user types.</simpara>
          <simpara>To allow users to enter multiple values separated by specific characters, use the <literal><phrase role="varname">tokens</phrase></literal> attribute. As the user types, a suggestion will present as normal. When they enter a character specified as a token, this begins a new suggestion process, and the component only uses text entered after the token character for suggestions. For example, if <literal><phrase role="code">tokens=", "</phrase></literal> is set, the <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component uses both the comma and space characters as tokens to separate entries. When the user enters a comma or a space, a new suggestion process begins.</simpara>
          <note>
            <title>Using tokens</title>
            <simpara>When declaring tokens, avoid using any characters that are present in the list of suggestions. This may cause unexpected behavior as the user expects the character to match suggestions instead of separating suggested entries.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-autocomplete-Customizing_the_filter_in_client_and_lazyClient_modes">
          <title>Customizing the filter in <literal>client</literal> and <literal>lazyClient</literal> modes</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component uses the JavaScript <literal><phrase role="function">startsWith()</phrase></literal> method to create the list of suggestions. The filtering is performed on the client side. Alternatively, use the <literal><phrase role="varname">clientFilterFunction</phrase></literal> attribute to specify a custom filtering function. The custom function must accept two parameters: the <literal><phrase role="varname">subString</phrase></literal> parameter is the filtering value as typed into the text box by the user, and the <literal><phrase role="varname">value</phrase></literal> parameter is an item in the list of suggestions against which the <literal><phrase role="varname">subString</phrase></literal> must be checked. Each item is iterated through and passed to the function as the <literal><phrase role="varname">value</phrase></literal> parameter. The custom function must return a boolean value indicating whether the passed item meets the conditions of the filter, and the suggestion list is constructed from successful items.</simpara>
          <example id="exam-Component_Reference-autocomplete-Customizing_the_filter">
            <title>Customizing the filter</title>
            <simpara>This example demonstrates how to use a custom filter with the <literal><phrase role="varname">clientFilterFunction</phrase></literal> attribute. The custom filter determines if the sub-string is contained anywhere in the suggestion item, instead of just at the start.</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;script&gt;
   function customFilter(subString, value){
      if(subString.length&gt;=1) {
         if(value.indexOf(subString)!=-1)
            return true;
      }else return false;
   };
&lt;/script&gt;
&lt;h:form&gt;
   &lt;r:autocomplete mode="client" minChars="0" autofill="false"
                      clientFilterFunction="customFilter"
                      autocompleteMethod="#{autocompleteBean.autocomplete}" /&gt;
&lt;/h:form&gt;</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-autocomplete-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:autocomplete&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the text field.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the text field to the <literal><phrase role="parameter">newValue</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showPopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the pop-up list of completion values.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hidePopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the pop-up list.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-autocomplete-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Autocomplete</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIAutocomplete</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Input</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AutocompleteRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.AutocompleteHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-autocomplete-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="autocomplete-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-fnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the auto-complete box font.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the auto-complete input box.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-fld</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the auto-complete field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-fld-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a button in the auto-complete field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the auto-complete box button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-btn-arrow</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button arrow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-btn-arrow-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button arrow when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-lst-scrl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the scrollbar in the auto-complete list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item in the auto-complete list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-itm-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a selected item in the auto-complete list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the auto-complete box shadow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-shdw-t</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-au-shdw-l</literal>:: <literal>.rf-au-shdw-r</literal>:: <literal>.rf-au-shdw-b</literal>:: These classes define styles for the top, left, right, and bottom part of the auto-complete box shadow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-au-tbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table in the auto-complete box.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-calendar">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:calendar&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component allows the user to enter a date and time through an in-line or pop-up calendar. The pop-up calendar can navigate through months and years, and its look and feel can be highly customized.</simpara>
        <figure id="figu-Component_Reference-calendar-calendar">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:calendar&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-calendar-calendar.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-calendar-calendar</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-calendar-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage of the <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component requires only the <literal><phrase role="varname">value</phrase></literal> attribute, which holds the currently selected date. <xref linkend="exam-Component_Reference-calendar-Basic_usage"/> shows a basic declaration, with the value pointing to a bean property. The bean property holds the selected date.</simpara>
          <example id="exam-Component_Reference-calendar-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:calendar value="#{bean.dateTest}" /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-calendar-Behavior_and_appearance">
          <title>Behavior and appearance</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component is presented as a pop-up by default, appearing as a text field with a button to expand the full pop-up calendar. To render the calendar in-line on the page instead, set <literal><phrase role="code">popup="false</phrase></literal>. This displays the full calendar without the text field and display button.</simpara>
          <simpara>To add keyboard support for manual input, set <literal><phrase role="code">enableManualInput="true"</phrase></literal>. To disable the calendar from any user input, set <literal><phrase role="code">disabled="true"</phrase></literal>.</simpara>
          <simpara>To change the appearance of the display button from the standard calendar icon, use the <literal><phrase role="varname">buttonIcon</phrase></literal> and <literal><phrase role="varname">buttonDisabledIcon</phrase></literal> attributes to replace the icon with a specified file. Alternatively, use the <literal><phrase role="varname">buttonLabel</phrase></literal> attribute to display text on the button without an icon. If <literal><phrase role="varname">buttonLabel</phrase></literal> is specified then both the <literal><phrase role="varname">buttonIcon</phrase></literal> and <literal><phrase role="varname">buttonDisabledIcon</phrase></literal> attributes are ignored. To hide the text field box, set <literal><phrase role="code">showInput="false"</phrase></literal>.</simpara>
          <simpara>The calendar features a <guibutton>Today</guibutton> button for locating today’s date on the calendar. This can be set to three different values using the <literal><phrase role="varname">todayControlMode</phrase></literal> attribute:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal>hidden</literal>, which does not display the button;</simpara>
            </listitem>
            <listitem>
              <simpara><literal>select</literal>, the default setting, which scrolls the calendar to the current month and selects the date; and</simpara>
            </listitem>
            <listitem>
              <simpara><literal>scroll</literal>, which scrolls the calendar to the month but does not select the date.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>inactive</literal>, which displays the date but performs no action when clicked.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>To make the entire calendar read-only, set <literal><phrase role="code">readonly="true"</phrase></literal>. This allows months and years to be browsed through with the arrow controls, but dates and times cannot be selected.</simpara>
        </section>
        <section id="sect-Component_Reference-calendar-Time_of_day">
          <title>Time of day</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component can additionally allow a time of day to be specified with the date. After selecting a date the option to set a time becomes available. The default time can be set with the <literal><phrase role="varname">defaultTime</phrase></literal> attribute. If the time is altered and a new date is selected, it will not reset unless <literal><phrase role="code">resetTimeOnDateSelect="true"</phrase></literal> is specified.</simpara>
          <simpara>The date selection feature is activated if the time is present in the <literal><phrase role="varname">datePattern</phrase></literal> attribute for the calendar.</simpara>
          <note>
            <title>Support for seconds</title>
            <simpara>In RichFaces 4, the <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component supports times that include seconds. Previous versions of RichFaces only supported hours and minutes.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-calendar-Localization_and_formatting">
          <title>Localization and formatting</title>
          <simpara>Date and time strings can be formatted in a set pattern. Use standard locale formatting strings specified by <emphasis role="strong"><emphasis>ISO 8601</emphasis></emphasis> (for example, <literal>d/M/yy HH:mm a</literal>) with the <literal><phrase role="varname">datePattern</phrase></literal> attribute to format date and time strings.</simpara>
          <simpara>To set the locale of the calendar, use the <literal><phrase role="varname">locale</phrase></literal> attribute. The calendar will render month and day names in the relevant language. For example, to set the calendar to the US locale, specify <literal><phrase role="code">locale="en/US"</phrase></literal>.</simpara>
          <simpara>Use an application resource bundle to localize the calendar control labels. Define the following strings in the resource bundle:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_APPLY_LABEL</phrase></literal> string is the label for the <guibutton>Apply</guibutton> button.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_TODAY_LABEL</phrase></literal> string is the label for the <guibutton>Today</guibutton> button.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_CLOSE_LABEL</phrase></literal> string is the label for the <guibutton>Close</guibutton> button.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_OK_LABEL</phrase></literal> string is the label for the <guibutton>OK</guibutton> button.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_CLEAN_LABEL</phrase></literal> string is the label for the <guibutton>Clean</guibutton> button.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="property">RICH_CALENDAR_CANCEL_LABEL</phrase></literal> string is the label for the <guibutton>Cancel</guibutton> button.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Alternatively, use the <literal><phrase role="classname">org.richfaces.calendar</phrase></literal> resource bundle with Java Archive files ( <literal><acronym>JAR</acronym></literal> s) defining the same properties.</simpara>
        </section>
        <section id="sect-Component_Reference-calendar-Using_a_data_model">
          <title>Using a data model</title>
          <simpara>The look and feel of the <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component can be customized through the use of a data model on the server side. The component supports two different ways of loading data from the server side through defining the <literal><phrase role="varname">mode</phrase></literal> attribute.</simpara>
          <simpara>When the <literal><phrase role="varname">mode</phrase></literal> attribute is not specified, the component uses the <literal>client</literal> mode. The <literal>client</literal> mode loads an initial portion of data within a set date range. The range can be defined by using the <literal><phrase role="varname">preloadDateRangeBegin</phrase></literal> and <literal><phrase role="varname">preloadDateRangeEnd</phrase></literal> attributes. Additional data requests for months outside the range are not sent.</simpara>
          <simpara>Alternatively, with <literal><phrase role="code">mode="ajax"</phrase></literal> the <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> requests portions of data from the data model every time the month is switched. The data model can be defined through the <literal><phrase role="varname">dataModel</phrase></literal> attribute, which points to an object that implements the <literal><phrase role="classname">CalendarDataModel</phrase></literal> interface. If the <literal><phrase role="varname">dataModel</phrase></literal> attribute is not defined or has a value of <literal>null</literal>, the <literal>ajax</literal> mode functions the same as the <literal>client</literal> mode.</simpara>
        </section>
        <section id="sect-Component_Reference-calendar-Client-side_customization">
          <title>Client-side customization</title>
          <simpara>Instead of using a data model, the <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component can be customized on the client-side using JavaScript. Use the <literal><phrase role="varname">dayClassFunction</phrase></literal> attribute to reference the function that determines the CSS style class for each day cell. Use the <literal><phrase role="varname">dayDisableFunction</phrase></literal> to reference the function that enables or disables a day cell. <xref linkend="exam-Component_Reference-calendar-Client-side_customization"/> demonstrates how client-side customization can be used to style different days in a calendar.</simpara>
          <example id="exam-Component_Reference-calendar-Client-side_customization">
            <title>Client-side customization</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;style&gt;
   .everyThirdDay {
      background-color: gray;
   }
   .weekendBold {
      font-weight: bold;
      font-style: italic;
   }
&lt;/style&gt;
&lt;script type="text/javascript"&gt;
   var curDt = new Date();
   function disablementFunction(day){
      if (day.isWeekend) return false;
      if (curDt==undefined){
         curDt = day.date.getDate();
      }
      if (curDt.getTime() - day.date.getTime() &amp;lt; 0) return true;
      else return false;
   }
   function disabledClassesProv(day){
      if (curDt.getTime() - day.date.getTime() &amp;gt;= 0) return 'rf-ca-boundary-dates';
      var res = '';
      if (day.isWeekend) res+='weekendBold ';
      if (day.day%3==0) res+='everyThirdDay';
      return res;
   }
&lt;/script&gt;
&lt;r:calendar dayDisableFunction="disablementFunction"
               dayClassFunction="disabledClassesProv"
               boundaryDatesMode="scroll" /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-calendar-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:calendar&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showPopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Expand the pop-up calendar element.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hidePopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Collapse the pop-up calendar element.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchPopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Invert the state of the pop-up calendar element.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the selected date value of the calendar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValueAsString()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the selected date value of the calendar as a formatted string.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the selected date value to the <literal><phrase role="parameter">newValue</phrase></literal> date passed as a parameter. If the new date is not in the currently displayed month, a request is performed to display the correct month.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">resetValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Clear the selected date value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">today()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Select today’s date.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getCurrentMonth()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the number of the month currently being displayed.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getCurrentYear()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the number of the year currently being displayed.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showSelectedDate()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the calendar month that contains the currently selected date.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showDateEditor()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the date editor pop-up.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hideDateEditor()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the date editor pop-up.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showTimeEditor()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the time editor pop-up.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hideTimeEditor()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the time editor pop-up.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-calendar-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Calendar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICalendar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Calendar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CalendarRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.CalendarHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-calendar-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="calendar-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-extr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a pop-up calendar exterior.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a calendar button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a calendar header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-hdr-optnl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for an optional header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-hdr-month</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the month header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-ftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a calendar footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-ftr-optnl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for an optional footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for calendar toolbars.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-ftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a toolbar item in the calendar footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a toolbar button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-btn-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a disabled toolbar button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-btn-hov</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for toolbar items when it is hovered over with the mouse cursor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarWeekBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-btn-press</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for toolbar items when it is pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-tl-close</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a <guibutton>Close</guibutton> button in a toolbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for regular calendar cells.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-c-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of a cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-today</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the cell representing today’s date.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarCurrentBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarCurrentTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the selected day.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-hov</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a cell when it is hovered over with the mouse cursor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarSpecBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarSpecTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-week</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for week numbers.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarWeekBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-holiday</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for weekends and holidays.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarHolidaysBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarHolidaysTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-boundary-day</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an active boundary button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a spinner input field in the pop-up element for time selection.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">buttonSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">buttonFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-inp-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a wrapper <literal>&lt;td&gt;</literal> element for a spinner input field in the pop-up element for time selection.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">subBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a wrapper <literal>&lt;td&gt;</literal> element for spinner buttons in the pop-up element for time selection.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">background-color</phrase></literal>, <literal><phrase role="property">border-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-up</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Up</guibutton> spinner button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-down</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Down</guibutton> spinner button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-sp-press</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a spinner button when it is pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the calendar editor shadow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-layout-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the layout shadow of a calendar editor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">shadowBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a button in the calendar editor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-btn-over</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the calendar editor button when it is hovered over with the mouse cursor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarSpecBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-btn-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the calendar editor button when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarCurrentBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarCurrentTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-tl-over</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a toolbar item in the calendar editor when it is hovered over with the mouse cursor.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-edtr-tl-press</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a toolbar item in the calendar editor when it is pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-time-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the time input field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-time-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a button in the pop-up element for the calendar’s time section.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-time-btn-press</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for a pressed button in the pop-up element for the calendar’s time section.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-right-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">calendarWeekBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-timepicker-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the content of the pop-up element during time selection.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-timepicker-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for an input field in the time picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-timepicker-ok</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>OK</guibutton> button in the time picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-timepicker-cancel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Cancel</guibutton> button in the time picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-monthpicker-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the content of the pop-up element during month or year selection.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-monthpicker-ok</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the <guibutton>OK</guibutton> button for the month picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-monthpicker-cancel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the <guibutton>Cancel</guibutton> button for the month picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cal-monthpicker-split</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the styles for the splitter in the month picker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-editor">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:editor&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> component is used for creating a WYSIWYG editor on a page.</simpara>
        <figure id="figu-Component_Reference-editor-editor">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:editor&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-editor-editor.png" contentwidth="400"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-editor-editor</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <simpara><literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> component is based on the CKEditor implementation.</simpara>
        <simpara>When rendering a <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal>, a textarea is rendered to the page and once the page is completely loaded (ready state), the textarea is enhanced using a CKEditor script and replaced with a full-featured WYSIWYG editor.</simpara>
        <section id="sect-Component_Reference-editor-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage requires the <literal><phrase role="varname">value</phrase></literal> attribute to point to the expression for the current value of the component.</simpara>
          <example>
            <title>Basic usage of <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal></title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor value="#{backingBean.editedValue}" /&gt;

&lt;h:outputText escape="false" value="#{backingBean.editedValue}" /&gt;</programlisting>
            <simpara>Note that the editor produces HTML markup and to be able to render it’s output, the markup needs to be unescaped (as with <literal><phrase role="sgmltag">&lt;h:outputText&gt;</phrase></literal> component in example above).</simpara>
          </example>
          <simpara>The dimensions of the editor can be managed using <literal><phrase role="parameter">width</phrase></literal> and <literal><phrase role="parameter">height</phrase></literal> attributes.</simpara>
          <simpara>The <literal><phrase role="parameter">readonly</phrase></literal> attribute can be used to switch the editor into a read-only mode.</simpara>
          <simpara>The <literal><phrase role="parameter">tabindex</phrase></literal> attribute specifies the position of the current element in the tabbing order for the current document.</simpara>
          <note>
            <simpara>The <literal><phrase role="code">ResourceServlet</phrase></literal>  has to be registered for the <literal><phrase role="code">url-pattern</phrase></literal>[code]<literal>/org.richfaces.resources/\*</literal>  in order to serve the editor resources (JavaScript, CSS, images) correctly. Check the <emphasis>RichFaces Developer’s Guide</emphasis>  for further details.</simpara>
          </note>
          <note>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal>  requires the <literal><phrase role="sgmltag">&lt;h:body&gt;</phrase></literal>  component to be present in the view and must be an ancestor of the editor in order for the resource dependencies to render correctly.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-editor-Styling">
          <title>Styling</title>
          <simpara>There are several options to customize the style of the editor:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">style, styleClass</phrase></literal>: customizes the style of the editor and underlying textarea</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">editorStyle, editorClass</phrase></literal>: customizes the style of the CKEditor instance</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">textareaStyle, textareaClass</phrase></literal>: customizes the style of the underlying textarea</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-editor-Editor_skins">
          <title>Editor skins</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> is skinnable using the <literal><phrase role="code">skin</phrase></literal> attribute and either of the two approaches:</simpara>
          <simpara>By default, <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> has a skin called <literal><phrase role="code">richfaces</phrase></literal> that is optimized to match rest of the component suite look &amp; feel and changes to match the active RichFaces skin (refer to <emphasis>RichFaces Developer’s Guide</emphasis> for details about <emphasis>Skinning and theming</emphasis>).</simpara>
          <example>
            <title>The skin <literal><phrase role="code">richfaces</phrase></literal> of <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal></title>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-editor-richfaces_skin.png" contentwidth="400"/>
                </imageobject>
                <textobject>
                  <phrase>figu-Component_Reference-editor-richfaces_skin</phrase>
                </textobject>
              </mediaobject>
            </figure>
            <simpara>A <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> with the default <literal><phrase role="code">richfaces</phrase></literal> editor skin rendered against several RichFaces Skin options.</simpara>
          </example>
          <simpara>Alternatively, you can use any other CKeditor skin, either from the standard distribution, a downloaded skin, or a custom skin. In the distribution, there are three skins bundled: <literal><phrase role="code">kama, v2, office2003</phrase></literal>.</simpara>
          <example>
            <title>Examples of <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> skins in CKEditor distribution</title>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-editor-distribution_skins.png" contentwidth="400"/>
                </imageobject>
                <textobject>
                  <phrase>figu-Component_Reference-editor-distribution_skins</phrase>
                </textobject>
              </mediaobject>
            </figure>
            <simpara>A CKEditor distribution skins <literal><phrase role="code">kama</phrase></literal>, <literal><phrase role="code">v2</phrase></literal> and <literal><phrase role="code">office2003</phrase></literal>.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-editor-Advanced_configuration">
          <title>Advanced configuration</title>
          <simpara>The basic set of <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> attributes allows you to support common use-cases for a WYSIWYG editor. However the underlying CKEditor implementation supports many more configuration options.</simpara>
          <simpara>Use the <literal><phrase role="parameter">config</phrase></literal> attribute to define any of these advanced configuration options supported by the CKEditor. This configuration is written in JavaScript object format and its value is interpolated for EL expressions (making configuration dynamic).</simpara>
          <simpara>There are two ways to define the configuration: the <literal><phrase role="parameter">config</phrase></literal> attribute or a facet named <literal><phrase role="parameter">config</phrase></literal>. The facet takes precedence over attribute when both are defined.</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor config="startupFocus: #{userPreferences.startupFocus}" /&gt;

&lt;r:editor&gt;
    &lt;f:facet name="config"&gt;
        startupFocus: #{userPreferences.startupFocus}
    &lt;/f:facet&gt;
&lt;/r:editor&gt;</programlisting>
          <simpara>In the above samples, the <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> is configured to take focus after loading the page as defined by the userPreference bean. Definitions using either attribute or facet are equivalent.</simpara>
          <note>
            <simpara>For further configuration options, refer to <ulink url="http://docs.cksource.com/CKEditor_3.x/Developers_Guide/Setting_Configurations">CKEditor 3 Developer Guide</ulink>  and <ulink url="http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.config.html">CKEditor 3 configuration reference</ulink>.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-editor-Toolbar_customization">
          <title>Toolbar customization</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> supports a <literal><phrase role="parameter">toolbar</phrase></literal> attribute, which is able to change the configuration of the toolbar’s button set. There are two configurations available: <literal><phrase role="code">basic</phrase></literal> (default), <literal><phrase role="code">full</phrase></literal> (enables all of the features).</simpara>
          <simpara>It is also possible to define a custom toolbar using the CKEditor toolbar configuration in a <literal><phrase role="code">config</phrase></literal> facet:</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor toolbar="CustomToolbar"&gt;
    &lt;f:facet name="config"&gt;
        toolbar_CustomToolbar:
        [
        { name: 'document', items : [ 'NewPage','Preview' ] },
        { name: 'clipboard', items : [ 'Cut','Copy','Paste','-','Undo','Redo' ] },
        { name: 'editing', items : [ 'Find','Replace','-','SelectAll','-','Scayt' ] },
        { name: 'insert', items : [ 'Image', 'Flash', 'Table', 'HorizontalRule',
                 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe' ] },
                '/',
        { name: 'styles', items : [ 'Styles','Format' ] },
        { name: 'basicstyles', items : [ 'Bold','Italic','Strike','-','RemoveFormat' ] },
        { name: 'paragraph', items : [ 'NumberedList','BulletedList','-','Outdent','Indent','-','Blockquote' ] },
        { name: 'links', items : [ 'Link','Unlink','Anchor' ] },
        { name: 'tools', items : [ 'Maximize' ] }
        ]
        &lt;/f:facet&gt;
&lt;/r:editor&gt;</programlisting>
          <simpara>Note that toolbar name ( <literal><phrase role="code">CustomToolbar</phrase></literal>) needs to match the <literal><phrase role="code">toolbar_&lt;name&gt;</phrase></literal> configuration option.</simpara>
        </section>
        <section id="sect-Component_Reference-editor-Internationalization_and_localization">
          <title>Internationalization and localization</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> comes with a <literal><phrase role="parameter">lang</phrase></literal> attribute which allows you to change the localization of the editor. For language configuration options, refer to <ulink url="http://www.w3.org/TR/html4/struct/dirlang.html">http://www.w3.org/TR/html4/struct/dirlang.html</ulink>.</simpara>
          <simpara>The <literal><phrase role="parameter">lang</phrase></literal> attribute influences following settings:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><emphasis>underlying textarea</emphasis> - specifies the i18n settings for received and submitted content</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>editor value</emphasis> - specifies the i18n settings for value edited in WYSIWYG mode</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>default settings of localization</emphasis> of editor controls and interface</simpara>
            </listitem>
          </itemizedlist>
          <simpara>However the interface first localized using the browser configuration (usually determined by client system settings). To force the editor to use a specific localization for the interface, you use the advanced CKEditor configuration option <literal><phrase role="code">language</phrase></literal>, as in following sample:</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor lang="fr" config="language: 'fr'" /&gt;</programlisting>
          <simpara>The above sample forces the editor to use a french interface, suppressing the browser preferred settings.</simpara>
        </section>
        <section id="sect-Component_Reference-editor-Client_side_event_handlers">
          <title>Client-side event handlers</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> component produces set of events for handling component specific interaction.</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">init</phrase></literal> - once the editor is initialized and ready to be handle user interaction</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">focus</phrase></literal> - once the editor is focused</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">blur</phrase></literal> - once the editor is blurred</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">change</phrase></literal> - fired on blur event when editor content has been changed after previous focus</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">dirty</phrase></literal> - fired immediately after editor content has been changed</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Events can be handled either by registering a JavaScript event handler or by attaching JSF behavior:</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor value="#{backingBean.editorValue}"&gt;
    &lt;r:ajax event="change" render="editorOutput" /&gt;
    &lt;r:ajax event="dirty" render="editorOutput"&gt;
        &lt;r:attachQueue requestDelay="1000" /&gt;
    &lt;/r:ajax&gt;
&lt;/r:editor&gt;

&lt;r:outputPanel id="editorOutput"&gt;
    &lt;h:outputText escape="false" value="#{backingBean.editorValue}" /&gt;
&lt;/r:outputPanel&gt;</programlisting>
          <simpara>The example above shows the editor and its output, which is updated every second after each instant change or immediately after user focus leaves the editor area.</simpara>
        </section>
        <section id="sect-Component_Reference-editor-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the input control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the input control to the <literal><phrase role="parameter">newValue</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getEditor()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns the CKEditor object instance associated to given <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getInput()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns the associated textarea.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">focus()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Gives focus to this component</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">blur()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Removes focus from this component</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isFocused()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if this component is focused</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isDirty()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if editor is focused and it was edited from last focus event (reset by blur event, by using <literal><phrase role="code">setValue(newValue)</phrase></literal> call and when component is re-rendered)</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isValueChanged()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if the control’s value has been changed from the default (reset by <literal><phrase role="code">setValue(newValue)</phrase></literal> call and when component is re-rendered)</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isReadonly()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if editor content is editable.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setReadonly(readonly)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>When <literal>readonly</literal> is <literal>true</literal>, editor will be switched to editable state. Otherwise, it will be switched to readonly state.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-editor-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Editor</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIEditor</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Editor</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.EditorRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-editor-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="editor-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_wrapper</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">editorMainBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_dialog_body</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_dialog_title</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">repeat-x</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term><literal>.cke_skin_richfaces .cke_path a</literal>, <literal>.cke_skin_richfaces .cke_path .cke_empty</literal></term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">editorMainTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_button a.cke_on</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term><literal>.cke_skin_richfaces .cke_button a:hover</literal>, <literal>.cke_skin_richfaces .cke_button a:focus</literal>, <literal>.cke_skin_richfaces .cke_button a:active</literal></term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_rcombo a</literal>
                        </term>
                        <listitem>
                          <simpara><literal>.cke_skin_richfaces .cke_rcombo a:active</literal>:: <literal>.cke_skin_richfaces .cke_rcombo a:hover</literal>::</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.cke_skin_richfaces .cke_rcombo .cke_openbutton</literal>
                        </term>
                        <listitem>
</listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-fileUpload">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase></literal> component allows the user to upload files to a server. It features multiple uploads, progress bars, restrictions on file types, and restrictions on sizes of the files to be uploaded.</simpara>
        <section id="sect-Component_Reference-fileUpload-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage requires the <literal><phrase role="varname">fileUploadListener</phrase></literal> attribute. Use the attribute to reference a listener function on the server side after each file is uploaded. The listener should process files as required, such as storing them in the <literal><phrase role="filename">session/db/filesystem/</phrase></literal> directory. The component itself does not store uploaded files, so if the listener is not implemented they are not stored anywhere.</simpara>
          <example id="exam-Component_Reference-fileUpload-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:fileUpload fileUploadListener="#{bean.listener}" /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-fileUpload-Upload_settings">
          <title>Upload settings</title>
          <simpara>Files are uploaded to either the temporary folder (different for each operating system) or to <acronym>RAM</acronym> (random-access memory), depending on the value of the <literal><phrase role="parameter">org.richfaces.fileUpload.createTempFiles</phrase></literal> context parameter of the <literal><phrase role="filename">web.xml</phrase></literal> settings file for the project. If the parameter is set to <literal>true</literal>, the files are uploaded to the temporary folder.</simpara>
          <simpara>To limit the maximum size of the uploaded files, define the byte size with the <literal><phrase role="parameter">org.richfaces.fileUpload.maxRequestSize</phrase></literal> context parameter of the <literal><phrase role="filename">web.xml</phrase></literal> settings file for the project.</simpara>
        </section>
        <section id="sect-Component_Reference-fileUpload-Sanitizing_file_upload_input">
          <title>Sanitizing file upload input</title>
          <simpara>Any file is accepted by r:fileUpload component by default. There are three parameters available for limiting what can user upload to the server:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">maxFilesQuantity</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">maxFilesQuantity</phrase></literal> parameter defines maximum number of files allowed to be uploaded. After a number of files in the list equals to the value of this attribute, "Add" button disappears and nothing could be uploaded even if you clear the whole list. In order to upload files again you should rerender the component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">acceptedTypes</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">acceptedTypes</phrase></literal> parameter defines comma separated list of file extensions accepted by component. The component does not provide any feedback when rejecting file. For introducing feedback for rejection, use <literal><phrase role="varname">ontyperejected</phrase></literal> parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">ontyperejected</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">ontyperejected</phrase></literal> parameter defines event handler when file does not meet conditions stated by <literal><phrase role="varname">acceptedTypes</phrase></literal> parameter.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-fileUpload-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>Set the <literal><phrase role="varname">immediateUpload</phrase></literal> attribute to <literal>true</literal> to upload files as soon as they are added to the list, rather than waiting for the user to press the <guibutton>Upload</guibutton> button.</simpara>
          <simpara>The text labels used in the component can be completely customized. Labels for the various controls of the component can be set using the following parameters:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">addLabel</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">addLabel</phrase></literal> parameter sets the label for the <guibutton>Add</guibutton> button.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">clearAllLabel</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">clearAllLabel</phrase></literal> parameter sets the label for the <guibutton>Clear All</guibutton> button.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">clearLabel</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">clearLabel</phrase></literal> parameter sets the label for the <guibutton>Clear</guibutton> button.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">uploadLabel</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">uploadLabel</phrase></literal> parameter sets the label for the <guibutton>Upload</guibutton> button.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase></literal> component provides a built-in progress bar to indicate the progress of each file that is uploaded. This progress bar can be replaced with a <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component added to the <literal>progress</literal> facet. Refer to <xref linkend="sect-Component_Reference-Output_and_messages-progressBar"/> for details on the <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component.</simpara>
          <simpara>To disable the <literal><phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase></literal> component, use the <literal><phrase role="varname">disabled</phrase></literal> attribute.</simpara>
        </section>
        <section id="sect-Component_Reference-fileUpload-fileUpload_client-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase></literal> client-side events</title>
          <simpara>There are a number of event handlers specific to the <literal><phrase role="sgmltag">&lt;r:fileUpload&gt;</phrase></literal> component:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="varname">filesubmit</phrase></literal> is triggered before a file is uploaded.</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="varname">uploadcomplete</phrase></literal> is triggered after all files in the list have finished uploading.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-fileUpload-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.FileUpload</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIFileUpload</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.FileUpload</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.FileUploadRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.FileUploadHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-fileUpload-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="fileUpload-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">background-color</phrase></literal>, <literal><phrase role="property">border-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-lst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for lists in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-cntr-hdn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the file upload container when it is hidden.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btns-lft</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-fu-btns-rgh</literal>:: These classes define styles for buttons on the left and right of the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-add</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Add</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>trimColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-cnt-add</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the <guibutton>Add</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-add-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Add</guibutton> button in the file upload control when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableFooterBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableFooterBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-cnt-add-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the <guibutton>Add</guibutton> button in the file upload control when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-upl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Upload</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>trimColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-cnt-upl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the <guibutton>Upload</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-clr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guibutton>Clear</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>trimColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-btn-cnt-clr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the <guibutton>Clear</guibutton> button in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-itm-lft</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-fu-itm-rgh</literal>:: These classes define styles for items on the left and right of the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of an item in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-itm-st</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the status of an item in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-itm-lnk</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a link item in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalLinkColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the input field in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-fu-inp-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the input field container in the file upload control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-inplaceInput">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:inplaceInput&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:inplaceInput&gt;</phrase></literal> component allows information to be entered in-line in blocks of text, improving readability of the text. Multiple input regions can be navigated with keyboard navigation. The component has three functional states: the <emphasis>view</emphasis> state, where the component displays its initial setting, such as "click to edit"; the <emphasis>edit</emphasis> state, where the user can input text; and the "changed" state, where the new value for the component has been confirmed but can be edited again if required.</simpara>
        <section id="sect-Component_Reference-inplaceInput-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage requires the <literal><phrase role="varname">value</phrase></literal> attribute to point to the expression for the current value of the component. Validation and conversion rules for the JSF <literal><phrase role="classname">UIInput</phrase></literal> control apply as usual.</simpara>
        </section>
        <section id="sect-Component_Reference-inplaceInput-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>When in the initial <emphasis>view</emphasis> state, the starting label can be set using the <literal><phrase role="varname">defaultLabel</phrase></literal> attribute. Alternatively, if the initial value is already set through the <literal><phrase role="varname">value</phrase></literal> attribute, this is displayed instead.</simpara>
          <simpara>Once the user has entered text, the label is stored in the model specified by the <literal><phrase role="varname">value</phrase></literal> attribute. The use of the default label and value is shown in <xref linkend="exam-Component_Reference-inplaceInput-Default_label_and_value"/>.</simpara>
          <example id="exam-Component_Reference-inplaceInput-Default_label_and_value">
            <title>Default label and value</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:inplaceInput value="#{bean.value}" defaultLabel="click to edit"/&gt;
</programlisting>
          </example>
          <simpara>By default, the event to switch the component to the <emphasis>edit</emphasis> state is a single mouse click. This can be changed using the <literal><phrase role="varname">editEvent</phrase></literal> attribute to specify a different event.</simpara>
          <simpara>The user can confirm and save their input in multiple ways:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>By default, pressing the <keycap>Enter</keycap> key will confirm and save the input.</simpara>
            </listitem>
            <listitem>
              <simpara>If <literal><phrase role="code">showControls="true"</phrase></literal> is set, buttons for confirming or canceling are added to the component.</simpara>
            </listitem>
            <listitem>
              <simpara>If <literal><phrase role="code">saveOnBlur="true"</phrase></literal> is set, the input is saved on the component’s blur event.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Pressing the <keycap>Esc</keycap> key cancels editing in all cases.</simpara>
        </section>
        <section id="sect-Component_Reference-inplaceInput-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:inplaceInput&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the input control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the input control to the <literal><phrase role="parameter">newValue</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isEditState()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if the control is currently in the <emphasis>edit</emphasis> state, or <literal>false</literal> if the control is currently in the <emphasis>view</emphasis> state.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isValueChanged()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if the control’s value has been changed from the default.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">save()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Saves the current item as the control’s value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">cancel()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Cancel editing the value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getInput()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the DOM element for the input.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-inplaceInput-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InplaceInput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIInplaceInput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.InplaceInput</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InplaceInputRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-inplaceInput-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="inplaceInput-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input when it is in the default state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>editorBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input when it is in the editing state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-chng</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input when it is in the changed state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input when it is in the disabled state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-fld</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>editBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">background-color</phrase></literal>, <literal><phrase role="property">border-bottom-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of the in-place input.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-dflt-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the default label of the in-place input.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the buttons for the in-place input.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-btn-p</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the buttons for the in-place input when they are pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-btn-set</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ii-btn-prepos</literal>:: <literal>.rf-ii-btn-pos</literal>:: These classes define the positioning of the buttons.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-btn-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button shadows for the in-place input.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-btn-shdw-t</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ii-btn-shdw-b</literal>:: <literal>.rf-ii-btn-shdw-l</literal>:: <literal>.rf-ii-btn-shdw-r</literal>:: These classes define the top, bottom, left, and right edge of the button shadows.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ii-none</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place input when it cannot be edited.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-inplaceSelect">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase></literal> component is similar to the <literal><phrase role="sgmltag">&lt;r:inplaceInput&gt;</phrase></literal> component, except that the <literal><phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase></literal> component uses a drop-down selection box to enter text instead of a regular text field. Changes can be rendered either in-line or for the whole block, and inputs can be focused with keyboard navigation. The component is based on the JSF <literal><phrase role="classname">UISelectOne</phrase></literal> component, so all the standard rules for value definition, processing, conversion, and validation apply.</simpara>
        <simpara>The component has three functional states:</simpara>
        <itemizedlist>
          <listitem>
            <simpara>When in the <emphasis>view</emphasis> state, the component displays its initial setting, such as "click to edit".</simpara>
          </listitem>
          <listitem>
            <simpara>When in the <emphasis>edit</emphasis> state, the user can select a value from a drop-down list.</simpara>
          </listitem>
          <listitem>
            <simpara>When in the <emphasis>changed</emphasis> state, the new value for the component has been confirmed, but it can be edited again if required.</simpara>
          </listitem>
        </itemizedlist>
        <figure id="figu-Component_Reference-inplaceSelect-inplaceSelect">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-inplaceSelect-inplaceSelect.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-inplaceSelect-inplaceSelect</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-inplaceSelect-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage requires the <literal><phrase role="varname">value</phrase></literal> attribute to point to the expression for the current value of the component and a list of items. The list of items can be defined using the JSF components <literal><phrase role="sgmltag">&lt;f:selectItem/&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;f:selectItems/&gt;</phrase></literal>.</simpara>
          <example id="exam-Component_Reference-inplaceSelect-Defining_list_items_for_inplaceSelect">
            <title>Defining list items for <literal><phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase></literal></title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:inplaceSelect value="#{bean.inputValue}" defaultLabel="click to edit" &gt;
    &lt;f:selectItems value="#{bean.selectItems}" /&gt;
    &lt;f.selectItem itemValue="1" itemLabel="Item 1" /&gt;
    &lt;f.selectItem itemValue="2" itemLabel="Item 2" /&gt;
    &lt;f.selectItem itemValue="3" itemLabel="Item 3" /&gt;
    &lt;f.selectItem itemValue="4" itemLabel="Item 4" /&gt;
&lt;/r:inplaceSelect&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-inplaceSelect-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>When in the initial <emphasis>view</emphasis> state, the starting label can be set using the <literal><phrase role="varname">defaultLabel</phrase></literal> attribute, such as <literal><phrase role="code">defaultLabel="click to edit"</phrase></literal>. Alternatively, if the initial value is already set through the <literal><phrase role="varname">value</phrase></literal> attribute, this is displayed instead.</simpara>
          <simpara>By default, the event to switch the component to the <emphasis>edit</emphasis> state is a single mouse click. This can be changed using the <literal><phrase role="varname">editEvent</phrase></literal> attribute to specify a different event. When switching to <emphasis>edit</emphasis> mode, the drop-down list of possible values will automatically be displayed; this can be deactivated by setting <literal><phrase role="code">openOnEdit="false"</phrase></literal>.</simpara>
          <simpara>Once a new value for the control is saved, the state switches to the "changed" state. Saving a new value for the control can be performed in a number of ways:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>Once the user selects an item from the drop-down list, the item is saved as the new control value. This is the default setting. If <literal><phrase role="code">saveOnSelect="false"</phrase></literal> is set, the component applies the selected item but remains in the <emphasis>edit</emphasis> state so a different selection could be chosen. The value is then applied when the <keycap>Enter</keycap> key is pressed.</simpara>
            </listitem>
            <listitem>
              <simpara>If <literal><phrase role="code">saveOnBlur="true"</phrase></literal> is set, the selected item is saved as the new control value when the control loses focus.</simpara>
            </listitem>
            <listitem>
              <simpara>If <literal><phrase role="code">showControls="true"</phrase></literal> is set, buttons are added to the control to confirm or cancel the selection. The new control value is only saved once the user confirms the selection using the button.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Pressing the <keycap>Esc</keycap> key cancels editing in all cases.</simpara>
        </section>
        <section id="sect-Component_Reference-inplaceSelect-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:inplaceSelect&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the select control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the select control to the <literal><phrase role="parameter">newValue</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isEditState()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if the control is currently in the <emphasis>edit</emphasis> state, or <literal>false</literal> if the control is currently in the <emphasis>view</emphasis> state.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isValueChanged()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns <literal>true</literal> if the control’s value has been changed from the default.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">save()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Saves the current item as the control’s value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">cancel()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Cancel editing the value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getInput()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the input entered into the control by the user.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getLabel()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the default label of the control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setLabel(newLabel)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the default label of the control to the <literal><phrase role="parameter">newLabel</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showPopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the pop-up list of possible values.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hidePopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the pop-up list.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-inplaceSelect-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InplaceSelect</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIInplaceSelect</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Select</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InplaceSelectRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-inplaceSelect-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="inplaceSelect-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it is in the default state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>editorBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it is in the editing state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-chng</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it is in the changed state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it is in the disabled state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-fld</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>editBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-opt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an option for the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the selected option of the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-dflt-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the default label of the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-edit</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it is being edited.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the buttons for the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-btn-p</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the buttons for the in-place select when they are pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-btn-set</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-is-btn-prepos</literal>:: <literal>.rf-is-btn-pos</literal>:: These classes define the positioning of the buttons.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-lst-pos</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the positioning of the list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-lst-dec</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a decreasing list for the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>editBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-lst-scrl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the list scrollbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select shadow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-shdw-t</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-is-shdw-b</literal>:: <literal>.rf-is-shdw-l</literal>:: <literal>.rf-is-shdw-r</literal>:: These classes define the top, bottom, left, and right edge of the in-place select shadows.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-btn-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button shadows for the in-place select.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-is-none</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the in-place select when it cannot be edited.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-inputNumberSlider">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:inputNumberSlider&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:inputNumberSlider&gt;</phrase></literal> component provides a slider for changing numerical values. Optional features include control arrows to step through the values, a tool-tip to display the value while sliding, and a text field for typing the numerical value which can then be validated against the slider’s range.</simpara>
        <figure id="figu-Component_Reference-inputNumberSlider-inputNumberSlider">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:inputNumberSlider&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-inputNumberSlider-inputNumberSlider.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-inputNumberSlider-inputNumberSlider</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-inputNumberSlider-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic use of the component with no attributes specified will render a slider with a minimum value of 0, a maximum of 100, and a gradient step of 1, together with a text field for typing the desired numerical value. The slider is labeled with the minimum and maximum boundary values, and a tool-tip showing the current value is shown while sliding the slider. The <literal><phrase role="varname">value</phrase></literal> attribute is used for storing the currently selected value of the slider. Standard conversion and validation for the JSF <literal><phrase role="classname">UIInput</phrase></literal> component is applied.</simpara>
        </section>
        <section id="sect-Component_Reference-inputNumberSlider-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>The text field can be removed by setting <literal><phrase role="code">showInput="false"</phrase></literal>.</simpara>
          <simpara>The properties of the slider can be set with the attributes <literal><phrase role="varname">minValue</phrase></literal>, <literal><phrase role="varname">maxValue</phrase></literal>, and <literal><phrase role="varname">step</phrase></literal>.</simpara>
          <simpara>The minimum and maximum labels on the slider can be hidden by setting <literal><phrase role="code">showBoundaryValues="false"</phrase></literal>. The tool-tip showing the current value can be hidden by setting <literal><phrase role="code">showToolTip="false"</phrase></literal>.</simpara>
          <simpara>Arrow controls can be added to either side of the slider to adjust the value incrementally by setting <literal><phrase role="code">showArrows="true"</phrase></literal>. Clicking the arrows move the slider indicator in that direction by the gradient step, and clicking and holding the arrows moves the indicator continuously. The time delay for each step when updating continuously can be defined using the <literal><phrase role="varname">delay</phrase></literal> attribute.</simpara>
        </section>
        <section id="sect-Component_Reference-inputNumberSlider-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:inputNumberSlider&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the slider control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the slider control to the <literal><phrase role="parameter">newValue</phrase></literal> integer passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">increase()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Increase the value of the slider control by the gradient step amount.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">decrease()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Decrease the value of the slider control by the gradient step amount.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-inputNumberSlider-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InputNumberSlider</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIInputNumberSlider</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Input</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.inputNumberSliderRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-inputNumberSlider-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="inputNumberSlider-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the number slider itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-trc</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the number slider track.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>controlBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-trc-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the number slider track.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-mn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>minimum</guilabel> label on the number slider.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-mx</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>maximum</guilabel> label on the number slider.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the input field on the number slider.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-inp-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the input field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-hnd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the handle on the number slider.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-hnd-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the handle.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-hnd-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the handle when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-hnd-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the handle when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-dec</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-insl-inc</literal>:: These classes define styles for the step controls to decrease and increase the number.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-dec-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-insl-inc-sel</literal>:: These classes define styles for the step controls when they are selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-dec-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-insl-inc-dis</literal>:: These classes define styles for the step controls when they are disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insl-tt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tool-tip on the number slider.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tipBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tipBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-inputNumberSpinner">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:inputNumberSpinner&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:inputNumberSpinner&gt;</phrase></literal> component is a single-line input field with buttons to increase and decrease a numerical value. The value can be changed using the corresponding directional keys on a keyboard, or by typing into the field.</simpara>
        <figure id="figu-Component_Reference-inputNumberSpinner-inputNumberSpinner">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:inputNumberSpinner&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-inputNumberSpinner-inputNumberSpinner.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-inputNumberSpinner-inputNumberSpinner</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-inputNumberSpinner-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic use of the component with no attributes specified will render a number spinner with a minimum value of 1, a maximum value of 100, and a gradient step of 1.</simpara>
          <simpara>These default properties can be re-defined with the attributes <literal><phrase role="varname">minValue</phrase></literal>, <literal><phrase role="varname">maxValue</phrase></literal>, and <literal><phrase role="varname">step</phrase></literal> respectively. The starting value of the spinner is the minimum value unless otherwise specified with the <literal><phrase role="varname">value</phrase></literal> attribute.</simpara>
        </section>
        <section id="sect-Component_Reference-inputNumberSpinner-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>When changing the value using the buttons, raising the value above the maximum or cause the spinner to restart at the minimum value. Likewise, when lowering below the minimum value the spinner will reset to the maximum value. This behavior can be deactivated by setting <literal><phrase role="code">cycled="false"</phrase></literal>, which will cause the buttons to stop responding when the reach the maximum or minimum value.</simpara>
          <simpara>The ability to change the value by typing into the text field can be disabled by setting <literal><phrase role="code">enableManualInput="false"</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-inputNumberSpinner-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:inputNumberSpinner&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the spinner control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the spinner control to the <literal><phrase role="parameter">newValue</phrase></literal> integer passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">increase()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Increase the value of the spinner control by the gradient step amount.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">decrease()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Decrease the value of the spinner control by the gradient step amount.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-inputNumberSpinner-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InputNumberSpinner</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIInputNumber</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Input</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.InputNumberSpinnerRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-inputNumberSpinner-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="inputNumberSpinner-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the number spinner itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insp-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the input field on the number spinner.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insp-btns</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the buttons on the number spinner.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insp-dec</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-insp-inc</literal>:: These classes define styles for the step controls to decrease and increase the number.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-insp-dec-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-insp-inc-dis</literal>:: These classes define styles for the step controls when they are disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-select">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:select&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component provides a drop-down list box for selecting a single value from multiple options. The <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component can be configured as a combo-box, where it will accept typed input. The component also supports keyboard navigation. The <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component functions similarly to the JSF <literal><phrase role="classname">UISelectOne</phrase></literal> component.</simpara>
        <figure id="figu-Component_Reference-select-select">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:select&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-select-select.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-select-select</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-select-Basic_usage">
          <title>Basic usage</title>
          <simpara>Simple usage of the <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component requires the <literal><phrase role="varname">value</phrase></literal> attribute to store the selected value. Additionally, child tags to manage the list of selections are required. The child tags can either be a number of <literal><phrase role="sgmltag">&lt;f:selectItem&gt;</phrase></literal> tags or a <literal><phrase role="sgmltag">&lt;f:selectItems&gt;</phrase></literal> tag which points to a data model containing a list of selection items. The <literal><phrase role="varname">value</phrase></literal> attribute is used to store the current selection.</simpara>
          <example id="exam-Component_Reference-select-Selection_items">
            <title>Selection items</title>
            <variablelist>
              <varlistentry>
                <term>Using multiple <literal><phrase role="sgmltag">&lt;f:selectItem&gt;</phrase></literal>  tags</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:select&gt;
   &lt;f:selectItem itemValue="0" itemLabel="Option 1" /&gt;
   &lt;f:selectItem itemValue="1" itemLabel="Option 2" /&gt;
   &lt;f:selectItem itemValue="2" itemLabel="Option 3" /&gt;
   &lt;f:selectItem itemValue="3" itemLabel="Option 4" /&gt;
   &lt;f:selectItem itemValue="4" itemLabel="Option 5" /&gt;
&lt;/r:select&gt;
</programlisting>
            <variablelist>
              <varlistentry>
                <term>Using a single <literal><phrase role="sgmltag">&lt;f:selectItems&gt;</phrase></literal>  tag</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:select&gt;
   &lt;f:selectItems value="#{bean.options}" /&gt;
&lt;/r:select&gt;
</programlisting>
          </example>
          <simpara>The arrow keys on a keyboard can be used to highlight different items in the list. If the control loses focus or the <keycap>Enter</keycap> key is pressed, the highlighted option is chosen as the value and the list is closed. Pressing the <keycap>Esc</keycap> key will close the list but not change the value.</simpara>
        </section>
        <section id="sect-Component_Reference-select-Using_manual_input">
          <title>Using manual input</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component allows the user to type into a text field to scroll through or filter the list. By default, the <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component functions as a drop-down list with no manual input. To add keyboard support for manual input, set <literal><phrase role="code">enableManualInput="true"</phrase></literal>.</simpara>
          <simpara>Once the user begins typing, the first available matching option is highlighted. If the typed text does not match any values in the list, no value is chosen and the drop-down list displays as empty. Other keyboard interaction remains the same as the basic drop-down list.</simpara>
          <simpara>The standard JSF <literal><phrase role="sgmltag">&lt;h:selectOne&gt;</phrase></literal> component does not offer this extended keyboard support. However, since the <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component is still based on the JSF <literal><phrase role="classname">UISelectOne</phrase></literal> component, it will not accept a value that does not match any items in the drop-down list. If an invalid value is entered, it is highlighted as erroneous and validation messages appear with the submission.</simpara>
        </section>
        <section id="sect-Component_Reference-select-Advanced_options">
          <title>Advanced options</title>
          <simpara>Use the <literal><phrase role="varname">defaultLabel</phrase></literal> attribute to set a place-holder label, such as <literal><phrase role="code">defaultLabel="select an option"</phrase></literal>.</simpara>
          <simpara>Server-side processing occurs in the same manner as for an <literal><phrase role="sgmltag">&lt;h:selectOneMenu&gt;</phrase></literal> component. As such, custom objects used for selection items should use the same converters as for an <literal><phrase role="sgmltag">&lt;h:selectOneMenu&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-select-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:select&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Get the current value of the text field.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue(newValue)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the value of the text field to the <literal><phrase role="parameter">newValue</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getLabel()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the default label of the control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">showPopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the pop-up list of completion values.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hidePopup()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the pop-up list.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-select-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Select</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UISelect</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Select</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.SelectRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-select-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="select-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the select control itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the select control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-inp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the select control input field.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">controlBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-fld-err</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the input field when an error occurs.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-opt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an option in the select control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the selected option of the select control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-dflt-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the default label of the select control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the select control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-btn-arrow</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the arrow on the button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-btn-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the select control when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-lst-scrl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the list scrollbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the select control shadow.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-sel-shdw-t</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-sel-shdw-b</literal>:: <literal>.rf-sel-shdw-l</literal>:: <literal>.rf-sel-shdw-r</literal>:: These classes define the top, bottom, left, and right edge of the select control shadows.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-orderingList">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:orderingList&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal> is a component for ordering items in a list (client-side).</simpara>
        <figure id="figu-Component_Reference-orderingList-orderingList">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:select&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-orderingList-orderingList.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-orderingList-orderingList</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-orderingList-Basic_usage">
          <title>Basic usage</title>
          <simpara>To use the <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal> bind the <literal><phrase role="varname">value</phrase></literal> attribute to the list to be ordered. The <literal><phrase role="varname">var</phrase></literal> attribute specifies a variable to use when iterating through the list values. The <literal><phrase role="varname">var</phrase></literal> attribute is used within the <literal><phrase role="varname">itemLabel</phrase></literal> to assign the object value to be displayed. Similarly, the <literal><phrase role="varname">var</phrase></literal> attribute is used within the <literal><phrase role="varname">itemValue</phrase></literal> attribute to specify the object value mapped by the display value. If the itemValue is not of type <literal><phrase role="classname">String</phrase></literal>, a converter must be specified for this itemValue using either the <literal><phrase role="varname">converter</phrase></literal> attribute, or a nested <literal><phrase role="sgmltag">&lt;f:converter&gt;</phrase></literal> tag.</simpara>
          <example id="exam-Component_Reference-orderingList-ItemLabel_use">
            <title>ItemLabel/ItemValue use</title>
            <variablelist>
              <varlistentry>
                <term>Using the <literal><phrase role="varname">itemLabel</phrase></literal>  and <literal><phrase role="varname">itemValue</phrase></literal>  attributes</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:orderingList value="#{listSelectBean.capitals}" var="capital" itemValue="#{capital}" itemLabel="#{capital.name}"&gt;
    &lt;f:converter converterId="CapitalsConverter" /&gt;
&lt;/r:orderingList&gt;</programlisting>
          </example>
          <simpara>The arrow keys on a keyboard can be used to highlight different items in the list. Pressing the ctrlmodifier with the arrow keys will move the selected item up or down within the list.</simpara>
        </section>
        <section id="sect-Component_Reference-orderingList-Column_layout">
          <title>Column Layout</title>
          <simpara>In addition to the above simple itemLabel display, the <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal> supports a columnar layout of the itemValues to be sorted. This is achieved by nesting <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> tags within the orderingList, and referencing the <literal><phrase role="varname">var</phrase></literal> attribute from within the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> EL.</simpara>
          <example id="exam-Component_Reference-orderingList-column">
            <title>Nested <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> tags</title>
            <variablelist>
              <varlistentry>
                <term>Using <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal>  tags nested within the <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal></term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:orderingList value="#{listSelectBean.capitals}" var="capital"  listWidth="300px"&gt;
    &lt;f:converter converterId="CapitalsConverter" /&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Flag&lt;/f:facet&gt;
        &lt;h:graphicImage value="#{capital.stateFlag}" alt="flag"  width="33"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Name&lt;/f:facet&gt;
        #{capital.name}
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State&lt;/f:facet&gt;
        #{capital.state}
    &lt;/r:column&gt;
&lt;/r:orderingList&gt;</programlisting>
          </example>
          <simpara>When using <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> tags to layout the <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal> items, the <literal><phrase role="varname">itemLabel</phrase></literal> attribute is irrelevant, and may be left out.</simpara>
        </section>
        <section id="sect-Component_Reference-orderingList-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getList()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns the javascript list object backing the <literal><phrase role="sgmltag">&lt;r:orderingList&gt;</phrase></literal>. This list can be used to select/unselect item(s).</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">up()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Move the currently selected item(s) up one step.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">down()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Move the currently selected item(s) down one step.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">upTop()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Move the currently selected item(s) to the top of the list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">downBottom()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Move the currently selected item(s) to the bottom of the list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">toggleButtons()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Activate/de-activate the orderingList buttons based on the current component item state.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-orderingList-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.OrderingList</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIOrderingList</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.SelectMany</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.OrderingListRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-orderingList-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="orderingList-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the orderingList control itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-cptn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the caption of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-lst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the items list of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the items list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-opt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an option in the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the selected option of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-dflt-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the default label of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the orderingList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-btn-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the orderingList control when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ord-lst-scrl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the list scrollbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-inputs-pickList">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:pickList&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> is a component for selecting items from a list. Additionally, it allows for the selected items to be ordered (client-side). From the client side perspective, items are added/removed from the source list, and removed/added to the target list. However it is important to note that the server-side source of items is never modified, and always represents the list of all items available for selection. If the list of unselected items is required, it can be determined by subtracting the collection of all selected items from the collection of all available items.</simpara>
        <figure id="figu-Component_Reference-pickList-pickList">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:select&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-pickList-pickList.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-pickList-pickList</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-pickList-Basic_usage">
          <title>Basic usage</title>
          <simpara>To use the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> bind the <literal><phrase role="varname">value</phrase></literal> attribute to the target list, where the selected items will be stored. The list of source items is provided by nesting a <literal><phrase role="classname">SelectItem</phrase></literal> source, such as a <literal><phrase role="sgmltag">&lt;f:selectItems&gt;</phrase></literal> tag, or a list of <literal><phrase role="sgmltag">&lt;f:selectItem&gt;</phrase></literal> tags. If the itemValue of the <literal><phrase role="classname">SelectItem</phrase></literal> is not of type <literal><phrase role="classname">String</phrase></literal>, a converter must be specified for this itemValue using either the <literal><phrase role="varname">converter</phrase></literal> attribute, or a nested <literal><phrase role="sgmltag">&lt;f:converter&gt;</phrase></literal> tag.</simpara>
          <example id="exam-Component_Reference-pickList-ItemLabel_use">
            <title>Simple pickList use</title>
            <variablelist>
              <varlistentry>
                <term>Using the default <literal><phrase role="classname">SelectItem</phrase></literal>  itemLabel to generate the pickList source and target items.</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:pickList value="#{listSelectBean.selectedCapitals}"
               sourceCaption="Available cities" targetCaption="Selected cities"
               listWidth="170px" listHeight="100px"
               orderable="true"&gt;
    &lt;f:selectItems value="#{listSelectBean.capitals}" var="capital" itemValue="#{capital}" itemLabel="#{capital.name}" /&gt;
    &lt;f:converter converterId="CapitalsConverter" /&gt;
&lt;/r:pickList&gt;</programlisting>
          </example>
          <simpara>The items in the target list can be ordered client-side by setting the <literal><phrase role="varname">orderable</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> tag to <literal><phrase role="code">true</phrase></literal>. The arrow keys on a keyboard can then be used to highlight different items in the target list, and pressing the ctrlmodifier with the arrow keys will move the selected item up or down within the target list.</simpara>
        </section>
        <section id="sect-Component_Reference-pickList-Column_layout">
          <title>Column Layout</title>
          <simpara>In addition to the above simple <literal><phrase role="classname">SelectItem</phrase></literal> itemLabel display, the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> supports a columnar layout of the items to be selected. This is achieved by adding a <literal><phrase role="varname">var</phrase></literal> attribute used to represent the collection of nested <literal><phrase role="classname">SelectItems</phrase></literal>, and nesting <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> tags within the pickList. The <literal><phrase role="varname">var</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;f:selectItem&gt;</phrase></literal> is then referenced from within the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> EL.</simpara>
          <example id="exam-Component_Reference-pickList-column">
            <title>Nested <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> tags</title>
            <variablelist>
              <varlistentry>
                <term>Using <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal>  tags nested within the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal></term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:pickList value="#{listSelectBean.selectedCapitals}" var="capital" listHeight="200px"&gt;
    &lt;f:selectItems value="#{listSelectBean.capitals}" /&gt;
    &lt;f:converter converterId="CapitalsConverter" /&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Flag&lt;/f:facet&gt;
        &lt;h:graphicImage value="#{capital.stateFlag}" alt="flag" width="33"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Name&lt;/f:facet&gt;
        #{capital.name}
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State&lt;/f:facet&gt;
        #{capital.state}
    &lt;/r:column&gt;
&lt;/r:pickList&gt;</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-pickList-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getSourceList()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns the javascript list object backing the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> source list. This list can be used to select/unselect item(s).</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getTargetList()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns the javascript list object backing the <literal><phrase role="sgmltag">&lt;r:pickList&gt;</phrase></literal> target list. This list can be used to select/unselect item(s).</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">add()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Add the currently selected items to the target list, removing them from the source list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">addAll()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Add all the source items to the target list, removing them from the source list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">remove()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Remove the currently selected items from the target list, adding them to the source list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">removeAll()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Remove all the source items from the target list, adding them to the source list.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">toggleButtons()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Activate/de-activate the pickList buttons based on the current component item state.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-pickList-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PickList</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPickList</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.SelectMany</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PickListRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-pickList-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="pickList-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the pickList control itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rf-pick-src-cptn, .rf-pick-tgt-cptn</literal>
                        </term>
                        <listitem>
                          <simpara>These classes define styles for the source and target captions of the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-lst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the items list of the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the items list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-opt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an option in the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the selected option of the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-dflt-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the default label of the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the pickList control.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-btn-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the button of the pickList control when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pick-lst-scrl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the list scrollbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Panels">
      <title>Panels</title>
      <simpara>This chapter details those components which act as panels and containers to hold groups of other components.</simpara>
      <section id="sect-Component_Reference-Panels-panel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:panel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:panel&gt;</phrase></literal> component is a bordered panel with an optional header.</simpara>
        <figure id="figu-Component_Reference-panel-panel">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:panel&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-panel-panel.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-panel-panel</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-panel-Basic_usage">
          <title>Basic usage</title>
          <simpara>No attributes need to be listed for basic usage. a <literal><phrase role="sgmltag">&lt;r:panel&gt;</phrase></literal> without any attributes defined renders a bordered region with no header.</simpara>
        </section>
        <section id="sect-Component_Reference-panel-Adding_a_header">
          <title>Adding a header</title>
          <simpara>To add a header to the panel, use the <literal><phrase role="varname">header</phrase></literal> attribute to specify the text to appear in the header. Alternatively the header can be constructed using a header facet. <xref linkend="exam-Component_Reference-panel-Adding_a_header"/> demonstrates the two different approaches.</simpara>
          <example id="exam-Component_Reference-panel-Adding_a_header">
            <title>Adding a header</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel header="This is the panel header"&gt;
    &lt;h:outputText value="This is the panel content" /&gt;
&lt;/r:panel&gt;
</programlisting>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel&gt;
    &lt;f:facet name="header"&gt;
        &lt;h:outputText value="This is the panel header"&gt;
    &lt;/f:facet&gt;
    &lt;h:outputText value="This is the panel content" /&gt;
&lt;/r:panel&gt;
</programlisting>
            <simpara>Both the examples render an identical panel.</simpara>
            <blockquote>
              <figure>
                <title>Adding a header</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-panel-Adding_a_header.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-panel-Adding_a_header</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-panel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Panel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Panel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-panel-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="panel-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-p</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the panel itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-p-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of a panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">background-color</phrase></literal>, <literal><phrase role="property">border-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerWeightFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-p-b</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the body of a panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Panels-accordion">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:accordion&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> is a series of panels stacked on top of each other, each collapsed such that only the header of the panel is showing. When the header of a panel is clicked, it is expanded to show the content of the panel. Clicking on a different header will collapse the previous panel and epand the selected one. Each panel contained in a <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component is a <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component.</simpara>
        <figure id="figu-Component_Reference-accordion-accordion">
          <title>A <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component containing three <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> components</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-accordion-accordion.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-accordion-accordion</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-accordion-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component requires no attributes for basic usage. The component can contain any number of <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> components as children. The headers of the <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> components control the expanding and collapsing when clicked. Only a single <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> can be displayed at a time. Refer to <xref linkend="sect-Component_Reference-Panels-accordionItem"/> for details on the <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component.</simpara>
          <note>
            <title>Form elements required</title>
            <simpara>All <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> components should be wrapped in a form element when using either <literal>ajax</literal> or <literal>server</literal> mode, as usual for submitting components.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-accordion-Switching_panels">
          <title>Switching panels</title>
          <simpara>The <literal><phrase role="varname">activeItem</phrase></literal> attribute holds the active panel name. This name is a reference to the <literal><phrase role="varname">name</phrase></literal> identifier of the active child <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component.</simpara>
          <simpara>The switching mode for performing submissions is determined by the <literal><phrase role="varname">switchType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>The default setting. Activation of a <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component to perform a common submission, completely refreshing the page. Only one panel at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>Activation of a <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component to perform an Ajax form submission, and the content of the panel is rendered. Only one panel at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>Activation of a <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component to perform updates on the client side. All the panels are rendered on the client side during the initial page render. JavaScript changes the styles such that one panel component becomes hidden while the other is shown.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-accordion-accordion_client-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> client-side events</title>
          <simpara>In addition to the standard Ajax events and HTML events, the <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component uses the client-side events common to all switchable panels:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">itemchange</phrase></literal> event points to the function to perform when the switchable item is changed.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">beforeitemchange</phrase></literal> event points to the function to perform when before the switchable item is changed.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-accordion-accordion_server-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> server-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component uses the server-side events common to all switchable panels:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">ItemChangeEvent</phrase></literal> event occurs on the server side when an item is changed through Ajax using the <literal>server</literal> mode. It can be processed using the <literal><phrase role="varname">ItemChangeListener</phrase></literal> attribute. Refer to <xref linkend="sect-Component_Reference-Panels-itemChangeListener"/> for details on the <literal><phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase></literal> tag.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-accordion-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions, which are common to all switchable panels:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItems()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the items contained in the accordion control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItemsNames()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the names of the items contained in the accordion control.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchToItem(itemName)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to and display the item identified by the <literal><phrase role="parameter">itemName</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="function">firstItem()</phrase></literal>:: <literal><phrase role="function">prevItem()</phrase></literal>:: <literal><phrase role="function">nextItem()</phrase></literal>:: <literal><phrase role="function">lastItem()</phrase></literal></term>
              <listitem>
                <simpara>Get the name of the first item, the previous item, the next item, or the last item.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-accordion-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Accordion</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIAccordion</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Accordion</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AccordionRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.TogglePanelTagHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-accordion-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="accordion-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the accordion control itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of an accordion item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-hdr-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ac-itm-hdr-inact</literal>:: These classes define styles for the header when the item is either active (expanded) or inactive (collapsed).</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-hdr-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabDisabledTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of an accordion item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the item icon.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the expanded icon for an item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-ico-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ac-itm-ico-inact</literal>:: These classes define styles for the icon when the item is either active (expanded) or inactive (collapsed).</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the item label.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ac-itm-lbl-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ac-itm-lbl-inact</literal>:: These classes define styles for the label when the item is either active (expanded) or inactive (collapsed).</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Panels-accordionItem">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component is a panel for use with the <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component. <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> components can be added dynamically using iteration models with the <literal><phrase role="sgmltag">&lt;c:forEach&gt;</phrase></literal> tag.</simpara>
          <section id="sect-Component_Reference-accordionItem-Basic_usage">
            <title>Basic usage</title>
            <simpara>Basic usage of the <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component requires the <literal><phrase role="varname">header</phrase></literal> attribute, which provides the text on the panel header. The panel header is all that is visible when the accordion item is collapsed.</simpara>
            <simpara>Alternatively the <literal>header</literal> facet could be used in place of the <literal><phrase role="varname">header</phrase></literal> attribute. This would allow for additional styles and custom content to be applied to the tab.</simpara>
          </section>
          <section id="sect-Component_Reference-accordionItem-accordionItem_client-side_events">
            <title><literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> client-side events</title>
            <simpara>In addition to the standard HTML events, the <literal><phrase role="sgmltag">&lt;r:accordionItem&gt;</phrase></literal> component uses the client-side events common to all switchable panel items:</simpara>
            <itemizedlist>
              <listitem>
                <simpara>The <literal><phrase role="varname">enter</phrase></literal> event points to the function to perform when the mouse enters the panel.</simpara>
              </listitem>
              <listitem>
                <simpara>The <literal><phrase role="varname">leave</phrase></literal> event points to the function to perform when the mouse leaves the panel.</simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-accordionItem-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AccordionItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIAccordionItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.AccordionItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.AccordionItemRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Panels-collapsiblePanel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component is a collapsible panel that shows or hides content when the header bar is activated. It is a simplified version of <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component.</simpara>
        <figure id="figu-Component_Reference-collapsiblePanel-collapsiblePanel">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-collapsiblePanel-collapsiblePanel.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-collapsiblePanel-collapsiblePanel</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-collapsiblePanel-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage requires the header content is specified either by the <literal><phrase role="varname">header</phrase></literal> attribute, or by the <literal><phrase role="varname">headerExpanded</phrase></literal> / <literal><phrase role="varname">headerCollapsed</phrase></literal> facets. Additionally the panel requires content to display when it is expanded. Content is added as child elements like a standard panel.</simpara>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-Expanding_and_collapsing_the_panel">
          <title>Expanding and collapsing the panel</title>
          <simpara>The switching mode for performing submissions is determined by the <literal><phrase role="varname">switchType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>This is the default setting. The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component performs a common submission, completely refreshing the page. Only one panel at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component performs an Ajax form submission, and only the content of the panel is refreshed. Only one panel at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component changes the state on the client side without any additional requests being sent.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-Appearance">
          <title>Appearance</title>
          <simpara>The appearance of the <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component can be customized using facets. The <literal>headerExpanded</literal> and <literal>headerCollapsed</literal> CSS fclasses are used to style the appearance of the panel when it is expanded and collapsed respectively.</simpara>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-collapsiblePanel_server-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> server-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component uses the following unique server-side events:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">PanelToggleEvent</phrase></literal> event occurs on the server side when the <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component is expanded or collapsed in either the <literal>ajax</literal> or <literal>server</literal> modes. It can be processed using the <literal><phrase role="varname">panelTogglerListener</phrase></literal> attribute.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchPanel()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch the state of the collapsible panel (expanded or collapsed).</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsiblePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICollapsiblePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsiblePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsiblePanelRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.CollapsiblePanelTagHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-collapsiblePanel-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="collapsiblePanel-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the collapsible panel itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of a collapsible panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">background-color</phrase></literal>, <literal><phrase role="property">border-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-hdr-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-cp-hdr-colps</literal>:: These classes define styles for the header when the item is either expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a collapsible panel group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-b</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the body of a collapsible panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the panel icon.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the expanded icon for a panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-ico-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-cp-ico-colps</literal>:: These classes define styles for the icon when the panel is either expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the panel label.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cp-lbl-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-cp-lbl-colps</literal>:: These classes define styles for the label when the panel is either expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Panels-panelToggleListener">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:panelToggleListener&gt;</phrase>
            </literal>
          </title>
          <simpara>Use the <literal><phrase role="sgmltag">&lt;r:panelToggleListener&gt;</phrase></literal> tag to register a <literal><phrase role="classname">PanelToggleListener</phrase></literal> class on a parent <literal><phrase role="sgmltag">&lt;r:collapsiblePanel&gt;</phrase></literal> component. The class provided as a listener must implement the <literal><phrase role="interfacename">org.richfaces.event.PanelToggleListener</phrase></literal> interface. The <literal><phrase role="methodname">processPanelToggle</phrase></literal> method accepts an <literal><phrase role="classname">org.richface.event.PanelToggleEvent</phrase></literal> event as a parameter.</simpara>
        </section>
      </section>
      <section id="sect-Component_Reference-Panels-popupPanel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component provides a pop-up panel or window that appears in front of the rest of the application. The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component functions either as a modal window which blocks interaction with the rest of the application while active, or as a non-modal window. It can be positioned on the screen, dragged to a new position by the user, and re-sized.</simpara>
        <section id="sect-Component_Reference-popupPanel-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> does not require any compulsory attributes, though certain use cases require different attributes.</simpara>
        </section>
        <section id="sect-Component_Reference-popupPanel-Showing_and_hiding_the_pop-up">
          <title>Showing and hiding the pop-up</title>
          <simpara>If <literal><phrase role="code">show="true"</phrase></literal> then the pop-up panel will display when the page is first loaded.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component can be shown and hidden manually using the <literal><phrase role="code">show()</phrase></literal> and <literal><phrase role="code">hide()</phrase></literal> methods from the JavaScript API. These can be implemented using two different approaches:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>Using the <literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> component. For details on the component, refer to <xref linkend="sect-Component_Reference-Functionality_extension-componentControl"/>.</simpara>
            </listitem>
            <listitem>
              <simpara>Using the <literal><phrase role="code">r:component</phrase></literal> function. For details on the function, refer to <xref linkend="sect-Component_Reference-Functions-component"/>.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>For explicit referencing when using the functions, the component can be given an <literal><phrase role="varname">id</phrase></literal> identifier.</simpara>
          <simpara><xref linkend="exam-Component_Reference-popupPanel-popupPanel_example"/> demonstrates basic use of both the <literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> component and the <literal><phrase role="code">r:component</phrase></literal> function to show and hide the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-popupPanel-popupPanel_example">
            <title><literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:commandButton value="Show the panel"&gt;
    &lt;r:componentControl target="popup" operation="show" /&gt;
&lt;/h:commandButton&gt;
...
&lt;r:popupPanel id="popup"&gt;
    &lt;p&gt;&lt;a href="#" onclick="#{r:component('popup')}.hide()"&gt;Hide the panel&lt;/a&gt;&lt;/p&gt;
&lt;/r:popupPanel&gt;</programlisting>
          </example>
          <important>
            <title>Placement</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component is usually rendered in front of any other objects on the page. This is achieved by attaching the component to the <literal><phrase role="sgmltag">&lt;body&gt;</phrase></literal> element of the page, and setting a very high <emphasis>"z-index"</emphasis> (the stack order of the object). This approach is taken because relatively-positioned elements could still overlap the pop-up panel if they exist at higher levels of the <acronym>DOM</acronym> hierarchy, even if their z-index is less than the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component.</simpara>
            <simpara>If the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> is to participate in submitting child components/behaviors, then a form element must be nested within the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal>. Alternatively, if no overlapping elements exist, the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component can be reattached to its original <acronym>DOM</acronym> element by setting <literal><phrase role="varname">domElementAttachment</phrase></literal> to either <literal>parent</literal> or <literal>form</literal>.</simpara>
          </important>
        </section>
        <section id="sect-Component_Reference-popupPanel-Modal_and_non-modal_panels">
          <title>Modal and non-modal panels</title>
          <simpara>By default, the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> appears as a modal window that blocks interaction with the other objects on the page. To implement a non-modal window instead, set <literal><phrase role="code">modal="false"</phrase></literal>. This will allow interaction with other objects outside the pop-up panel.</simpara>
        </section>
        <section id="sect-Component_Reference-popupPanel-Size_and_positioning">
          <title>Size and positioning</title>
          <simpara>The pop-up panel can be both re-sized and re-positioned by the user. The minimum possible size for the panel can be set with the <literal><phrase role="varname">minWith</phrase></literal> and <literal><phrase role="varname">minHeight</phrase></literal> attributes. These abilities can be deactivated by setting <literal><phrase role="code">resizable</phrase></literal> or <literal><phrase role="code">movable</phrase></literal> to <literal>false</literal> as necessary.</simpara>
          <simpara>The pop-up panel can be automatically sized when it is shown if the <literal><phrase role="varname">autosized</phrase></literal> attribute is set to <literal>true</literal>.</simpara>
          <note>
            <title>Embedded objects in the panel</title>
            <simpara>Embedded objects inserted into the <acronym>HTML</acronym> with the <literal><phrase role="sgmltag">&lt;embed&gt;</phrase></literal> tag could be rendered in front of a <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component in some browsers. The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component can be forcibly rendered in front of these objects by setting <literal><phrase role="code">overlapEmbedObjects="true"</phrase></literal>.</simpara>
            <simpara>However, due to the additional script processing required when using the <literal><phrase role="varname">overlapEmbedObjects</phrase></literal> attribute, applications can suffer from decreased performance. As such, <literal><phrase role="varname">overlapEmbedObjects</phrase></literal> should only be set to <literal>true</literal> when <literal><phrase role="sgmltag">&lt;embed&gt;</phrase></literal> or <literal><phrase role="sgmltag">&lt;object&gt;</phrase></literal> tags are being used in the parent view. Do not set it to <literal>true</literal> for applications that do not require it.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-popupPanel-Header_and_controls">
          <title>Header and controls</title>
          <simpara>A panel header and associated controls can be added to the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component through the use of facets. The <literal>header</literal> facet displays a title for the panel, and the <literal>controls</literal> facet can be customized to allow window controls such as a button for closing the pop-up. <xref linkend="exam-Component_Reference-popupPanel-Header_and_controls"/> demonstrates the use of the facets.</simpara>
          <example id="exam-Component_Reference-popupPanel-Header_and_controls">
            <title>Header and controls</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:commandLink value="Show pop-up"&gt;
    &lt;r:componentControl target="popup" operation="show" /&gt;
&lt;/h:commandLink&gt;
...
&lt;r:popupPanel id="popup" modal="false" autosized="true" resizeable="false"&gt;
    &lt;f:facet name="header"&gt;
        &lt;h:outputText value="The title of the panel" /&gt;
    &lt;/f:facet&gt;
    &lt;f:facet name="controls"&gt;
        &lt;h:graphicImage value="/pages/close.png" style="cursor:pointer" onclick="#{r:component('popup')}.hide()" /&gt;
    &lt;/f:facet&gt;
    &lt;p&gt;
        This is the content of the panel.
    &lt;/p&gt;
&lt;/r:popupPanel&gt;
</programlisting>
            <blockquote>
              <figure>
                <title>Header and controls</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-popupPanel-Header_and_controls.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-popupPanel-Header_and_controls</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-popupPanel-Contents_of_the_pop-up">
          <title>Contents of the pop-up</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component can contain any other component just like a normal panel.</simpara>
          <simpara>Contents of the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component which are positioned relatively may be trimmed if they extend beyond the borders of the pop-up panel. For certain in-line controls this behavior may be preferable, but for other dynamic controls it could be undesirable. If the <literal><phrase role="varname">trimOverlayedElements</phrase></literal> attribute is set to <literal>false</literal> then child components will not be trimmed if they extend beyond the borders of the pop-up panel. For example, if using a calendar, select, or other pop-up component, set <literal><phrase role="code">trimOverlayedElements="false"</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-popupPanel-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getTop()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the top co-ordinate for the position of the pop-up panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getLeft()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the left co-ordinate for the position of the pop-up panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">moveTo(top,left)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Move the pop-up panel to the co-ordinates specified with the <literal><phrase role="parameter">top</phrase></literal> and <literal><phrase role="parameter">left</phrase></literal> parameters.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">resize(width,height)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Resize the pop-up panel to the size specified with the <literal><phrase role="parameter">width</phrase></literal> and <literal><phrase role="parameter">height</phrase></literal> parameters.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">show()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the pop-up panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hide()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the pop-up panel.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-popupPanel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PopupPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPopupPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.PopupPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PopupPanelRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-popupPanel-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="popupPanel-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the pop-up panel button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-shade</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the shading that covers the page when presenting a modal pop-up panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container for the pop-up panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the pop-up panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-hdr-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerWeightFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the pop-up panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-cnt-scrlr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the scroll bars of the pop-up panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-hndlr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for borders of the pop-up panel. The border handler is used to re-size the panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pp-hndlr-t</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-pp-hndlr-b</literal>:: <literal>.rf-pp-hndlr-l</literal>:: <literal>.rf-pp-hndlr-r</literal>:: <literal>.rf-pp-hndlr-tl</literal>:: <literal>.rf-pp-hndlr-tr</literal>:: <literal>.rf-pp-hndlr-bl</literal>:: <literal>.rf-pp-hndlr-br</literal>:: These classes define styles for the top, bottom, left, right, top-left, top-right, bottom-left, and bottom-right edges of the border handler.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Panels-tabPanel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component provides a set of tabbed panels for displaying one panel of content at a time. The tabs can be highly customized and themed. Each tab within a <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> container is a <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-Panels-tab"/> for further details on the <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component.</simpara>
        <figure id="figu-Component_Reference-tabPanel-tabPanel_component">
          <title>A <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component containing three <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> components</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-tabPanel-tabPanel_component.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-tabPanel-tabPanel_component</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <note>
          <title>Form elements required</title>
          <simpara>All <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> components should be wrapped in a form element when using either <literal>ajax</literal> or <literal>server</literal> mode, as usual for submitting components.</simpara>
        </note>
        <section id="sect-Component_Reference-tabPanel-Switching_tabs">
          <title>Switching panels</title>
          <simpara>The <literal><phrase role="code">activeItem</phrase></literal> attribute holds the active tab name. This name is a reference to the <literal><phrase role="varname">name</phrase></literal> identifier of the active child <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component.</simpara>
          <simpara>The switching mode for performing submissions is determined by the <literal><phrase role="code">switchType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>The default setting. Activation of a <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component to perform a common submission, completely refreshing the page. Only one tab at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>Activation of a <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component to perform an Ajax form submission, and the content of the tab panel is refreshed. Only one tab at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>Activation of a <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component causes the parent <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component to update on the client side. All the tabs are rendered to the client during the initial page render. JavaScript changes the styles such that one tab becomes hidden while the other is shown.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tabPanel-tabPanel_client-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> client-side events</title>
          <simpara>In addition to the standard Ajax events and HTML events, the <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component uses the client-side events common to all switchable panels:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">itemchange</phrase></literal> event points to the function to perform when the switchable item is changed.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">beforeitemchange</phrase></literal> event points to the function to perform when before the switchable item is changed.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tabPanel-tabPanel_server-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> server-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component uses the server-side events common to all switchable panels:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">ItemChangeEvent</phrase></literal> event occurs on the server side when an item is changed through Ajax using the <literal>server</literal> mode. It can be processed using the <literal><phrase role="varname">ItemChangeListener</phrase></literal> attribute. Refer to <xref linkend="sect-Component_Reference-Panels-itemChangeListener"/> for details on the <literal><phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase></literal> tag.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tabPanel-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions, which are common to all switchable panels:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItems()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the tabs contained in the tab panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItemsNames()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the names of the tabs contained in the tab panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchToItem(itemName)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to and display the item identified by the <literal><phrase role="parameter">itemName</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="function">firstItem()</phrase></literal>:: <literal><phrase role="function">prevItem()</phrase></literal>:: <literal><phrase role="function">nextItem()</phrase></literal>:: <literal><phrase role="function">lastItem()</phrase></literal></term>
              <listitem>
                <simpara>Get the name of the first item, the previous item, the next item, or the last item.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tabPanel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TabPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITabPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TabPanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TabPanelRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.TogglePanelTagHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tabPanel-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="tabPanel-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a tab header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a tab header when it is active.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-inact</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a tab header when it is inactive.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a tab header when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-tabline-vis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header tab line when it is visible.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-tabs</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tabs in the header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-spcr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tab header spacer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tab label.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tab when it is hidden.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-scrl-lft</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-tab-hdr-scrl-rgh</literal>:: These classes define styles for the left and right controls for the tab header scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-tablst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class define styles for the tab header list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-hdr-brd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class define styles for the tab header border.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="3">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tab-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class define styles for the content of the tab panel.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Panels-tab">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:tab&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component represents an individual tab inside a <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component, including the tab’s content. Clicking on the tab header will bring its corresponding content to the front of other tabs.</simpara>
          <section id="sect-Component_Reference-tab-Basic_usage">
            <title>Basic usage</title>
            <simpara>Basic usage of the <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component requires only the tab header and tab content. No additional attributes are required.</simpara>
            <simpara>The <literal><phrase role="varname">header</phrase></literal> attribute provides the text on the tab header. The content of the tab is then detailed inside the <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> tags.</simpara>
            <simpara>Alternatively, the <literal>header</literal> facet could be used in place of the <literal><phrase role="varname">header</phrase></literal> attribute. This would allow custom components to be applied to the tab header. The component also supports three facets to customize the appearance depending on the current state of the tab:</simpara>
            <variablelist>
              <varlistentry>
                <term><literal>headerActive</literal>  facet</term>
                <listitem>
                  <simpara>This facet is used when the tab is the currently active tab.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>headerInactive</literal>  facet</term>
                <listitem>
                  <simpara>This facet is used when the tab is not currently active.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><literal>headerDisabled</literal>  facet</term>
                <listitem>
                  <simpara>This facet is used when the tab is disabled.
The <literal>header</literal> facet is used in place of any state-based facet that has not been defined.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section id="sect-Component_Reference-tab-Switching_tabs">
            <title>Switching tabs</title>
            <simpara>The switching mode for performing submissions can be inherited from the <literal><phrase role="varname">switchType</phrase></literal> attribute of the parent <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component, or set individually for each <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-Panels-tabPanel"/> for details on the <literal><phrase role="varname">switchType</phrase></literal> attribute.</simpara>
            <simpara>An individual tab can be disabled by setting <literal><phrase role="code">disabled="true"</phrase></literal>. Disabled tabs cannot be activated or switched to.</simpara>
          </section>
          <section id="sect-Component_Reference-tab-tab_client-side_events">
            <title><literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> client-side events</title>
            <simpara>In addition to the standard HTML events, the <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component uses the client-side events common to all switchable panel items:</simpara>
            <itemizedlist>
              <listitem>
                <simpara>The <literal><phrase role="varname">enter</phrase></literal> event points to the function to perform when the mouse enters the tab.</simpara>
              </listitem>
              <listitem>
                <simpara>The <literal><phrase role="varname">leave</phrase></literal> attribute points to the function to perform when the mouse leaves the tab.</simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-tab-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tab</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITab</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tab</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TabRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-tab-Style_classes_and_skin_parameters">
            <title>Style classes and skin parameters</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:tab&gt;</phrase></literal> component uses the same styles as those applied to the parent <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-tabPanel-Style_classes_and_skin_parameters"/> for details.</simpara>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Panels-togglePanel">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component is used as a base for the other switchable components, the <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component and the <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> component. It provides an abstract switchable component without any associated markup. As such, the <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component could be customized to provide a switchable component when neither an accordion component or a tab panel component is appropriate.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component acts as a wrapper for multiple <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> components. Each child component is displayed after being activated with the <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> behavior.</simpara>
        <simpara>Refer to <xref linkend="sect-Component_Reference-Panels-toggleControl"/> and <xref linkend="sect-Component_Reference-Panels-togglePanel"/> for details on how to use the components together.</simpara>
        <section id="sect-Component_Reference-togglePanel-Basic_usage">
          <title>Basic usage</title>
          <simpara>The initial state of the component can be configured using the <literal><phrase role="varname">activeItem</phrase></literal> attribute, which points to a child component to display. Alternatively, if no <literal><phrase role="varname">activeItem</phrase></literal> attribute is defined, the initial state will be blank until the user activates a panel component with a connected <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> behavior.</simpara>
          <simpara>The child components are shown in the order in which they are defined in the view, as shown in <xref linkend="exam-Component_Reference-togglePanel-Basic_usage"/>.</simpara>
          <note>
            <title>Form elements required</title>
            <simpara>All <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> components should be wrapped in a form element when using either <literal>ajax</literal> or <literal>server</literal> mode, as usual for submitting components.</simpara>
          </note>
          <example id="exam-Component_Reference-togglePanel-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:togglePanel id="layout" activeItem="item1"&gt;
   &lt;r:togglePanelItem id="item1"&gt;
      &lt;!--content--&gt;
   &lt;/r:togglePanelItem&gt;
   &lt;r:togglePanelItem id="item2"&gt;
      &lt;!--content--&gt;
   &lt;r:togglePanelItem&gt;
&lt;/r:togglePanel&gt;
&lt;h:commandButton&gt;
   &lt;r:toggleControl targetPanel="layout"/&gt; &lt;!--cycles through the states--&gt;
&lt;/h:commandButton&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-tab-Repeating_panels">
          <title>Dynamic panel item generation</title>
          <simpara>All the switchable components ( <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> component and the <literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal>) can leverage the <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> tag to dynamically create child components. This can be useful when the definition of the panel items is determined at run-time from a backing bean list.</simpara>
        </section>
        <section id="sect-Component_Reference-togglePanel-Toggling_between_panels">
          <title>Toggling between components</title>
          <simpara>The switching mode for performing submissions is determined by the <literal><phrase role="code">switchType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>The default setting. Activation of a child component causes the parent <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component to perform a common submission, completely refreshing the page. Only one child at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>Activation of a child component causes the parent <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component to perform an Ajax form submission, and the content of the panel is refreshed. Only one child at a time is rendered to the client side.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>Activation of a child component causes the parent <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component to update on the client side. All the items are rendered to the client side during the initial page render. JavaScript changes the styles such that one child component becomes hidden while the other is shown.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-togglePanel-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions, which are common to all switchable panels:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItems()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the items contained in the toggle panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getItemsNames()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return an array of the names of the items contained in the toggle panel.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchToItem(itemName)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to and display the item identified by the <literal><phrase role="parameter">itemName</phrase></literal> string passed as a parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="function">firstItem()</phrase></literal>:: <literal><phrase role="function">prevItem()</phrase></literal>:: <literal><phrase role="function">nextItem()</phrase></literal>:: <literal><phrase role="function">lastItem()</phrase></literal></term>
              <listitem>
                <simpara>Get the name of the first item, the previous item, the next item, or the last item.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-togglePanel-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITogglePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanel</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanelRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.TogglePanelTagHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-Panels-itemChangeListener">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase>
            </literal>
          </title>
          <simpara>Use the <literal><phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase></literal> tag to register an <literal><phrase role="classname">ItemChangeListener</phrase></literal> class on a parent panel component. The class provided as a listener must implement the <literal><phrase role="interfacename">org.richfaces.event.ItemChangeListener</phrase></literal> interface. The <literal><phrase role="methodname">processItemChange</phrase></literal> method accepts an <literal><phrase role="classname">org.richface.event.ItemChangeEvent</phrase></literal> event as a parameter.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase></literal> tag can be used with any of the switchable panel components:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> (refer to <xref linkend="sect-Component_Reference-Panels-togglePanel"/>)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="sgmltag">&lt;r:accordion&gt;</phrase></literal> (refer to <xref linkend="sect-Component_Reference-Panels-accordion"/>)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="sgmltag">&lt;r:tabPanel&gt;</phrase></literal> (refer to <xref linkend="sect-Component_Reference-Panels-tabPanel"/>)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> (refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-panelMenu"/>)</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-Panels-toggleControl">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> behavior can be attached to any interface component, whether inside or outside the controlled panel itself. It works with a <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component to switch between different <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> components. Refer to <xref linkend="sect-Component_Reference-Panels-togglePanel"/> and <xref linkend="sect-Component_Reference-Panels-togglePanelItem"/> for details on how to use the components together.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> implements the JSF <literal><phrase role="classname">BehaviorHolder</phrase></literal> component, which provides events to attached components and behaviors.</simpara>
          <section id="sect-Component_Reference-toggleControl-Basic_usage">
            <title>Basic usage</title>
            <simpara>If the <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> component is positioned inside a <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component, no panel attachment attributes need to be defined, as the control is assumed to switch through the <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> components of its parent <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component.</simpara>
            <simpara>A <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> component can be located outside the <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component it needs to switch. Where this is the case, the <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> is identified using the <literal><phrase role="varname">targetPanel</phrase></literal> attribute.</simpara>
          </section>
          <section id="sect-Component_Reference-toggleControl-Specifying_the_next_state">
            <title>Specifying the next state</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> component can switch the attached <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component in multiple ways:</simpara>
            <itemizedlist>
              <listitem>
                <simpara>By default, the <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> component will cycle through <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> components in the order they are defined within the view.</simpara>
              </listitem>
            </itemizedlist>
            <example>
              <title>Default switching</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:togglePanel id="layout"&gt;
   &lt;r:togglePanelItem&gt;
      &lt;!--content--&gt;
   &lt;/r:togglePanelItem&gt;
   &lt;r:togglePanelItem&gt;
      &lt;!--content--&gt;
   &lt;r:togglePanelItem&gt;
&lt;/r:togglePanel&gt;
&lt;h:commandButton&gt;
   &lt;r:toggleControl targetPanel="layout"/&gt; &lt;!--cycles through the states--&gt;
&lt;/h:commandButton&gt;
</programlisting>
            </example>
            <itemizedlist>
              <listitem>
                <simpara>The next item to switch to can be explicitly defined by including a <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> component within a <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> component. Point the <literal><phrase role="varname">targetItem</phrase></literal> to the <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> to switch to when the state is next changed.</simpara>
              </listitem>
            </itemizedlist>
            <example>
              <title>Explicit switching</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:togglePanel activeItem="item1"&gt;
   &lt;r:togglePanelItem id="item1"&gt;
      &lt;!--content--&gt;
      &lt;h:commandButton&gt;
         &lt;r:toggleControl targetItem="item2"&gt; &lt;!--switches to item2 --&gt;
      &lt;/h:commandButton&gt;
   &lt;/r:togglePanelItem&gt;
   &lt;r:togglePanelItem id="item2"&gt;
      &lt;!--content--&gt;
      &lt;h:commandButton&gt;
         &lt;r:toggleControl targetItem="item1"&gt; &lt;!--switches to item1 --&gt;
      &lt;/h:commandButton&gt;
   &lt;r:togglePanelItem&gt;
&lt;/r:togglePanel&gt;
</programlisting>
            </example>
            <itemizedlist>
              <listitem>
                <simpara>Alternatively, use the <literal><phrase role="varname">targetItem</phrase></literal> attribute with keywords to switch items. The <literal>@first</literal>, <literal>@prev</literal>, <literal>@next</literal>, and <literal>@last</literal> keywords switch to the first item, the previous item, the next item, and the last item respectively.</simpara>
              </listitem>
            </itemizedlist>
            <example>
              <title>Keyword-based switching</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:togglePanel activeItem="item1"&gt;
   &lt;r:togglePanelItem id="item1"&gt;
      &lt;!--content--&gt;
      &lt;h:commandButton&gt;
         &lt;r:toggleControl targetItem="@next"&gt; &lt;!--switches to next item (item2)--&gt;
      &lt;/h:commandButton&gt;
   &lt;/r:togglePanelItem&gt;
   &lt;r:togglePanelItem id="item2"&gt;
      &lt;!--content--&gt;
      &lt;h:commandButton&gt;
         &lt;r:toggleControl targetItem="@prev"&gt; &lt;!--switches to previous item (item1)--&gt;
      &lt;/h:commandButton&gt;
   &lt;r:togglePanelItem&gt;
&lt;/r:togglePanel&gt;
</programlisting>
            </example>
          </section>
          <section id="sect-Component_Reference-toggleControl-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">client-behavior-renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.behavior.ToggleControl</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">behavior-id</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.behavior.ToggleControl</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.CustomBehaviorHandler</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">behavior-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.behavior.ToggleControl</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">client-behavior-renderer-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.renderkit.html.ToggleControlRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sect-Component_Reference-Panels-togglePanelItem">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> component is a switchable panel for use with the <literal><phrase role="sgmltag">&lt;r:togglePanel&gt;</phrase></literal> component. Use the <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> component to define the content for a panel using nested components. Switching between <literal><phrase role="sgmltag">&lt;r:togglePanelItem&gt;</phrase></literal> components is handled by the <literal><phrase role="sgmltag">&lt;r:toggleControl&gt;</phrase></literal> behavior.</simpara>
          <section id="sect-Component_Reference-togglePanelItem-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanelItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITogglePanelItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanelItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TogglePanelItemRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Tables_and_grids">
      <title>Tables and grids</title>
      <simpara>This chapter covers all components related to the display of tables and grids.</simpara>
      <section id="sect-Component_Reference-Actions-repeat">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:repeat&gt;</phrase>
          </literal>
        </title>
        <simpara>The non-visual <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> component is used to iterate through a data model. The component renders child content for every iteration according to the current object data.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> component extends the standard <literal><phrase role="classname">UIRepeat</phrase></literal> component to allow partial updates within iterations while sending Ajax requests. The component acts as a base for all the data iteration components detailed in this chapter.</simpara>
        <section id="sect-Component_Reference-repeat-Basic_usage">
          <title>Basic usage</title>
          <simpara>The contents of the collection are determined using Expression Language ( <acronym>EL</acronym>). The data model for the contents is specified with the <literal><phrase role="varname">value</phrase></literal> attribute. The <literal><phrase role="varname">var</phrase></literal> attribute names the object to use when iterating through the collection. This object is then referenced in the relevant child components. <xref linkend="exam-Component_Reference-repeat-repeat_example"/> shows how to use <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> to maintain a simple table.</simpara>
          <example id="exam-Component_Reference-repeat-repeat_example">
            <title><literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;table&gt;
    &lt;tbody&gt;
        &lt;r:repeat value="#{repeatBean.items}" var="item"&gt;
            &lt;tr&gt;
                &lt;td&gt;&lt;h:outputText value="#{item.code}" id="item1" /&gt;&lt;/td&gt;
                &lt;td&gt;&lt;h:outputText value="#{item.price}" id="item2" /&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/r:repeat&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
</programlisting>
            <simpara>Each row of a table contains two cells: one showing the item code, and the other showing the item price. The table is generated by iterating through items in the <literal><phrase role="code">repeatBeans.items</phrase></literal> data model.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-repeat-Limited_views_and_partial_updates">
          <title>Limited views and partial updates</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> component uses other attributes common to iteration components, such as the <literal><phrase role="varname">first</phrase></literal> attribute for specifying the first item for iteration, and the <literal><phrase role="varname">rows</phrase></literal> attribute for specifying the number of rows of items to display.</simpara>
          <simpara>Specific cells, rows, and columns can be updated without sending Ajax requests for the entire collection. Components that cause the change can specify which part of the table to update through the <literal><phrase role="varname">render</phrase></literal> attribute. The <literal><phrase role="varname">render</phrase></literal> attribute specifies which part of a table to update. The updated parts relate to where the action component is placed relative to the table:</simpara>
          <variablelist>
            <varlistentry>
              <term>Action components inside the table</term>
              <listitem>
                <simpara>Use <literal><phrase role="code">render=componentID</phrase></literal> where the component identified by <emphasis><literal>componentID</literal></emphasis> is in the same row as the action component. The action component updates the single specified component, as demonstrated in <xref linkend="exam-Component_Reference-repeat-Update_a_single_component"/>.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <example id="exam-Component_Reference-repeat-Update_a_single_component">
            <title>Update a single component</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:column&gt;
   &lt;r:commandButton render="col"&gt;&lt;/r:commandButton&gt;
&lt;/r:column&gt;
&lt;r:column&gt;
   &lt;h:outputText value="#{car.model}" id="col"/&gt;
&lt;/r:column&gt;
</programlisting>
          </example>
          <variablelist>
            <varlistentry>
              <term>Action components outside the table</term>
              <listitem>
                <simpara>Use <literal><phrase role="code">render=tableId:rowId:cellId</phrase></literal> to specify the cell to update. The action component updates the cell with an identifier of <emphasis><literal>cellId</literal></emphasis>, which is within the row with an identifier of <emphasis><literal>rowId</literal></emphasis>, which is within the table with an identifier of <emphasis><literal>tableId</literal></emphasis>.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>Instead of a specific identifier, any of the references could be variables, as demonstrated in <xref linkend="exam-Component_Reference-repeat-Use_variables_to_specify_references"/>.</simpara>
          <example id="exam-Component_Reference-repeat-Use_variables_to_specify_references">
            <title>Use variables to specify references</title>
            <programlisting language="XML" linenumbering="unnumbered">render=tableId:@rows(bean.rowToUpdate):cellId</programlisting>
            <simpara>The @rows function accepts a collection of row keys to be updated.  Similarly the table@body shorthand can be used to specify that the entire table body should be updated.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-repeat-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Repeat</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIRepeat</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Data</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.RepeatRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.html.RepeatHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-dataTable">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dataTable&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component is used to render a table, including the table’s caption. It works in conjunction with the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:columnGroup&gt;</phrase></literal> components to list the contents of a data model.</simpara>
        <note>
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component does not include extended table features, such as data scrolling (including lazy Ajax loading), row selection, and column reordering. These features are available as part of the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component; refer to <xref linkend="sect-Component_Reference-Tables_and_grids-extendedDataTable"/> for further details.</simpara>
        </note>
        <section id="sect-Component_Reference-dataTable-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="varname">value</phrase></literal> attribute points to the data model, and the <literal><phrase role="varname">var</phrase></literal> attribute specifies a variable to use when iterating through the data model.</simpara>
          <simpara>In addition, the table requires a set of <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> components to define the content of the table.</simpara>
        </section>
        <section id="sect-Component_Reference-dataTable-Customizing_the_table">
          <title>Customizing the table</title>
          <simpara>The <literal><phrase role="varname">first</phrase></literal> attribute specifies which item in the data model to start from, and the <literal><phrase role="varname">rows</phrase></literal> attribute specifies the number of items to list. The <literal>header</literal>, <literal>footer</literal>, and <literal>caption</literal> facets can be used to display text, and to customize the appearance of the table through skinning. demonstrates a simple table implementation.</simpara>
          <simpara>The <literal><phrase role="varname">keepSaved</phrase></literal> attribute defines whether this iteration component will reset saved children’s state before rendering. By default, the state is reset if there are no faces messages with severity error or higher.</simpara>
          <example id="exam-Component_Reference-dataTable-dataTable_example">
            <title><literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5"&gt;
    &lt;f:facet name="caption"&gt;
        &lt;h:outputText value="United States Capitals" /&gt;
    &lt;/f:facet&gt;
    &lt;f:facet name="header"&gt;
        &lt;h:outputText value="Capitals and States Table" /&gt;
    &lt;/f:facet&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State Flag&lt;/f:facet&gt;
            &lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
        &lt;f:facet name="footer"&gt;State Flag&lt;/f:facet&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State Name&lt;/f:facet&gt;
            &lt;h:outputText value="#{cap.state}"/&gt;
        &lt;f:facet name="footer"&gt;State Name&lt;/f:facet&gt;
    &lt;/r:column&gt;
    &lt;r:column &gt;
        &lt;f:facet name="header"&gt;State Capital&lt;/f:facet&gt;
            &lt;h:outputText value="#{cap.name}"/&gt;
        &lt;f:facet name="footer"&gt;State Capital&lt;/f:facet&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Time Zone&lt;/f:facet&gt;
            &lt;h:outputText value="#{cap.timeZone}"/&gt;
        &lt;f:facet name="footer"&gt;Time Zone&lt;/f:facet&gt;
    &lt;/r:column&gt;
    &lt;f:facet name="footer"&gt;
        &lt;h:outputText value="Capitals and States Table" /&gt;
    &lt;/f:facet&gt;
&lt;/r:dataTable&gt;

</programlisting>
            <blockquote>
              <figure>
                <title><literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-dataTable_example.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-dataTable_example</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
          <simpara>For details on filtering and sorting data tables, refer to <xref linkend="sect-Component_Reference-Tables_and_grids-Table_filtering"/> and <xref linkend="sect-Component_Reference-Tables_and_grids-Table_sorting"/>.</simpara>
        </section>
        <section id="sect-Component_Reference-dataTable-Partial_updates">
          <title>Partial updates</title>
          <simpara>As <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> the component is based on the <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> component, it can be partially updated with Ajax. Refer to <xref linkend="sect-Component_Reference-repeat-Limited_views_and_partial_updates"/> for details on partially updating the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component supports master-detail markup with collapsible sub-table sections. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-collapsibleSubTable"/> for full details on using the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component.</simpara>
          <simpara>Use the <literal><phrase role="varname">rows</phrase></literal> attribute to specify the number of rows to show at a time. The table is then presented in pages of rows. Pages can be navigated by using a control such as the <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-dataScroller"/> for full details on using the <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-dataTable-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">expandAllSubTables()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Expand any sub-tables contained in the data table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">collapseAllSubTables()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Collapse any sub-tables contained in the data table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchSubTable(subtableId)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch the expanded or collapsed state of any sub-tables contained in the data table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">filter(columnId, newFilterValue, \[isClearPreviousFilters\])</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Filter the table based on the column specified with the <literal><phrase role="parameter">columnId</phrase></literal> parameter. Use the <literal><phrase role="parameter">newFilterValue</phrase></literal> parameter as the filter value. The optional <literal><phrase role="parameter">isClearPreviousFilters</phrase></literal> parameter is a boolean value which, if set to <literal>true</literal>, will clear any previous filters applied to the table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">sort(columnId, \[direction\], \[isClearPreviousSorting\])</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Sort the table based on the column specified with the <literal><phrase role="parameter">columnId</phrase></literal> parameter. The option <literal><phrase role="parameter">direction</phrase></literal> parameter specifies whether to sort in ascending or descending order. The optional <literal><phrase role="parameter">isClearPreviousSorting</phrase></literal> parameter is a boolean value which, if set to <literal>true</literal>, will clear any previous sorting applied to the table.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-dataTable-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDataTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Data</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataTableRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.DataTableHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dataTable-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="dataTable-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-left-width</phrase></literal>, <literal><phrase role="property">border-top-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-left-color</phrase></literal>, <literal><phrase role="property">border-top-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-cap</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table caption.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-fst-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first row in a table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-nd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a node.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-hdr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-hdr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-shdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table sub-header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-shdr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first sub-header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-shdr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a sub-header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-ftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-ftr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-ftr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableFooterBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-sftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table sub-footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-sftr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first sub-footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dt-sftr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a sub-footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableFooterBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-column">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:column&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component facilitates columns in a table. It supports merging columns and rows, sorting, filtering, and customized skinning.</simpara>
        <section id="sect-Component_Reference-column-Basic_usage">
          <title>Basic usage</title>
          <simpara>In general usage, the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component is used in the same was as the JavaServer Faces ( <acronym>JSF</acronym>) <literal><phrase role="sgmltag">&lt;h:column&gt;</phrase></literal> component. It requires no extra attributes for basic usage, as shown in <xref linkend="exam-Component_Reference-column-Basic_column_example"/>.</simpara>
          <example id="exam-Component_Reference-column-Basic_column_example">
            <title>Basic column example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5"&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State Flag&lt;/f:facet&gt;
        &lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State Name&lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.state}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column &gt;
        &lt;f:facet name="header"&gt;State Capital&lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.name}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;Time Zone&lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.timeZone}"/&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <blockquote>
              <figure>
                <title>Basic column example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-column-Basic_column_example.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-column-Basic_column_example</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-column-Spanning_columns">
          <title>Spanning columns</title>
          <simpara>Columns can be merged by using the <literal><phrase role="varname">colspan</phrase></literal> attribute to specify how many normal columns to span. The <literal><phrase role="varname">colspan</phrase></literal> attribute is used in conjunction with the <literal><phrase role="varname">breakRowBefore</phrase></literal> attribute on the next column to determine how the merged columns are laid out. <xref linkend="exam-Component_Reference-column-Column_spanning_example"/>.</simpara>
          <example id="exam-Component_Reference-column-Column_spanning_example">
            <title>Column spanning example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5"&gt;
	&lt;r:column colspan="3"&gt;
        &lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column breakBefore="true"&gt;
        &lt;h:outputText value="#{cap.state}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column &gt;
        &lt;h:outputText value="#{cap.name}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;h:outputText value="#{cap.timeZone}"/&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <blockquote>
              <figure>
                <title>Column spanning example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-column-Column_spanning_example.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-column-Column_spanning_example</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-column-Spanning_rows">
          <title>Spanning rows</title>
          <simpara>Similarly, the <literal><phrase role="varname">rowspan</phrase></literal> attribute can be used to merge and span rows. Again the <literal><phrase role="varname">breakRowBefore</phrase></literal> attribute needs to be used on related <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> components to define the layout. <xref linkend="exam-Component_Reference-column-Row_spanning_example"/> and the resulting <xref linkend="figu-Component_Reference-Complex_headers_using_column_groups-Complex_headers_using_column_groups"/> show the first column of the table spanning three rows.</simpara>
          <example id="exam-Component_Reference-column-Row_spanning_example">
            <title>Row spanning example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5"&gt;
    &lt;r:column rowspan="3"&gt;
        &lt;f:facet name="header"&gt;State Flag&lt;/f:facet&gt;
        &lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;State Info&lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.state}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column breakBefore="true"&gt;
        &lt;h:outputText value="#{cap.name}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column breakBefore="true"&gt;
        &lt;h:outputText value="#{cap.timeZone}"/&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <blockquote>
              <figure>
                <title>Row spanning example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-column-Row_spanning_example.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-column-Row_spanning_example</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
          <simpara>For details on filtering and sorting columns, refer to <xref linkend="sect-Component_Reference-Tables_and_grids-Table_filtering"/> and <xref linkend="sect-Component_Reference-Tables_and_grids-Table_sorting"/>.</simpara>
        </section>
        <section id="sect-Component_Reference-column-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Column</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIColumn</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Column</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-columnGroup">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:columnGroup&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:columnGroup&gt;</phrase></literal> component combines multiple columns in a single row to organize complex parts of a table. The resulting effect is similar to using the <literal><phrase role="varname">breakRowBefore</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component, but is clearer and easier to follow in the source code.</simpara>
        <section id="sect-Component_Reference-columnGroup-Complex_headers">
          <title>Complex headers</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:columnGroup&gt;</phrase></literal> can also be used to create complex headers in a table. <xref linkend="exam-Component_Reference-columnGroup-Complex_headers_using_column_groups"/> and the resulting <xref linkend="figu-Component_Reference-Complex_headers_using_column_groups-Complex_headers_using_column_groups"/> demonstrate how complex headers can be achieved.</simpara>
          <example id="exam-Component_Reference-columnGroup-Complex_headers_using_column_groups">
            <title>Complex headers using column groups</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" rows="5" id="sublist"&gt;
    &lt;f:facet name="header"&gt;
        &lt;r:columnGroup&gt;
            &lt;r:column rowspan="2"&gt;
                &lt;h:outputText value="State Flag"/&gt;
            &lt;/r:column&gt;
            &lt;r:column colspan="3"&gt;
                &lt;h:outputText value="State Info"/&gt;
            &lt;/r:column&gt;
            &lt;r:column breakBefore="true"&gt;
                &lt;h:outputText value="State Name"/&gt;
            &lt;/r:column&gt;
            &lt;r:column&gt;
                &lt;h:outputText value="State Capital"/&gt;
            &lt;/r:column&gt;
            &lt;r:column&gt;
                &lt;h:outputText value="Time Zone"/&gt;
            &lt;/r:column&gt;
        &lt;/r:columnGroup&gt;
    &lt;/f:facet&gt;
    &lt;r:column&gt;
        &lt;h:graphicImage value="#{cap.stateFlag}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;h:outputText value="#{cap.state}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;h:outputText value="#{cap.name}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column&gt;
        &lt;h:outputText value="#{cap.timeZone}"/&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <blockquote>
              <figure>
                <title>Complex headers using column groups</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-columnGroup-Complex_headers_using_column_groups.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-columnGroup-Complex_headers_using_column_groups</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-columnGroup-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ColumnGroup</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIColumnGroup</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.ColumnGroup</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ColumnGroupRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-collapsibleSubTable">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component acts as a child element to a <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component iterates through the child collections in the currently iterated object to create master-detail tables.</simpara>
        <simpara>Additionally, the detail part of the table can be collapsed or expanded through different modes. The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component works with the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component, which expands and collapses the sub-tables.</simpara>
        <section id="sect-Component_Reference-collapsibleSubTable-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component requires the same basic attributes as the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component. The <literal><phrase role="varname">value</phrase></literal> attribute points to the collection, and the <literal><phrase role="varname">var</phrase></literal> attribute specifies a variable to use when iterating through the collection.</simpara>
          <simpara>In addition, the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component typically needs a corresponding <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component to allow expanding and collapsing. Declare the <literal><phrase role="varname">id</phrase></literal> identifier on the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> element so that the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component can reference it. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-collapsibleSubTableToggler"/> for details on the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-collapsibleSubTable-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{carsBean.inventoryVendorLists}" var="list"&gt;
   &lt;f:facet name="header"&gt;
      &lt;r:columnGroup&gt;
         &lt;r:column colspan="6"&gt;
            &lt;h:outputText value="Cars marketplace" /&gt;
         &lt;/r:column&gt;
         &lt;r:column breakRowBefore="true"&gt;
            &lt;h:outputText value="Model" /&gt;
         &lt;/r:column&gt;
         &lt;r:column&gt;
            &lt;h:outputText value="Price" /&gt;
         &lt;/r:column&gt;
         &lt;r:column&gt;
            &lt;h:outputText value="Mileage" /&gt;
         &lt;/r:column&gt;
         &lt;r:column&gt;
            &lt;h:outputText value="VIN Code" /&gt;
         &lt;/r:column&gt;
         &lt;r:column&gt;
            &lt;h:outputText value="Items stock" /&gt;
         &lt;/r:column&gt;
         &lt;r:column&gt;
            &lt;h:outputText value="Days Live" /&gt;
         &lt;/r:column&gt;
      &lt;/r:columnGroup&gt;
   &lt;/f:facet&gt;
   &lt;r:column colspan="6"&gt;
      &lt;r:collapsibleSubTableToggler for="sbtbl" /&gt;
      &lt;h:outputText value="#{list.vendor}" /&gt;
   &lt;/r:column&gt;
   &lt;r:collapsibleSubTable value="#{list.vendorItems}" var="item" id="sbtbl"
      expandMode="client"&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.model}" /&gt;
      &lt;/r:column&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.price}" /&gt;
      &lt;/r:column&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.mileage}" /&gt;
      &lt;/r:column&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.vin}" /&gt;
      &lt;/r:column&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.stock}" /&gt;
      &lt;/r:column&gt;
      &lt;r:column&gt;
         &lt;h:outputText value="#{item.daysLive}" /&gt;
      &lt;/r:column&gt;
      &lt;f:facet name="footer"&gt;
         &lt;h:outputText value="Total of #{list.vendor} Cars: #{list.count}" /&gt;
      &lt;/f:facet&gt;
   &lt;/r:collapsibleSubTable&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <simpara>The resulting tables contains multiple sub-tables, grouping the list of cars by vendor. Each sub-table can be expanded or collapsed using the toggle with the vendor’s name. The screenshot shows all sub-tables collapsed except for the sub-table for Ford cars.</simpara>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-collapsibleSubTable-Basic_usage.png"/>
                </imageobject>
                <textobject>
                  <phrase>A data table containing multiple collapsible sub-tables.</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
        </section>
        <section id="sect-Component_Reference-collapsibleSubTable-Expanding_and_collapsing_the_sub-table">
          <title>Expanding and collapsing the sub-table</title>
          <simpara>Use the boolean <literal><phrase role="varname">expanded</phrase></literal> attribute to control the current state of the sub-table.</simpara>
          <simpara>The switching mode for performing submissions is determined by the <literal><phrase role="code">expandMode</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>The default setting. Expansion of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component performs a common submission, completely re-rendering the page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>Expansion of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component performs an Ajax form submission, and the content of the data table is rendered.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>Expansion of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component updates the data table on the client side.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-collapsibleSubTable-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsibleSubTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICollapsibleSubTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Data</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsibleSubTableRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.CollapsibleSubTableHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-collapsibleSubTable-Style_classes">
          <title>Style classes</title>
          <table id="collapsibleSubTable-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-fst-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first row in a table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderWidth</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-hdr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-hdr-fst-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first row in the header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-hdr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableSubHeaderBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderWidth</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-shdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table sub-header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-shdr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first sub-header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-shdr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a sub-header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableSubHeaderBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderWidth</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-ftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-ftr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-ftr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableSubFooterBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderWidth</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-sftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table sub-footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-sftr-fst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first sub-footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-cst-sftr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a sub-footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableSubFooterBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderWidth</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Tables_and_grids-collapsibleSubTableToggler">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component provides a toggle control for the user to expand and collapse sub-tables.</simpara>
          <section id="sect-Component_Reference-collapsibleSubTableToggler-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component requires the <literal><phrase role="varname">for</phrase></literal> attribute. The <literal><phrase role="varname">for</phrase></literal> attribute references the <literal><phrase role="varname">id</phrase></literal> identifier of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component to control.</simpara>
            <simpara>Refer to <xref linkend="exam-Component_Reference-collapsibleSubTable-Basic_usage"/> for an example using the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component. In the example, the toggle control is placed in a column that spans the width of the table. Output text next to the toggle control displays the car vendor’s name for that sub-table.</simpara>
          </section>
          <section id="sect-Component_Reference-collapsibleSubTableToggler-Appearance">
            <title>Appearance</title>
            <simpara>The icons and labels of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTableToggler&gt;</phrase></literal> component can be customized. Use the <literal><phrase role="varname">collapsedIcon</phrase></literal> and <literal><phrase role="varname">expandedIcon</phrase></literal> attributes to specify icons for the toggler when it is collapsed and expanded respectively. Use the <literal><phrase role="varname">collapsedLabel</phrase></literal> and <literal><phrase role="varname">expandedLabel</phrase></literal> attributes to specify labels for the toggler when it is collapsed and expanded respectively.</simpara>
          </section>
          <section id="sect-Component_Reference-collapsibleSubTableToggler-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsibleSubTableToggler</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UICollapsibleSubTableToggler</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsibleSubTableToggler</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.CollapsibleSubTableTogglerRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-collapsibleSubTableToggler-Style_classes_and_skin_parameters">
            <title>Style classes and skin parameters</title>
            <variablelist id="collapsibleSubTableToggler-Style_classes">
              <title>Style classes (selectors)</title>
              <varlistentry>
                <term>
                  <literal>.rf-csttg</literal>
                </term>
                <listitem>
                  <simpara>This class defines styles for a toggle control.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>.rf-csttg-exp</literal>
                </term>
                <listitem>
                  <simpara>This class defines styles for a toggle control which expands the sub-table.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>.rf-csttg-colps</literal>
                </term>
                <listitem>
                  <simpara>This class defines styles for a toggle control which collapses the sub-table.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-extendedDataTable">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component builds on the functionality of the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component, adding features such as scrolling for the table body (both horizontal and vertical), Ajax loading for vertical scrolling, frozen columns, row selection, and rearranging of columns. It also supports all the basic table features such as sorting, filtering, and paging using the <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component includes the following main attributes not included in the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component:</simpara>
        <itemizedlist>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">clientRows</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">frozenColumns</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">height</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">onselectionchange</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">selectedClass</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">selection</phrase>
              </literal>
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <literal>
                <phrase role="varname">selectionMode</phrase>
              </literal>
            </simpara>
          </listitem>
        </itemizedlist>
        <note>
          <title>Complex sub-tables</title>
          <simpara>Due to the complex mark-up involved in the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component, it does not support the use of the <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:collapsibleSubTable&gt;</phrase></literal> component is only available with the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component.</simpara>
          <simpara>Similarly, complex row and column spanning using the <literal><phrase role="varname">breakRowBefore</phrase></literal>, <literal><phrase role="varname">colSpan</phrase></literal>, and <literal><phrase role="varname">rowSpan</phrase></literal> attributes is also not available with the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component.</simpara>
        </note>
        <section id="sect-Component_Reference-extendedDataTable-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic use of the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component requires the <literal><phrase role="varname">value</phrase></literal> and <literal><phrase role="varname">var</phrase></literal> attributes, the same as with the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component. In addition, a set of columns must be included to define the table content. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-dataTable"/> for details.</simpara>
        </section>
        <section id="sect-Component_Reference-extendedDataTable-Table_appearance">
          <title>Table appearance</title>
          <simpara>As with the <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component, the look of the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can be customized using the <literal>header</literal> and <literal>footer</literal> facets.</simpara>
        </section>
        <section id="sect-Component_Reference-extendedDataTable-Extended_features">
          <title>Extended features</title>
          <example id="exam-Component_Reference-extendedDataTable-extendedDataTable_example">
            <title><literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> example</title>
            <simpara>This example <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component demonstrates horizontal and vertical scrolling and frozen columns. Each feature is detailed in this section.</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:extendedDataTable value="#{carsBean.allInventoryItems}"
                        var="car" id="table" frozenColumns="2"
                        style="height:300px; width:500px;" selectionMode="none"&gt;
   &lt;f:facet name="header"&gt;
      &lt;h:outputText value="Cars marketplace" /&gt;
   &lt;/f:facet&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="vendor" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.vendor}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="Model" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.model}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="Price" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.price}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="Mileage" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.mileage}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="VIN Code" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.vin}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="Items stock" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.stock}" /&gt;
   &lt;/r:column&gt;
   &lt;r:column&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="Days Live" /&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{car.daysLive}" /&gt;
   &lt;/r:column&gt;
&lt;/r:extendedDataTable&gt;
</programlisting>
            <simpara>image::images/figu-Component_Reference-Tables_and_grids-extendedDataTable_example.png[A data table made using the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component. It features horizontal and vertical scrolling and frozen columns.]</simpara>
          </example>
          <section id="sect-Component_Reference-extendedDataTable-Scrolling">
            <title>Scrolling</title>
            <simpara>The example table shown in <xref linkend="exam-Component_Reference-extendedDataTable-extendedDataTable_example"/> features both horizontal and vertical scrolling. Scrolling occurs automatically when the contents of the table exceed the dimensions specified with the <literal><phrase role="varname">height</phrase></literal> and <literal><phrase role="varname">width</phrase></literal> attributes. Headers and footers remain in place and visible when the table is scrolled.</simpara>
            <simpara>Large tables can use Ajax "lazy" loading to cache data on the client during scrolling. Use the <literal><phrase role="varname">clientRows</phrase></literal> attribute to specify the number of rows to load. The specified number of rows are loaded on the initial rendering and with every vertical scroll. If the <literal><phrase role="varname">clientRows</phrase></literal> attribute is not specified, all the rows are loaded on the client without the use of Ajax.</simpara>
            <simpara>In addition to Ajax scrolling, the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can also be used with the <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component in the same way as a regular <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component. If both the <literal><phrase role="varname">clientRows</phrase></literal> and <literal><phrase role="varname">rows</phrase></literal> attributes are included, Ajax loading occurs as defined by the <literal><phrase role="varname">clientRows</phrase></literal> attribute, but the loading is limited to the current table page as determined by the <literal><phrase role="varname">rows</phrase></literal> attribute. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-dataScroller"/> for full details on using the <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component.</simpara>
          </section>
          <section id="sect-Component_Reference-extendedDataTable-Frozen_columns">
            <title>Frozen columns</title>
            <simpara>The example table shown in <xref linkend="exam-Component_Reference-extendedDataTable-extendedDataTable_example"/> has the first two columns frozen so that they remain visible if the user scrolls horizontally through the table. Note that the horizontal scrollbar does not encompass these frozen columns. To freeze columns, use the <literal><phrase role="varname">frozenColumns</phrase></literal> attribute to specify the number of columns on the left-hand side of the table to freeze.</simpara>
          </section>
          <section id="sect-Component_Reference-extendedDataTable-Row_selection">
            <title>Row selection</title>
            <simpara>Row selection is determined by the <literal><phrase role="varname">selectionMode</phrase></literal> attribute. Setting the attribute to <literal>none</literal> allows for no row selection capability. The example table shown in <xref linkend="exam-Component_Reference-extendedDataTable-extendedDataTable_example"/> does not allow row selection.</simpara>
            <simpara>Setting the <literal><phrase role="varname">selectionMode</phrase></literal> attribute to <literal>single</literal> allows the user to select a single row at a time using the mouse. With the <literal><phrase role="varname">selectionMode</phrase></literal> attribute set to <literal>multiple</literal>, the user can select multiple rows. Holding down the <keycap>Ctrl</keycap> key while clicking selects additional rows with each click. Holding down the <keycap>Shift</keycap> key while clicking selects all the rows in a range.</simpara>
            <simpara>The <literal><phrase role="varname">selection</phrase></literal> attribute points to a collection of objects. It holds the <literal><phrase role="varname">rowKey</phrase></literal> identifiers to track which rows are selected. <xref linkend="exam-Component_Reference-extendedDataTable-Selecting_multiple_rows"/> shows how to implement multiple row selection in the same table from <xref linkend="exam-Component_Reference-extendedDataTable-extendedDataTable_example"/>.</simpara>
            <example id="exam-Component_Reference-extendedDataTable-Selecting_multiple_rows">
              <title>Selecting multiple rows</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:extendedDataTable value="#{extTableSelectionBean.inventoryItems}"
                        var="car" selection="#{extTableSelectionBean.selection}"
                        id="table" frozenColumns="2"
                        style="height:300px; width:500px;" selectionMode="multiple"&gt;
   ...
</programlisting>
              <simpara>The accompanying <literal><phrase role="classname">ExtSelectionBean</phrase></literal> bean handles which rows are selected. The rows are identified by their <literal><phrase role="varname">rowKey</phrase></literal> identifiers.</simpara>
              <programlisting language="Java" linenumbering="unnumbered">package org.richfaces.demo.tables;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.SessionScoped;
import javax.faces.event.AjaxBehaviorEvent;

import org.richfaces.component.UIExtendedDataTable;
import org.richfaces.demo.tables.model.cars.InventoryItem;

@ManagedBean
@SessionScoped

public class ExtTableSelectionBean implements Serializable{

   private Collection&lt;Object&gt; selection;
   @ManagedProperty(value = "#{carsBean.allInventoryItems}")
   private List&lt;InventoryItem&gt; inventoryItems;
   private List&lt;InventoryItem&gt; selectionItems = new ArrayList&lt;InventoryItem&gt;();

   public void selectionListener(AjaxBehaviorEvent event){
      UIExtendedDataTable dataTable = (UIExtendedDataTable)event.getComponent();
      Object originalKey = dataTable.getRowKey();
      selectionItems.clear();
      for (Object selectionKey: selection) {
         dataTable.setRowKey(selectionKey);
         if (dataTable.isRowAvailable()){
            selectionItems.add((InventoryItem)dataTable.getRowData());
         }
      }
      dataTable.setRowKey(originalKey);
   }

   public Collection&lt;Object&gt; getSelection() {
      return selection;
   }

   public void setSelection(Collection&lt;Object&gt; selection) {
      this.selection = selection;
   }

   public List&lt;InventoryItem&gt; getInventoryItems() {
      return inventoryItems;
   }

   public void setInventoryItems(List&lt;InventoryItem&gt; inventoryItems) {
      this.inventoryItems = inventoryItems;
   }

   public List&lt;InventoryItem&gt; getSelectionItems() {
      return selectionItems;
   }

   public void setSelectionItems(List&lt;InventoryItem&gt; selectionItems) {
      this.selectionItems = selectionItems;
   }
}
</programlisting>
              <figure>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-Tables_and_grids-Selecting_multiple_rows.png" contentwidth="second" contentdepth="third"/>
                  </imageobject>
                  <textobject>
                    <phrase>The example table with the first</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </example>
          </section>
          <section id="sect-Component_Reference-extendedDataTable-Rearranging_columns">
            <title>Rearranging columns</title>
            <simpara>Columns in a <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can be rearranged by the user by dragging each column to a different position. A graphical representation of the column is displayed during dragging. <xref linkend="figu-Component_Reference-extendedDataTable-Dragging_columns"/> illustrates the <guilabel>Price</guilabel> column being dragged to a new location. The small blue arrow indicates where the column will be moved to if it is dropped in the current position. <xref linkend="figu-Component_Reference-extendedDataTable-Rearranged_columns"/> shows the result of dragging the <guilabel>Price</guilabel> column.</simpara>
            <figure id="figu-Component_Reference-extendedDataTable-Dragging_columns">
              <title>Dragging columns</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-Tables_and_grids-Dragging_columns.png" contentwidth="444"/>
                </imageobject>
                <textobject>
                  <phrase>figu-Component_Reference-Tables_and_grids-Dragging_columns</phrase>
                </textobject>
              </mediaobject>
            </figure>
            <figure id="figu-Component_Reference-extendedDataTable-Rearranged_columns">
              <title>Rearranged columns</title>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-Tables_and_grids-Rearranged_columns.png" contentwidth="444"/>
                </imageobject>
                <textobject>
                  <phrase>figu-Component_Reference-Tables_and_grids-Rearranged_columns</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </section>
          <section id="sect-Component_Reference-extendedDataTable-State_saving">
            <title>State saving</title>
            <simpara>The <literal><phrase role="varname">tableState</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can be used to bind state of the table (column width, sequence, sorting, filtering) to a backing-bean string property, for a later use. This state can be for example saved to a database, and it is different from standard JSF state saving mechanism.</simpara>
          </section>
          <section id="sect-Component_Reference-extendedDataTable-Filtering_and_sorting">
            <title>Filtering and sorting</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can include filtering and sorting in the same way as a regular <literal><phrase role="sgmltag">&lt;r:dataTable&gt;</phrase></literal> component. For full details on filtering tables, refer to <xref linkend="sect-Component_Reference-Tables_and_grids-Table_filtering"/>. For full details on sorting tables, refer to <xref linkend="sect-Component_Reference-Tables_and_grids-Table_sorting"/>.</simpara>
          </section>
        </section>
        <section id="sect-Component_Reference-extendedDataTable-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:extendedDataTable&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">sort()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Sort the data table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">filter()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Filter the data table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">clearSorting()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Clear any sorting that is currently applied to the table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">clearFiltering()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Clear any filtering that is currently applied to the table.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">selectRow(index)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Select the row specified by the <literal><phrase role="parameter">index</phrase></literal> parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">selectRows(\[startIndex, stopIndex\])</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Select all the rows in the table. Optionally, select only those rows between the indexes specified with the <literal><phrase role="parameter">startIndex</phrase></literal> and <literal><phrase role="parameter">stopIndex</phrase></literal> parameters.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">deselectRow</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Deselect the row that is currently selected.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setActiveRow(index)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the active row to that specified by the <literal><phrase role="parameter">index</phrase></literal> parameter.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-extendedDataTable-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ExtendedDataTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIExtendedDataTable</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Data</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ExtendedDataTableRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.ExtendedDataTableHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-extendedDataTable-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="extendedDataTable-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-cnt</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table content.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-c-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the contents of a cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-tbl-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableHeaderTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableHeaderTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-hdr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-hdr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-hdr-c-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the contents of a header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableHeaderTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-tbl-ftr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableFooterBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-ftr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableFooterBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-ftr-cnt</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of a footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-ftr-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a table footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-ftr-c-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the contents of a footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-ftr-emp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an empty footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-ftr-fzn</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a frozen footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-b</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the body of the table.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-r-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the selected row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-right</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-r-act</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the active row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-rsz</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the table resizer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-rsz-cntr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the resize container.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-rsz-mkr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the resize marker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-left</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-edt-rord</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the re-order functionality.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableBorderWidth</phrase></literal>, <literal><phrase role="parameter">tableBorderColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="parameter">tableHeaderBackgroundColor</phrase></literal> / <literal><phrase role="parameter">tableBackgroundColor</phrase></literal></simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-rord-mkr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the re-order marker.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rich-edt-spcr</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines a spacer for Internet Explorer 7compatibility.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-dataGrid">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component is used to arrange data objects in a grid. Values in the grid can be updated dynamically from the data model, and Ajax updates can be limited to specific rows. The component supports <literal>header</literal>, <literal>footer</literal>, and <literal>caption</literal> facets.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component is similar in function to the JavaServer Faces <literal><phrase role="sgmltag">&lt;h:panelGrid&gt;</phrase></literal> component. However, the <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component additionally allows iteration through the data model rather than just aligning child components in a grid layout.</simpara>
        <figure id="figu-Component_Reference-dataGrid-The_dataGrid_component">
          <title>The <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-dataGrid-The_dataGrid_component.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-dataGrid-The_dataGrid_component</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-dataGrid-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component requires the <literal><phrase role="varname">value</phrase></literal> attribute, which points to the data model, and the <literal><phrase role="varname">var</phrase></literal> attribute, which holds the current variable for the collection of data.</simpara>
        </section>
        <section id="sect-Component_Reference-dataGrid-Customizing_the_grid">
          <title>Customizing the grid</title>
          <simpara>The number of columns for the grid is specifed with the <literal><phrase role="varname">columns</phrase></literal> attribute, and the number of elements to layout among the columns is determined with the <literal><phrase role="varname">elements</phrase></literal> attribute. The <literal><phrase role="varname">first</phrase></literal> attribute references the zero-based element in the data model from which the grid starts.</simpara>
          <example id="exam-Component_Reference-dataGrid-dataGrid_example">
            <title><literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel style="width:150px;height:200px;"&gt;
  &lt;h:form&gt;
    &lt;r:dataGrid value="#{dataTableScrollerBean.allCars}" var="car" columns="2" elements="4" first="1"&gt;
        &lt;f:facet name="header"&gt;
          &lt;h:outputText value="Car Store"&gt;&lt;/h:outputText&gt;
      &lt;/f:facet&gt;
      &lt;r:panel&gt;
          &lt;f:facet name="header"&gt;
            &lt;h:outputText value="#{car.make} #{car.model}"&gt;&lt;/h:outputText&gt;
          &lt;/f:facet&gt;
          &lt;h:panelGrid columns="2"&gt;
            &lt;h:outputText value="Price:" styleClass="label"&gt;&lt;/h:outputText&gt;
            &lt;h:outputText value="#{car.price}"/&gt;
            &lt;h:outputText value="Mileage:" styleClass="label"&gt;&lt;/h:outputText&gt;
            &lt;h:outputText value="#{car.mileage}"/&gt;
          &lt;/h:panelGrid&gt;
      &lt;/r:panel&gt;
      &lt;f:facet name="footer"&gt;
          &lt;r:dataScroller&gt;&lt;/r:dataScroller&gt;
      &lt;/f:facet&gt;
    &lt;/r:dataGrid&gt;
  &lt;/h:form&gt;
&lt;/r:panel&gt;
</programlisting>
            <blockquote>
              <figure>
                <title><literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-dataGrid-dataGrid_example.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-dataGrid-dataGrid_example</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-dataGrid-Patial_updates">
          <title>Partial updates</title>
          <simpara>As <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> the component is based on the <literal><phrase role="sgmltag">&lt;r:repeat&gt;</phrase></literal> component, it can be partially updated with Ajax. Refer to <xref linkend="sect-Component_Reference-repeat-Limited_views_and_partial_updates"/> for details on partially updating the <literal><phrase role="sgmltag">&lt;r:dataGrid&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-dataGrid-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataGrid</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDataGrid</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Data</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataGridRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.DataGridHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dataGrid-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="dataGrid-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the grid.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-left-width</phrase></literal>, <literal><phrase role="property">border-top-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-left-color</phrase></literal>, <literal><phrase role="property">border-top-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-cap</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the grid caption.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a grid row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a grid cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-nd-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a node cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-th</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the grid header section.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-width</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-bottom-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-h</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a grid header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-h-f</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first header.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-h-r</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a header row.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-h-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a header cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableHeaderTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-f</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a grid footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-f-f</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the first footer.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dg-f-c</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a footer cell.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableFooterBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderWidth</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-width</phrase></literal>, <literal><phrase role="property">border-right-width</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tableBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara><literal><phrase role="property">border-bottom-color</phrase></literal>, <literal><phrase role="property">border-right-color</phrase></literal></simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-list">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:list&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:list&gt;</phrase></literal> component renders a list of items. The list can be an numerically ordered list, an un-ordered bullet-point list, or a data definition list. The component uses a data model for managing the list items, which can be updated dynamically.</simpara>
        <section id="sect-Component_Reference-list-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="varname">var</phrase></literal> attribute names a variable for iterating through the items in the data model. The items to iterate through are determined with the <literal><phrase role="varname">value</phrase></literal> attribute by using EL (Expression Language).</simpara>
        </section>
        <section id="sect-Component_Reference-list-Type_of_list">
          <title>Type of list</title>
          <simpara>By default, the list is displayed as an un-ordered bullet-point list. The <literal><phrase role="varname">type</phrase></literal> attribute is used to specify different list types:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>unordered</literal>
              </term>
              <listitem>
                <simpara>The default presentation. The list is presented as a series of bullet-points, similar to the <literal><phrase role="sgmltag">&lt;ul&gt;</phrase></literal> HTML element.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <figure id="figu-Component_Reference-list-Unordered_list">
            <title>Unordered list</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-list-Unordered_list.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-list-Unordered_list</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <variablelist>
            <varlistentry>
              <term>
                <literal>ordered</literal>
              </term>
              <listitem>
                <simpara>The list is presented as a numbered series of items, similar to the <literal><phrase role="sgmltag">&lt;ol&gt;</phrase></literal> HTML element.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <figure id="figu-Component_Reference-list-Ordered_list">
            <title>Ordered list</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-list-Ordered_list.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-list-Ordered_list</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <variablelist>
            <varlistentry>
              <term>
                <literal>definitions</literal>
              </term>
              <listitem>
                <simpara>The list is presented as a series of data definitions. Part of the data model, specified as the term, is listed prominently. The other associated data is listed after each term.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <figure id="figu-Component_Reference-list-Data_definition_list">
            <title>Data definition list</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-list-Data_definition_list.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-list-Data_definition_list</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <simpara>The term is marked using the <literal>term</literal> facet. The facet is required for all definition lists. Use of the facet is shown in <xref linkend="exam-Component_Reference-list-Data_definition_list"/>.</simpara>
          <example id="exam-Component_Reference-list-Data_definition_list">
            <title>Data definition list</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
    &lt;r:list var="car" value="#{dataTableScrollerBean.allCars}" type="definitions" rows="5" title="Cars"&gt;
        &lt;f:facet name="term"&gt;
            &lt;h:outputText value="#{car.make} #{car.model}"&gt;&lt;/h:outputText&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="Price:" styleClass="label"&gt;&lt;/h:outputText&gt;
        &lt;h:outputText value="#{car.price}" /&gt;&lt;br/&gt;
        &lt;h:outputText value="Mileage:" styleClass="label"&gt;&lt;/h:outputText&gt;
        &lt;h:outputText value="#{car.mileage}" /&gt;&lt;br/&gt;
    &lt;/r:list&gt;
&lt;/h:form&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-list-Bullet_and_numeration_appearance">
          <title>Bullet and numeration appearance</title>
          <simpara>The appearance of bullet points for unordered lists or numeration for ordered lists can be customized through CSS, using the <literal><phrase role="property">list-style-type</phrase></literal> property.</simpara>
        </section>
        <section id="sect-Component_Reference-list-Customizing_the_list">
          <title>Customizing the list</title>
          <simpara>The <literal><phrase role="varname">first</phrase></literal> attribute specifies which item in the data model to start from, and the <literal><phrase role="varname">rows</phrase></literal> attribute specifies the number of items to list. The <literal><phrase role="varname">title</phrase></literal> attribute is used for a floating tool-tip. <xref linkend="exam-Component_Reference-list-list_example"/> shows a simple example using the <literal><phrase role="sgmltag">&lt;r:list&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-list-list_example">
            <title><literal><phrase role="sgmltag">&lt;r:list&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
    &lt;r:list var="car" value="#{dataTableScrollerBean.allCars}" rows="5" type="unordered" title="Car Store"&gt;
        &lt;h:outputText value="#{car.make} #{car.model}"/&gt;&lt;br/&gt;
        &lt;h:outputText value="Price:" styleClass="label"&gt;&lt;/h:outputText&gt;
        &lt;h:outputText value="#{car.price} "/&gt;&lt;br/&gt;
        &lt;h:outputText value="Mileage:" styleClass="label"&gt;&lt;/h:outputText&gt;
        &lt;h:outputText value="#{car.mileage} "/&gt;&lt;br/&gt;
    &lt;/r:list&gt;
&lt;/h:form&gt;
</programlisting>
            <blockquote>
              <figure>
                <title><literal><phrase role="sgmltag">&lt;r:list&gt;</phrase></literal> example</title>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-list-Unordered_list.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>figu-Component_Reference-list-Unordered_list</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </blockquote>
          </example>
        </section>
        <section id="sect-Component_Reference-list-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.List</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIList</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.List</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ListRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.ListHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-list-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="list-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ulst-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item in an unordered list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-olst-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item in an unordered list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dlst-trm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the term of an item in a definition list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-dlst-dfn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the definition of an item in a definition list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-dataScroller">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component is used for navigating through multiple pages of tables or grids.</simpara>
        <figure id="figu-Component_Reference-dataScroller-The_dataScroller_component">
          <title>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-dataScroller-The_dataScroller_component.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-dataScroller-The_dataScroller_component</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-dataScroller-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> must be placed in a facet of the table or grid it needs to control. Alternatively, use the <literal><phrase role="varname">for</phrase></literal> attribute to bind the parent table or grid to the scroller.</simpara>
          <simpara>The bound table or grid should also have the <literal><phrase role="varname">rows</phrase></literal> attribute defined to limit the number of rows per page.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component must be re-rendered whenever a filter changes on the bound table, so that the scroller matches the current model for the table.</simpara>
          <example id="exam-Component_Reference-dataScroller-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable id="table" value="#{capitalsBean.capitals}" var="cap" rows="5"&gt;
   &lt;!-- table content --&gt;
   ...
&lt;/r:dataTable&gt;
&lt;r:dataScroller for="table" maxPages="5"&gt;
   &lt;f:facet name="first"&gt;
      &lt;h:outputText value="First" /&gt;
   &lt;/f:facet&gt;
   &lt;f:facet name="last"&gt;
      &lt;h:outputText value="Last" /&gt;
   &lt;/f:facet&gt;
&lt;/r:dataScroller&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-dataScroller-Appearance_and_interactivity">
          <title>Appearance and interactivity</title>
          <simpara>The <literal><phrase role="varname">page</phrase></literal> attribute is a value-binding attribute used to define and save the current page number.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component provides a range of controllers for scrolling through tables and grids:</simpara>
          <variablelist>
            <varlistentry>
              <term>Controls for scrolling by a specific amount</term>
              <listitem>
                <simpara>The component includes controls for switching to the first page, the last page, the next page, and the previous page, as well as controls for fast-forwarding or rewinding by a set amount. Use the <literal><phrase role="varname">fastStep</phrase></literal> attribute to set the number of pages to skip when fast-forwarding or rewinding.
The appearance of these controls can be customized using the following facets: <literal>first</literal>, <literal>last</literal>, <literal>next</literal>, <literal>previous</literal>, <literal>fastForward</literal>, and <literal>fastRewind</literal>. Additionally, there are facets for the controls' disabled states: <literal>first_disabled</literal>, <literal>last_disabled</literal>, <literal>next_disabled</literal>, <literal>previous_disabled</literal>, <literal>fastforward_disabled</literal>, and <literal>rewind_disabled</literal>.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>Page controls</term>
              <listitem>
                <simpara>The component also features a series of numbered controls to jump to a specific page. Use the <literal><phrase role="varname">maxPages</phrase></literal> attribute to limit the number of page controls that appear. The current page control is highlighted.
To add optional separators between controls, define the separators with the <literal>controlsSeparator</literal> facet.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-dataScroller-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dataScroller&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">switchToPage(pageIndex)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to the page specified with the <literal><phrase role="parameter">pageIndex</phrase></literal> parameter.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">next()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to the next page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">previous()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to the previous page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">first()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to the first page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">last()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Switch to the last page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">fastForward()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Step forward through the pages by the <literal><phrase role="varname">fastStep</phrase></literal> amount.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">fastRewind()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Step backward through the pages by the <literal><phrase role="varname">fastStep</phrase></literal> amount.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-dataScroller-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataScroller</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDataScroller</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataScroller</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DataScrollerRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.DataScrollerHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dataScroller-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="dataScroller-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the data scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for buttons in the data scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-first</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>first</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-fastrwd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>fast rewind</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-prev</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>previous</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-next</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>next</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-fastfwd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>fast forward</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-btn-last</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the <guilabel>last</guilabel> button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="4">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-nmb-btn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for page number buttons in the data scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-press</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a data scroller when a control is pressed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-act</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an active data scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ds-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a disabled data scroller.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tableBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-Table_filtering">
        <title>Table filtering</title>
        <simpara>Tables entries can be filtered by the user through either the basic built-in filter inputs, or by defining external filter controls. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-column"/> for details on using the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component in tables.</simpara>
        <section id="sect-Component_Reference-Table_filtering-filtering">
          <title>Filter Definition</title>
          <simpara>To define a filter for a column use either the <literal><phrase role="varname">filter</phrase></literal> or <literal><phrase role="varname">filterExpression</phrase></literal> attributes, then use the <literal><phrase role="varname">filterValue</phrase></literal> attribute to point to an object which holds the current filtering value for the column. The attribute can be used to store filtering conditions in a session.</simpara>
          <simpara>Use the <literal><phrase role="varname">filterExpression</phrase></literal> attribute to define an expression that can be evaluated as a boolean value. The expression checks if each table entry satisfies the filtering condition when the table is rendered. For example, the expression might be a JSTL (JavaServer Pages Standard Tag Library) function such as <literal><phrase role="function">contains</phrase></literal> or <literal><phrase role="function">equals</phrase></literal>.</simpara>
          <simpara>Use the <literal><phrase role="varname">filter</phrase></literal> attribute to define a filter interface. The attribute must use EL (Expression Language) to point to an object which implements the <literal><phrase role="interfacename">org.richfaces.model.Filter&lt;T&gt;</phrase></literal> interface. The object must provide a single <literal><phrase role="methodname">accept(T t)</phrase></literal> method. The method takes each iteration object as a parameter and returns a boolean value, which determines whether the object satisfies the filter. By defining a custom filter, you can implement complex business logic to filter a table.</simpara>
        </section>
        <section id="sect-Component_Reference-Table_filtering-builtin_filtering">
          <title>Built-in filter controls</title>
          <note>
            <title>Availability of built-in filter controls</title>
            <simpara>The built-in filter controls are only available with the <literal><phrase role="varname">extendedDataTable</phrase></literal> component. Support for built-in filter controls in the <literal><phrase role="varname">dataTable</phrase></literal> component will be added in a subsequent release.</simpara>
          </note>
          <simpara>The built-in filter controls of the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component allow the user to enter text to use as the filtering value. The value of the built-in filter control is bound to the <literal><phrase role="varname">filterValue</phrase></literal> attribute, which can either be an initial filtering value on the page, or a value binding on the server. The filterValue is then applied to the filter defined either by the <literal><phrase role="varname">filterExpression</phrase></literal> or <literal><phrase role="varname">filter</phrase></literal> column attributes.</simpara>
          <simpara>The filterValue is of type <literal><phrase role="varname">String</phrase></literal>. Conversion is either done implicitly via EL in the <literal><phrase role="varname">filterExpression</phrase></literal>, or explicitly within the <literal><phrase role="varname">filter</phrase></literal> function. The filter is processed and the table is rendered when the <literal>onblur</literal> event occurs for the column.</simpara>
          <example id="exam-Component_Reference-Table_filtering-Basic_filtering">
            <title>Basic filtering</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:extendedDataTable value="#{carsBean.allInventoryItems}" var="car" filterVar="filterValue"&gt;
    &lt;f:facet name="header"&gt;
        &lt;h:outputText value="Cars marketplace"/&gt;
    &lt;/f:facet&gt;
    &lt;r:column filterExpression="#{empty filterValue or fn:startsWith(car.model, filterValue)}"
                 filterValue="#{carsFilteringBean.modelFilter}"&gt;
        &lt;f:facet name="header"&gt;Model&lt;/f:facet&gt;
        &lt;h:outputText value="#{car.model}"/&gt;
    &lt;/r:column&gt;
    &lt;r:column filterExpression="#{empty filterValue or car.price ge filterValue}"
                 filterValue="#{carsFilteringBean.priceFilter}"
                 filterConverterMessage="Error converting the 'Price' filter value"&gt;
        &lt;f:facet name="header"&gt;Price&lt;/f:facet&gt;
        &lt;h:outputText value="#{car.price}"/&gt;
    &lt;/r:column&gt;
&lt;/r:extendedDataTable&gt;</programlisting>
            <simpara>The example uses the basic filtering method on both columns in the table.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-Table_filtering-External_filtering">
          <title>External filter controls</title>
          <simpara>If you require more advanced filter controls use the external filtering properties of the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component. With custom filter controls you can tailor the filter control, allowing for advanced use cases like select menus, checkboxes, etc. To use a custom filter control with the <literal><phrase role="varname">extendedDataTable</phrase></literal> component, one must first disable the built-in filter control.</simpara>
          <note>
            <title>Disabling built-in filter controls</title>
            <simpara>The built-in filter controls can be disabled on a column-by-column basis by setting the column attribute <literal><phrase role="varname">filterType="custom"</phrase></literal>. Alternatively one can disable filter controls for the whole application via the following context-param in the web.xml:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;context-param&gt;
    &lt;param-name&gt;org.richfaces.builtin.filter.enabled&lt;/param-name&gt;
    &lt;param-value&gt;false&lt;/param-value&gt;
&lt;/context-param&gt;</programlisting>
          </note>
          <example id="exam-Component_Reference-Table_filtering-External_filtering">
            <title>Filtering example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" id="table"&gt;

    &lt;f:facet name="header"&gt;
        &lt;r:columnGroup&gt;
            &lt;r:column&gt;
                &lt;h:outputText value="State Name" /&gt;
            &lt;/r:column&gt;
            &lt;r:column&gt;
                &lt;h:outputText value="State Time Zone" /&gt;
            &lt;/r:column&gt;
        &lt;/r:columnGroup&gt;
    &lt;/f:facet&gt;
    &lt;r:column filter="#{filteringBean.stateFilter}"&gt;
        &lt;f:facet name="header"&gt;
            &lt;h:inputText value="#{filteringBean.stateFilterValue}" id="input"&gt;
                &lt;r:ajax event="keyup" render="table@body"&gt;
                    &lt;r:attachQueue  requestDelay="700"
                        ignoreDupResponses="true" /&gt;
                &lt;/r:ajax&gt;
            &lt;/h:inputText&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.state}" /&gt;
    &lt;/r:column&gt;
    &lt;r:column filterExpression="#{fn:containsIgnoreCase(cap.timeZone, filteringBean.zoneFilterValue)}"&gt;
        &lt;f:facet name="header"&gt;
            &lt;h:selectOneMenu value="#{filteringBean.zoneFilterValue}"&gt;
                &lt;f:selectItems value="#{filteringBean.zoneList}" /&gt;
                &lt;r:ajax event="change" render="table@body" /&gt;
            &lt;/h:selectOneMenu&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.timeZone}" /&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;</programlisting>
            <simpara>The example uses a filter expression on the first column and a filter method on the second column.</simpara>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/figu-Component_Reference-Table_filtering-External_filtering.png" contentwidth="further filtered to those states in the GMT-5 time zone."/>
                </imageobject>
                <textobject>
                  <phrase>A table of state capitals filtered by states beginning with the letter " a"</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
        </section>
      </section>
      <section id="sect-Component_Reference-Tables_and_grids-Table_sorting">
        <title>Table sorting</title>
        <simpara>Tables entries can be sorted by defining external sorting algorithms. Refer to <xref linkend="sect-Component_Reference-Tables_and_grids-column"/> for details on using the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component in tables.</simpara>
        <note>
          <title>Sorting non-English tables</title>
          <simpara>To sort a table whose contents are not in English, add the <literal>org.richfaces.datatableUsesViewLocale</literal> context parameter to the project’s <literal><phrase role="filename">web.xml</phrase></literal> settings file. Set the value of the context parameter to <literal>true</literal>.</simpara>
        </note>
        <section id="sect-Component_Reference-Tables_and_grids-Comparator">
          <title>Comparator Definition</title>
          <simpara>Use the <literal><phrase role="varname">comparator</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> to specify the comparator to use when sorting. If no <literal><phrase role="varname">comparator</phrase></literal> is specified, the sorting algorithm will invoke the entries <literal><phrase role="varname">compareTo</phrase></literal> method of the <literal><phrase role="varname">sortBy</phrase></literal> values if they implement the <literal><phrase role="varname">java.lang.Comparable</phrase></literal> interface. As a final fall back, the algorithm implements a null sort, sorting elements based on whether or not they are null.</simpara>
        </section>
        <section id="sect-Component_Reference-Tables_and_grids-Basic_sorting">
          <title>Built-in sort controls</title>
          <note>
            <title>Availability of built-in sort controls</title>
            <simpara>The built-in sort controls are only available with the <literal><phrase role="varname">extendedDataTable</phrase></literal> component. Support for built-in sort controls in the <literal><phrase role="varname">dataTable</phrase></literal> component will be added in a subsequent release.</simpara>
          </note>
          <simpara>The built-in sorting controls of the <literal><phrase role="sgmltag">&lt;r:column&gt;</phrase></literal> component allow a user to click the sort icons of a column to sort it in ascending or descending order.</simpara>
          <simpara>Set the <literal><phrase role="varname">sortBy</phrase></literal> attribute to indicate which value to use when sorting the column. Expressions in the <literal><phrase role="varname">sortBy</phrase></literal> attribute must refer to the variable declared in the table’s <literal><phrase role="varname">var</phrase></literal> attribute, which is used to fill the contents of the table.</simpara>
          <example id="exam-Component_Reference-Table_sorting-Built_in_sorting">
            <title>Basic sorting</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" width="300px"&gt;
   &lt;r:column sortBy="#{cap.state}"&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="State Name"/&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{cap.state}"/&gt;
   &lt;/r:column&gt;
   &lt;r:column sortBy="#{cap.name}"&gt;
      &lt;f:facet name="header"&gt;
         &lt;h:outputText value="State Capital"/&gt;
      &lt;/f:facet&gt;
      &lt;h:outputText value="#{cap.name}"/&gt;
   &lt;/r:column&gt;
&lt;/r:dataTable&gt;
</programlisting>
            <simpara>The example uses the basic sorting method on both columns in the table.</simpara>
          </example>
          <simpara>Use the <literal><phrase role="varname">sortOrder</phrase></literal> attribute to set how the table’s contents are sorted when it is first loaded. By default, the value of the <literal><phrase role="varname">sortOrder</phrase></literal> attribute is <literal>unsorted</literal>, so that table entries appear in the order the are contained in the data model. Use <literal><phrase role="code">sortOrder="ascending"</phrase></literal> to sort the entries in ascending alphabetical or numerical order. Use <literal><phrase role="code">sortOrder="descending"</phrase></literal> to sort the entries in descending alphabetical or numerical order. The <literal><phrase role="varname">sortOrder</phrase></literal> attribute can also be used to externally set the sort order of a table when using the external sorting method; refer to <xref linkend="sect-Component_Reference-Table_sorting-External_sorting"/> for details.</simpara>
        </section>
        <section id="sect-Component_Reference-Table_sorting-External_sorting">
          <title>External sort controls</title>
          <simpara>Set the <literal><phrase role="varname">sortBy</phrase></literal> attribute to indicate which iteration object property to use when sorting the column. If using custom-defined rules for sorting, use the <literal><phrase role="varname">comparator</phrase></literal> attribute instead. Set the <literal><phrase role="varname">comparator</phrase></literal> attribute to point to your comparator method, which will be used when sorting the data model.</simpara>
          <note>
            <title>Disabling built-in sort controls</title>
            <simpara>The built-in sort controls can be disabled on a column-by-column basis by setting the column attribute <literal><phrase role="varname">sortType="custom"</phrase></literal>. Alternatively one can disable sort controls for the whole application via the following context-param in the web.xml:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;context-param&gt;
    &lt;param-name&gt;org.richfaces.builtin.sort.enabled&lt;/param-name&gt;
    &lt;param-value&gt;false&lt;/param-value&gt;
&lt;/context-param&gt;</programlisting>
          </note>
          <simpara>Bind the <literal><phrase role="varname">sortOrder</phrase></literal> attribute to bean properties to manage the sorting order. The bean must handle all the sorting algorithms. <xref linkend="exam-Component_Reference-Table_sorting-Sorting"/> demonstrates table sorting using an external control.</simpara>
          <example id="exam-Component_Reference-Table_sorting-Sorting">
            <title>Sorting</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable value="#{capitalsBean.capitals}" var="cap" id="table"&gt;
    &lt;r:column&gt;
        &lt;f:facet name="header"&gt;
            State Flag
        &lt;/f:facet&gt;
        &lt;h:graphicImage value="#{cap.stateFlag}" alt="flag" /&gt;
    &lt;/r:column&gt;
    &lt;r:column sortBy="#{cap.name}" id="name" sortOrder="#{capitalsSortingBean.capitalsOrder}"&gt;
        &lt;f:facet name="header"&gt;
            &lt;r:commandLink value="Sort by Capital Name" render="table" action="#{capitalsSortingBean.sortByCapitals}" /&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.name}" /&gt;
    &lt;/r:column&gt;
    &lt;r:column sortBy="#{cap.state}" id="state" sortOrder="#{capitalsSortingBean.statesOrder}"&gt;
        &lt;f:facet name="header"&gt;
            &lt;r:commandLink value="Sort by State Name" render="table" action="#{capitalsSortingBean.sortByStates}" /&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.state}" /&gt;
    &lt;/r:column&gt;
    &lt;r:column sortBy="#{cap.timeZone}" id="timeZone" comparator="#{capitalsSortingBean.timeZoneComparator}"
        sortOrder="#{capitalsSortingBean.timeZonesOrder}"&gt;
        &lt;f:facet name="header"&gt;
            &lt;r:commandLink value="Sort by Time Zone" render="table" action="#{capitalsSortingBean.sortByTimeZones}" /&gt;
        &lt;/f:facet&gt;
        &lt;h:outputText value="#{cap.timeZone}" /&gt;
    &lt;/r:column&gt;
&lt;/r:dataTable&gt;</programlisting>
            <simpara>The example uses an external control to manage the table’s sorting.</simpara>
          </example>
          <simpara>When multiple columns are capable of being sorted at the same time, set the priority by which the columns are sorted with the <literal><phrase role="varname">sortPriorities</phrase></literal> attribute. The attribute must contain a list of column identifiers in the order of the sorting sequence.</simpara>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Trees">
      <title>Trees</title>
      <simpara>Read this chapter for details on components that use tree structures.</simpara>
      <section id="sect-Component_Reference-Trees-tree">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:tree&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component provides a hierarchical tree control. Each <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component typically consists of <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> child components. The appearance and behavior of the tree and its nodes can be fully customized.</simpara>
        <section id="sect-Component_Reference-tree-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component requires the <literal><phrase role="varname">value</phrase></literal> attribute to point to the data model for populating the tree. The data model must be either an <literal><phrase role="interfacename">org.richfaces.model.TreeNode</phrase></literal> interface, an <literal><phrase role="varname">org.richfaces.model.TreeDataModel</phrase></literal> interface, or a <literal><phrase role="interfacename">javax.swing.tree.TreeNode</phrase></literal> interface. The <literal><phrase role="varname">var</phrase></literal> attribute declares the variable used for iterating through the data model, so that child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components can reference each iteration.</simpara>
          <simpara>Ideally, the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component needs one or more <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components to work with the data model. However if no <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components are provided the tree creates default nodes instead.</simpara>
          <example id="exam-Component_Reference-tree-Basic_usage">
            <title>Basic usage</title>
            <simpara>This example demonstrates basic usage of the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component using an <literal><phrase role="interfacename">org.richfaces.model.TreeNode</phrase></literal> data model.</simpara>
            <simpara>First extend the <literal><phrase role="classname">org.richfaces.model.TreeNodeImpl</phrase></literal> and add the data fields you require, with appropriate accessor methods, as in:</simpara>
            <programlisting language="Java" linenumbering="unnumbered">import org.richfaces.model.TreeNodeImpl;

public class DataHolderTreeNodeImpl extends TreeNodeImpl {
    private Object data;

    public DataHolderTreeNodeImpl() {
        super();
    }

    public DataHolderTreeNodeImpl(boolean leaf, Object data) {
        super(leaf);
        this.data = data;
    }

    public Object getData() {
        return data;
    }

    @Override
    public String toString() {
        return super.toString() + " &gt;&gt; " + data;
    }
}</programlisting>
            <simpara>Then, the data model is constructed as follows:</simpara>
            <programlisting language="Java" linenumbering="unnumbered">private DataHolderTreeNodeImpl stationRoot;
private DataHolderTreeNodeImpl rootNodes;

public DataHolderTreeNodeImpl getRootNodes() {
    if (rootNodes == null) {
        String[] kickRadioFeed = {"Hall &amp; Oates - Kiss On My List",
                "David Bowie - Let's Dance",
                "Lyn Collins - Think (About It)",
                "Kim Carnes - Bette Davis Eyes",
                "KC &amp; the Sunshine Band - Give It Up"};
        stationRoot = new DataHolderTreeNodeImpl(false, "KickRadio");
        for (int i = 0; i&lt;kickRadioFeed.length; i++) {
            DataHolderTreeNodeImpl child = new DataHolderTreeNodeImpl(true, kickRadioFeed[i]);
            stationRoot.addChild(i, child);
        }
        rootNodes = new DataHolderTreeNodeImpl();
        rootNodes.addChild(0, stationRoot);
    }
    return rootNodes;
}
</programlisting>
            <simpara>The tree then accesses the nodes of the model using the <literal>station</literal> variable:</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:tree value="#{stations.stationNodes}" var="station"&gt;
   &lt;r:treeNode&gt;
      &lt;h:outputText value="#{station}" /&gt;
   &lt;/r:treeNode&gt;
&lt;/r:tree&gt;
</programlisting>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/exam-Component_Reference-tree-Basic_usage.png"/>
                </imageobject>
                <textobject>
                  <phrase>exam-Component_Reference-tree-Basic_usage</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
        </section>
        <section id="sect-Component_Reference-tree-Appearance">
          <title>Appearance</title>
          <simpara>Different nodes in the tree can have different appearances, such as node icons, depending on the type of data the node contains. Use the <literal><phrase role="varname">nodeType</phrase></literal> attribute to differentiate the types of nodes; the node is then rendered according to the <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component with the corresponding <literal><phrase role="varname">type</phrase></literal> attribute. <xref linkend="exam-Component_Reference-tree-nodeType_attribute"/> shows a <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component with three different child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components defined to represent three different node appearances. Refer to <xref linkend="sect-Component_Reference-treeNode-Appearance"/> for details on customizing the appearance of <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components.</simpara>
          <example id="exam-Component_Reference-tree-nodeType_attribute">
            <title><literal><phrase role="varname">nodeType</phrase></literal> attribute</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:tree style="width:300px" value="#{library.data}" var="item" nodeType="#{item.type}"&gt;
   &lt;r:treeNode type="artist" iconExpanded="/images/tree/singer.png" iconCollapsed="/images/tree/singer.png"&gt;
      &lt;h:outputText value="#{item.name}" /&gt;
   &lt;/r:treeNode&gt;
   &lt;r:treeNode type="album" iconExpanded="/images/tree/disc.png" iconCollapsed="/images/tree/disc.png"&gt;
      &lt;h:outputText value="#{item.album}" /&gt;
   &lt;/r:treeNode&gt;
   &lt;r:treeNode type="song" iconLeaf="/images/tree/song.png"&gt;
      &lt;h:outputText value="#{item.title}" /&gt;
   &lt;/r:treeNode&gt;
&lt;/r:tree&gt;
</programlisting>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/exam-Component_Reference-tree-nodeType_attribute.png"/>
                </imageobject>
                <textobject>
                  <phrase>exam-Component_Reference-tree-nodeType_attribute</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
          <simpara>If the <literal><phrase role="varname">nodeType</phrase></literal> attribute returns null, the node is rendered as a " <emphasis>typeless</emphasis>" (or default) node. The <emphasis>typeless</emphasis> node is the first child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component with a valid <literal><phrase role="varname">rendered</phrase></literal> attribute, but without a defined <literal><phrase role="varname">type</phrase></literal> attribute.</simpara>
          <simpara>If the <literal><phrase role="varname">nodeType</phrase></literal> attribute is not included and there are no child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components, the tree constructs a default node itself.</simpara>
          <simpara>Icons for different nodes and node states can be defined for the whole tree using the following attributes:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">iconLeaf</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">iconLeaf</phrase></literal> attribute points to the icon to use for any node that does not contain any child nodes.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">iconExpanded</phrase></literal>  and <literal><phrase role="varname">iconCollapsed</phrase></literal></term>
              <listitem>
                <simpara>The <literal><phrase role="varname">iconExpanded</phrase></literal> and <literal><phrase role="varname">iconCollapsed</phrase></literal> attributes point to the icons to use for expanded and collapsed nodes respectively. If these attributes are defined, the <literal><phrase role="varname">icon</phrase></literal> attribute is not used.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tree-Expanding_and_collapsing_tree_nodes">
          <title>Expanding and collapsing tree nodes</title>
          <simpara>The mode for performing submissions when nodes are expanded or collapsed is determined by the <literal><phrase role="varname">toggleType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>This is the default setting. The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component performs an Ajax form submission, and only the content of the tree is rendered.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>server</literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component performs a common submission, completely refreshing the page.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component updates on the client side through JavaScript, without any additional requests or updates. All nodes are rendered to the client during the initial page rendering.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>By default, tree nodes are expanded and collapsed through the <guibutton>+</guibutton> and <guibutton>-</guibutton> controls. To expand or collapse a tree node using an action event such as a mouse click, specify the event with the [varname]+toggleNodeEvent+ attribute.</simpara>
        </section>
        <section id="sect-Component_Reference-tree-Selecting_tree_nodes">
          <title>Selecting tree nodes</title>
          <simpara>The mode for performing submissions when nodes are selected is determined by the <literal><phrase role="varname">selectionType</phrase></literal> attribute, which can have one of the following three values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>This is the default setting. The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component performs an Ajax form submission, and only the content of the tree is rendered.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component updates on the client side using JavaScript, without any additional requests or updates.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tree-Identifying_nodes_with_the_rowKeyConverter_attribute">
          <title>Identifying nodes with the <literal><phrase role="varname">rowKeyConverter</phrase></literal> attribute</title>
          <simpara>If the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component uses a custom data model, the data model provides unique keys for tree nodes so they can be identified during a client request. The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component can use strings as key values. These strings may contain special characters that are not allowed by browsers, such as the left angle bracket (&lt;) and ampersand (&amp;). To allow these characters in the keys, a row key converter must be provided.</simpara>
          <simpara>To apply a converter to the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component, define it with the <literal><phrase role="varname">rowKeyConverter</phrase></literal> attribute.</simpara>
        </section>
        <section id="sect-Component_Reference-tree-Event_handling">
          <title>Event handling</title>
          <simpara>In addition to the standard Ajax events and HMTL events, the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component uses the following client-side events:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">nodetoggle</phrase></literal> event is triggered when a node is expanded or collapsed.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">beforenodetoggle</phrase></literal> event is triggered before a node is expanded or collapsed.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">selectionchange</phrase></literal> event is triggered when a node is selected.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">beforeselectionchange</phrase></literal> event is triggered before a node is selected.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component uses the following server-side listeners:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">toggleListener</phrase></literal> listener processes expand and collapse events.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="varname">selectionChangeListener</phrase></literal> listener processes the request when a node is selected.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tree-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tree</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UItree</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tree</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.TreeHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tree-Style_classes">
          <title>Style classes</title>
          <simpara>Styling for the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component is mostly applied to the tree nodes. Refer to <xref linkend="sect-Component_Reference-treeNode-Style_classes_and_skin_parameters"/> for details on styling tree nodes. In addition, the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component can make use of the style classes outlined in <xref linkend="tree-Style_classes"/>.</simpara>
          <variablelist id="tree-Style_classes">
            <title>Style classes (selectors)</title>
            <varlistentry>
              <term>
                <literal>.rf-tr-nd</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the nodes in a tree.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-tr-nd-last</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for last node in a tree.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-tr-nd-colps</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for a collapsed tree node.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-tr-nd-exp</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for an expanded tree node.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-Actions-treeSelectionChangeListener">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:treeSelectionChangeListener&gt;</phrase>
            </literal>
          </title>
          <simpara>Use the <literal><phrase role="sgmltag">&lt;r:treeSelectionChangeListener&gt;</phrase></literal> tag to register a <literal><phrase role="classname">TreeSelectionChangeListener</phrase></literal> class on a parent <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component. The class provided as a listener must implement the <literal><phrase role="interfacename">org.richfaces.event.TreeSelectionChangeListener</phrase></literal> interface. The <literal><phrase role="methodname">processTreeSelectionChange</phrase></literal> method accepts an <literal><phrase role="classname">org.richface.event.TreeSelectionChangeEvent</phrase></literal> event as a parameter.</simpara>
        </section>
        <section id="sect-Component_Reference-Trees-treeNode">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:treeNode&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component is a child component of the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component. It represents nodes in the parent tree. The appearance and functionality of each tree node can be customized.</simpara>
          <section id="sect-Component_Reference-treeNode-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component must be a child of a <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component or a tree adaptor component. It does not need any attributes declared for basic usage, but can provide markup templates for tree nodes of particular types. Default markup is used if the tree node type is not specified. Refer to <xref linkend="exam-Component_Reference-tree-Basic_usage"/> for an example of basic <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component usage.</simpara>
            <example id="exam-Component_Reference-treeNode-Basic_usage">
              <title>Basic usage</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:tree nodeType="#{node.type}" var="node"
           value="#{treeBean.rootNodes}"&gt;
   &lt;r:treeNode type="country"&gt;
      #{node.name}
   &lt;/r:treeNode&gt;
   &lt;r:treeNode type="state"&gt;
      #{node.name}
   &lt;/r:treeNode&gt;
   &lt;r:treeNode type="city"&gt;
      #{node.name}
   &lt;/r:treeNode&gt;
&lt;/r:tree&gt;
</programlisting>
              <simpara>The example renders a simple tree of countries. Each country node expands to show state nodes for that country, and each state node expands to show city nodes for that state.</simpara>
            </example>
          </section>
          <section id="sect-Component_Reference-treeNode-Appearance">
            <title>Appearance</title>
            <simpara>Refer to <xref linkend="sect-Component_Reference-tree-Appearance"/> for the <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component for details and examples on styling nodes and icons. Icon styling for individual <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components uses the same attributes as the parent <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component: <literal><phrase role="varname">iconLeaf</phrase></literal>, <literal><phrase role="varname">iconExpanded</phrase></literal>, and <literal><phrase role="varname">iconCollapsed</phrase></literal>. Icon-related attributes specified for child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> components overwrite any global icon attributes of the parent <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component.</simpara>
            <simpara>Use the <literal><phrase role="varname">rendered</phrase></literal> attribute to determine whether the node should actually be rendered in the tree or not. Using the <literal><phrase role="varname">rendered</phrase></literal> attribute in combination with the <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal>[varname]<literal>type</literal> attribute can allow further style differentiation between node content.</simpara>
          </section>
          <section id="sect-Component_Reference-treeNode-Interactivity">
            <title>Interactivity</title>
            <simpara>Interactivity with individual nodes, such as expanding, collapsing, and other event handling, can be managed by the parent <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-tree-Expanding_and_collapsing_tree_nodes"/> and <xref linkend="sect-Component_Reference-tree-Event_handling"/> for further details.</simpara>
            <simpara>Use the <literal><phrase role="varname">expanded</phrase></literal> attribute to determine whether the node is expanded or collapsed.</simpara>
          </section>
          <section id="sect-Component_Reference-treeNode-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeNode</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITreeNode</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeNode</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeNodeRenderer</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.TreeNodeHandler</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-treeNode-Style_classes_and_skin_parameters">
            <title>Style classes and skin parameters</title>
            <table id="treeNode-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
              <title>Style classes (selectors) and corresponding skin parameters</title>
              <tgroup cols="3">
                <colspec colname="col_1" colwidth="33*"/>
                <colspec colname="col_2" colwidth="33*"/>
                <colspec colname="col_3" colwidth="33*"/>
                <thead>
                  <row>
                    <entry align="left" valign="top">Class (selector)</entry>
                    <entry align="left" valign="top">Skin Parameters</entry>
                    <entry align="left" valign="top">Mapped CSS properties</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry align="left" valign="top" morerows="1">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a tree node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="parameter">generalFamilyFont</phrase>
                        </literal>
                      </simpara>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="property">font-family</phrase>
                        </literal>
                      </simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="parameter">generalSizeFont</phrase>
                        </literal>
                      </simpara>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="property">font-size</phrase>
                        </literal>
                      </simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-lbl</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a tree node label.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-cnt</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for tree node content.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-sel</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a selected tree node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="parameter">additionalBackgroundColor</phrase>
                        </literal>
                      </simpara>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="property">background</phrase>
                        </literal>
                      </simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ldn</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a tree node when it is loading.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="parameter">additionalBackgroundColor</phrase>
                        </literal>
                      </simpara>
                    </entry>
                    <entry align="left" valign="top">
                      <simpara>
                        <literal>
                          <phrase role="property">background</phrase>
                        </literal>
                      </simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-hnd</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a tree node handle.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-hnd-lf</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the handle of a leaf node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-hnd-colps</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the handle of a collapsed node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-hnd-exp</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the handle of an expanded node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-hnd-ldn-fct</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the loading facet of a tree node handle.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ico</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for tree node icon.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ico-lf</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the icon of a leaf node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ico-colps</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the icon of a collapsed node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ico-exp</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for the icon of an expanded node.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                  <row>
                    <entry align="left" valign="top">
                      <variablelist>
                        <varlistentry>
                          <term>
                            <literal>
                              <phrase role="classname">.rf-trn-ico-cst</phrase>
                            </literal>
                          </term>
                          <listitem>
                            <simpara>This class defines styles for a custom node icon.</simpara>
                          </listitem>
                        </varlistentry>
                      </variablelist>
                    </entry>
                    <entry align="left" valign="top" namest="col_2" nameend="col_3">
                      <simpara>No skin parameters.</simpara>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </section>
          <section id="sect-Component_Reference-Actions-treeToggleListener">
            <title>
              <literal>
                <phrase role="sgmltag">&lt;r:treeToggleListener&gt;</phrase>
              </literal>
            </title>
            <simpara>Use the <literal><phrase role="sgmltag">&lt;r:treeToggleListener&gt;</phrase></literal> tag to register a <literal><phrase role="classname">TreeToggleListener</phrase></literal> class on a parent <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component. The class provided as a listener must implement the <literal><phrase role="interfacename">org.richfaces.event.TreeToggleListener</phrase></literal> interface. The <literal><phrase role="methodname">processTreeToggle</phrase></literal> method accepts an <literal><phrase role="classname">org.richface.event.TreeToggleEvent</phrase></literal> event as a parameter.</simpara>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Trees-Tree_adaptors">
        <title>Tree adaptors</title>
        <simpara>Use a tree adaptor to populate a tree model declaratively from a non-hierarchical model, such as a list or a map.</simpara>
        <section id="sect-Component_Reference-Tree_adaptors-treeModelAdaptor">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component takes an object which implements the <literal><phrase role="interfacename">Map</phrase></literal> or <literal><phrase role="interfacename">Iterable</phrase></literal> interfaces. It adds all the object entries to the parent node as child nodes.</simpara>
          <section id="sect-Component_Reference-treeModelAdaptor-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component is added as a nested child component to a <literal><phrase role="sgmltag">&lt;r:tree&gt;</phrase></literal> component, or to another tree adaptor component.</simpara>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component requires the <literal><phrase role="varname">nodes</phrase></literal> attribute for basic usage. The <literal><phrase role="varname">nodes</phrase></literal> attribute defines a collection of elements to iterate through for populating the nodes.</simpara>
            <simpara>Define the appearance of each node added by the adaptor with a child <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-Trees-treeNode"/> for details on the <literal><phrase role="sgmltag">&lt;r:treeNode&gt;</phrase></literal> component.</simpara>
          </section>
          <section id="sect-Component_Reference-treeModelAdaptor-Identifying_nodes">
            <title>Identifying nodes</title>
            <simpara>Adaptors that use <literal><phrase role="interfacename">Map</phrase></literal> interfaces or models with non-string keys require a row key converter in order to correctly identify nodes. Refer to <xref linkend="sect-Component_Reference-tree-Identifying_nodes_with_the_rowKeyConverter_attribute"/> for details on the use of the <literal><phrase role="varname">rowKeyConverter</phrase></literal> attribute.</simpara>
            <simpara>Adaptors that use <literal><phrase role="interfacename">Iterable</phrase></literal> interfaces have simple integer row keys. A default converter is provided and does not need to be referenced explicitly.</simpara>
          </section>
          <section id="sect-Component_Reference-treeModelAdaptor-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.treeModelAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITreeModelAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeModelAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.TreeModelAdaptorHandler</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sect-Component_Reference-Tree_adaptors-treeModelRecursiveAdaptor">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component iterates through recursive collections in order to populate a tree with hierarchical nodes, such as for a file system with multiple levels of directories and files.</simpara>
          <section id="sect-Component_Reference-treeModelRecursiveAdaptor-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component is an extension of the <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component. As such, the <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component uses all of the same attributes. Refer to <xref linkend="sect-Component_Reference-Tree_adaptors-treeModelAdaptor"/> for details on the <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component.</simpara>
            <simpara>In addition, the <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component requires the <literal><phrase role="varname">roots</phrase></literal> attribute. The <literal><phrase role="varname">roots</phrase></literal> attribute defines the collection to use at the top of the recursion. For subsequent levels, the <literal><phrase role="varname">nodes</phrase></literal> attribute is used for the collection.</simpara>
            <simpara><xref linkend="exam-Component_Reference-treeModelRecursiveAdaptor-Basic_usage"/> demonstrates how the <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component can be used in conjunction with the <literal><phrase role="sgmltag">&lt;r:treeModelAdaptor&gt;</phrase></literal> component to recursively iterate through a file system and create a tree of directories and files.</simpara>
            <example id="exam-Component_Reference-treeModelRecursiveAdaptor-Basic_usage">
              <title>Basic usage</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:tree var="item"&gt;
   &lt;r:treeModelRecursiveAdaptor roots="#{fileSystemBean.sourceRoots}" nodes="#{item.directories}" &gt;
      &lt;r:treeNode&gt;
         #{item.shortPath}
      &lt;/r:treeNode&gt;
      &lt;r:treeModelAdaptor nodes="#{item.files}"&gt;
         &lt;r:treeNode&gt;#{item}&lt;/r:treeNode&gt;
      &lt;/r:treeModelAdaptor&gt;
   &lt;/r:treeModelRecursiveAdaptor&gt;
&lt;/r:tree&gt;
</programlisting>
              <simpara>The <literal><phrase role="sgmltag">&lt;r:treeModelRecursiveAdaptor&gt;</phrase></literal> component references the <literal><phrase role="classname">FileSystemBean</phrase></literal> class as the source for the data.</simpara>
              <programlisting language="Java" linenumbering="unnumbered">@ManagedBean
@RequestScoped
public class FileSystemBean {
   private static final String SRC_PATH = "/WEB-INF";

   private List&lt;FileSystemNode&gt; srcRoots;

   public synchronized List&lt;FileSystemNode&gt; getSourceRoots() {
      if (srcRoots == null) {
         srcRoots = new FileSystemNode(SRC_PATH).getDirectories();
      }
      return srcRoots;
   }
}
</programlisting>
              <simpara>The <literal><phrase role="classname">FileSystemBean</phrase></literal> class in turn uses the <literal><phrase role="classname">FileSystemNode</phrase></literal> class to recursively iterate through the collection.</simpara>
              <programlisting language="Java" linenumbering="unnumbered">public class FileSystemNode {
   ...
   public synchronized List&lt;FileSystemNode&gt; getDirectories() {
      if (directories == null) {
         directories = Lists.newArrayList();
         Iterables.addAll(directories, transform(filter(getResourcePaths(), containsPattern("/$")), FACTORY));
      }
      return directories;
   }

   public synchronized List&lt;String&gt; getFiles() {
      if (files == null) {
         files = new ArrayList&lt;String&gt;();
         Iterables.addAll(files, transform(filter(getResourcePaths(), not(containsPattern("/$"))), TO_SHORT_PATH));
      }
      return files;
   }

   private Iterable&lt;String&gt; getResourcePaths() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ExternalContext externalContext = facesContext.getExternalContext();
        Set&lt;String&gt; resourcePaths = externalContext.getResourcePaths(this.path);

      if (resourcePaths == null) {
         resourcePaths = Collections.emptySet();
      }
      return resourcePaths;
   }
   ...
}
</programlisting>
              <simpara>The <literal><phrase role="function">getDirectories()</phrase></literal> function is used recursively until the object has the collection of children. The model adaptor calls the <literal><phrase role="function">getFiles()</phrase></literal> function at each level in order to add the file nodes.</simpara>
              <simpara>The resulting tree hierarchically lists the directories and files in the collection.</simpara>
              <figure>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/exam-Component_Reference-treeModelRecursiveAdaptor-Basic_usage.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>A hierarchical tree detailing a file system.</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </example>
          </section>
          <section id="sect-Component_Reference-treeModelRecursiveAdaptor-Identifying_nodes">
            <title>Identifying nodes</title>
            <simpara>Adaptors that use <literal><phrase role="interfacename">Map</phrase></literal> interfaces or models with non-string keys require a row key converter in order to correctly identify nodes. Refer to <xref linkend="sect-Component_Reference-tree-Identifying_nodes_with_the_rowKeyConverter_attribute"/> for details on the use of the <literal><phrase role="varname">rowKeyConverter</phrase></literal> attribute.</simpara>
            <simpara>Adaptors that use <literal><phrase role="interfacename">Iterable</phrase></literal> interfaces have simple integer row keys. A default converter is provided and does not need to be referenced explicitly.</simpara>
          </section>
          <section id="sect-Component_Reference-treeModelRecursiveAdaptor-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeModelRecursiveAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITreeModelRecursiveAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.TreeModelRecursiveAdaptor</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.TreeModelRecursiveAdaptorHandler</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Menus_and_toolbars">
      <title>Menus and toolbars</title>
      <simpara>Read this chapter for details on menu and toolbar components.</simpara>
      <section id="sect-Component_Reference-Menus_and_toolbars-dropDownMenu">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase></literal> component is used for creating a drop-down, hierarchical menu. It can be used with the <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component to create menus in an application’s toolbar.</simpara>
        <figure id="figu-Component_Reference-dropDownMenu-dropDownMenu">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-dropDownMenu-dropDownMenu.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-dropDownMenu-dropDownMenu</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-dropDownMenu-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase></literal> component only requires the <literal><phrase role="varname">label</phrase></literal> attribute for basic usage. Use the <literal><phrase role="varname">label</phrase></literal> attribute to define the text label that appears as the title of the menu. Clicking on the title drops the menu down.</simpara>
          <simpara>Alternatively, use the <literal>label</literal> facet to define the menu title. If the <literal>label</literal> facet is used, the <literal><phrase role="varname">label</phrase></literal> attribute is not necessary.</simpara>
        </section>
        <section id="sect-Component_Reference-dropDownMenu-Menu_content">
          <title>Menu content</title>
          <simpara>To set the content of the drop-down menu and any sub-menus, use the <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal>, and <literal><phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase></literal> components. These components are detailed in <xref linkend="sect-Component_Reference-Menus_and_toolbars-Menu_sub-components"/>.</simpara>
        </section>
        <section id="sect-Component_Reference-dropDownMenu-Appearance">
          <title>Appearance</title>
          <simpara>Use the <literal><phrase role="varname">jointPoint</phrase></literal> and <literal><phrase role="varname">direction</phrase></literal> attributes to determine the direction and location of the menu when it appears. The <literal><phrase role="varname">jointPoint</phrase></literal> and <literal><phrase role="varname">direction</phrase></literal> attributes both use the following settings:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>topLeft</literal>
              </term>
              <listitem>
                <simpara><literal>topRight</literal>:: <literal>bottomLeft</literal>:: <literal>bottomRight</literal>:: When used with the <literal><phrase role="varname">jointPoint</phrase></literal> attribute, the menu is attached to the top-left, top-right, bottom-left, or bottom-right of the control as appropriate.</simpara>
                <simpara>When used with the <literal><phrase role="varname">direction</phrase></literal> attribute, the menu appears to the top-left, top-right, bottom-left, or bottom-right of the joint location as appropriate.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>auto</literal>
              </term>
              <listitem>
                <simpara>The direction or joint location is determined automatically.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal>autoLeft</literal>:: <literal>autoRight</literal>:: <literal>autoTop</literal>:: <literal>autoBottom</literal></term>
              <listitem>
                <simpara>When used with the <literal><phrase role="varname">jointPoint</phrase></literal> attribute, the joint location is determined automatically, but defaults to either the left, right, top, or bottom of the control as appropriate.</simpara>
                <simpara>When used with the <literal><phrase role="varname">direction</phrase></literal> attribute, the menu direction is determined automatically, but defaults to either the left, right, top, or bottom of the joint location as appropriate.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-dropDownMenu-Expanding_and_collapsing_the_menu">
          <title>Expanding and collapsing the menu</title>
          <simpara>By default, the menu drops down when the title is clicked. To drop down with a different event, use the <literal><phrase role="varname">showEvent</phrase></literal> attribute to define the event instead.</simpara>
          <simpara>Menus can be navigated using the keyboard. Additionally, menus can be navigated programmatically using the JavaScript <acronym>API</acronym>. The JavaScript API allows the following methods:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">show()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">show()</phrase></literal> method shows the menu.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">hide()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">hide()</phrase></literal> method hides the menu.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">activateItem(menuItemId)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">activateItem(menuItemId)</phrase></literal> activates the menu item with the <literal><phrase role="parameter">menuItemId</phrase></literal> identifier.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>Use the <literal><phrase role="varname">mode</phrase></literal> attribute to determine how the menu requests are submitted:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <literal><phrase role="varname">render</phrase></literal> attribute.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>client</literal> causes the <literal><phrase role="varname">action</phrase></literal> and <literal><phrase role="varname">actionListener</phrase></literal> items to be ignored, and the behavior is fully defined by the nested components or custom JavaScript instead of responses from submissions.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dropDownMenu-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDropDownMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenuRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dropDownMenu-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="dropDownMenu-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of the drop-down menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the drop-down menu when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabDisabledTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-lbl-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of the drop-down menu when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-pos</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the positioning of the drop-down menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-lbl-unsel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label of the drop-down menu when it is unselected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-lst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the drop-down list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-lst-bg</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the background of the drop-down list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-sublst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the positioning of the menu when used as a sub-menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm-unsel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is unselected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabDisabledTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-itm-ic</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-emptyIcon</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an empty icon in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-sep</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu separator.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ddm-nd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu node.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Menus_and_toolbars-contextMenu">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:contextMenu&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:contextMenu&gt;</phrase></literal> component is used for creating a hierarchical context menu that are activated on events like <literal>onmouseover</literal> , <literal>onclick</literal> etc. The component can be applied to any element on the page.</simpara>
        <figure id="figu-Component_Reference-contextMenu-contextMenu">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:contextMenu&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-contextMenu-contextMenu.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-contextMenu-contextMenu</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-contextMenu-Basic_usage">
          <title>Basic usage</title>
          <simpara>To set the content of the context menu and any sub-menus, use the <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal>, and <literal><phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase></literal> components. These components are detailed in <xref linkend="sect-Component_Reference-Menus_and_toolbars-Menu_sub-components"/>.</simpara>
        </section>
        <section id="sect-Component_Reference-contextMenu-Appearance">
          <title>Appearance</title>
          <simpara>Use the <literal><phrase role="varname">direction</phrase></literal> attribute to determine the direction of the menu when it appears. The <literal><phrase role="varname">direction</phrase></literal> attribute uses the following settings:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>topLeft</literal>
              </term>
              <listitem>
                <simpara><literal>topRight</literal>:: <literal>bottomLeft</literal>:: <literal>bottomRight</literal>:: The menu appears to the top-left, top-right, bottom-left, or bottom-right of the activation point.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>auto</literal>
              </term>
              <listitem>
                <simpara>The direction is determined automatically.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal>autoLeft</literal>:: <literal>autoRight</literal>:: <literal>autoTop</literal>:: <literal>autoBottom</literal></term>
              <listitem>
                <simpara>The menu direction is determined automatically, but defaults to either the left, right, top, or bottom of the activation point as appropriate.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-contextMenu-Expanding_and_collapsing_the_menu">
          <title>Expanding and collapsing the menu</title>
          <simpara>By default, the menu is activated when the <literal>contextmenu</literal> event is observed (ie. a right-click). To activate on a different event, use the <literal><phrase role="varname">showEvent</phrase></literal> attribute to define the event instead.</simpara>
          <simpara>Menus can be navigated using the keyboard. Additionally, menus can be navigated programmatically using the JavaScript <acronym>API</acronym>. The JavaScript API allows the following methods:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">show()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">show()</phrase></literal> method shows the menu.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">hide()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">hide()</phrase></literal> method hides the menu.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="methodname">activateItem(menuItemId)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="methodname">activateItem(menuItemId)</phrase></literal> activates the menu item with the <literal><phrase role="parameter">menuItemId</phrase></literal> identifier.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>Use the <literal><phrase role="varname">mode</phrase></literal> attribute to determine how the menu requests are submitted:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <literal><phrase role="varname">render</phrase></literal> attribute.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>client</literal> causes the <literal><phrase role="varname">action</phrase></literal> and <literal><phrase role="varname">actionListener</phrase></literal> items to be ignored, and the behavior is fully defined by the nested components or custom JavaScript instead of responses from submissions.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-contextMenu-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ContextMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIContextMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.ContextMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ContextMenuRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-contextMenu-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="contextMenu-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top level container of the context menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the context menu when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabDisabledTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-lbl-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top level of the context menu when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-pos</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the positioning of the context menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-lbl-unsel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top level of the context menu when it is unselected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-lst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the context list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-lst-bg</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the background of the context list.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">additionalBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-sublst</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines the positioning of the menu when used as a sub-menu.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">headerBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabBackgroundColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm-unsel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is unselected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu item when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">tabDisabledTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-itm-ic</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-emptyIcon</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an empty icon in a menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-sep</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu separator.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ctx-nd</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a menu node.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Menus_and_toolbars-Menu_sub-components">
        <title>Menu sub-components</title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal>, and <literal><phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase></literal> components are used to construct menus for the <literal><phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-dropDownMenu"/> for more details on the <literal><phrase role="sgmltag">&lt;r:dropDownMenu&gt;</phrase></literal> component.</simpara>
        <section id="sect-Component_Reference-Menus_and_toolbars-menuItem">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:menuItem&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> component represents a single item in a menu control. The <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> component can be also be used as a seperate component without a parent menu component, such as on a toolbar.</simpara>
          <section id="sect-Component_Reference-menuItem-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> component requires the <literal><phrase role="varname">label</phrase></literal> attribute for basic usage. The <literal><phrase role="varname">label</phrase></literal> attribute is the text label for the menu item.</simpara>
          </section>
          <section id="sect-Component_Reference-menuItem-Appearance">
            <title>Appearance</title>
            <simpara>Icons can be added to menu items through the use of two icon attributes. The <literal><phrase role="varname">icon</phrase></literal> attribute specifies the normal icon, while the <literal><phrase role="varname">iconDisabled</phrase></literal> attribute specifies the icon for a disabled item.</simpara>
            <simpara>Alternatively, define facets with the names <literal>icon</literal> and <literal>iconDisabled</literal> to set the icons. If facets are defined, the <literal><phrase role="varname">icon</phrase></literal> and <literal><phrase role="varname">iconDisabled</phrase></literal> attributes are ignored. Using facets for icons allows more complex usage; example shows a checkbox being used in place of an icon.</simpara>
            <example id="exam-Component_Reference-menuItem-Icon_facets">
              <title>Icon facets</title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:menuItem value="Show comments"&gt;
   &lt;f:facet name="icon"&gt;
      &lt;h:selectBooleanCheckbox value="#{bean.property}"/&gt;
   &lt;/f:facet&gt;
&lt;/r:menuItem&gt;
</programlisting>
            </example>
          </section>
          <section id="sect-Component_Reference-menuItem-Submission_modes">
            <title>Submission modes</title>
            <simpara>Use the <literal><phrase role="varname">submitMode</phrase></literal> attribute to determine how the menu item requests are submitted:</simpara>
            <itemizedlist>
              <listitem>
                <simpara><literal>server</literal>, the default setting, submits the form normally and completely refreshes the page.</simpara>
              </listitem>
              <listitem>
                <simpara><literal>ajax</literal> performs an Ajax form submission, and re-renders elements specified with the <literal><phrase role="varname">render</phrase></literal> attribute.</simpara>
              </listitem>
              <listitem>
                <simpara><literal>client</literal> causes the <literal><phrase role="varname">action</phrase></literal> and <literal><phrase role="varname">actionListener</phrase></literal> items to be ignored, and the behavior is fully defined by the nested components instead of responses from submissions.</simpara>
              </listitem>
            </itemizedlist>
          </section>
          <section id="sect-Component_Reference-menuItem-JavaScript_API">
            <title>JavaScript API</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">activate()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Activate the menu item as though it were selected.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section id="sect-Component_Reference-menuItem-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIMenuItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenu</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuItemRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sect-Component_Reference-Menus_and_toolbars-menuGroup">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component represents an expandable sub-menu in a menu control. The <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component can contain a number of <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> components, or further nested <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> components.</simpara>
          <section id="sect-Component_Reference-menuGroup-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component requires the <literal><phrase role="varname">label</phrase></literal> attribute for basic usage. The <literal><phrase role="varname">label</phrase></literal> attribute is the text label for the menu item. Alternatively, use the <literal>label</literal> facet to define content for the label.</simpara>
            <simpara>Additionally, the <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component must contain child <literal><phrase role="sgmltag">&lt;r:menuItem&gt;</phrase></literal> components or <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> components.</simpara>
          </section>
          <section id="sect-Component_Reference-menuGroup-Appearance">
            <title>Appearance</title>
            <simpara>Icons can be added to menu groups through the use of two icon attributes. The <literal><phrase role="varname">icon</phrase></literal> attribute specifies the normal icon, while the <literal><phrase role="varname">iconDisabled</phrase></literal> attribute specifies the icon for a disabled group.</simpara>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component can be positioned using the <literal><phrase role="varname">jointPoint</phrase></literal> and <literal><phrase role="varname">direction</phrase></literal> attributes, the same as the parent menu control. For details on the <literal><phrase role="varname">jointPoint</phrase></literal> and <literal><phrase role="varname">direction</phrase></literal> attributes, refer to <xref linkend="sect-Component_Reference-dropDownMenu-Appearance"/>.</simpara>
          </section>
          <section id="sect-Component_Reference-menuGroup-JavaScript_API">
            <title>JavaScript API</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuGroup&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">show()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Show the menu group.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">hide()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Hide the menu group.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section id="sect-Component_Reference-menuGroup-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIMenuGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenu</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuGroupRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sect-Component_Reference-Menus_and_toolbars-menuSeparator">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase></literal> component represents a separating divider in a menu control.</simpara>
          <section id="sect-Component_Reference-menuSeparator-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:menuSeparator&gt;</phrase></literal> component does not require any attributes for basic usage. Add it as a child to a menu component to separator menu items and menu groups.</simpara>
          </section>
          <section id="sect-Component_Reference-menuSeparator-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuSeparator</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIMenuSeparator</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropDownMenu</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MenuSeparatorRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Menus_and_toolbars-panelMenu">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component is used in conjunction with <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> to create an expanding, hierarchical menu. The <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component’s appearance can be highly customized, and the hierarchy can stretch to any number of sub-levels.</simpara>
        <example id="exam-Component_Reference-panelMenu-panelMenu">
          <title>panelMenu</title>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:panelMenu mode="ajax"
                topGroupExpandedRightIcon="chevronUp"
                topGroupCollapsedRightIcon="chevronDown"
                groupExpandedLeftIcon="disc"
                groupCollapsedLeftIcon="disc"&gt;
   &lt;r:panelMenuGroup label="Group 1"&gt;
      &lt;r:panelMenuItem label="Item 1.1"/&gt;
      &lt;r:panelMenuItem label="Item 1.2"/&gt;
      &lt;r:panelMenuItem label="Item 1.3"/&gt;
   &lt;/r:panelMenuGroup&gt;
   &lt;r:panelMenuGroup label="Group 2"&gt;
      &lt;r:panelMenuItem label="Item 2.1"/&gt;
      &lt;r:panelMenuItem   label="Item 2.2"/&gt;
      &lt;r:panelMenuItem label="Item 2.3"/&gt;
      &lt;r:panelMenuGroup label="Group 2.4"&gt;
         &lt;r:panelMenuItem label="Item 2.4.1"/&gt;
         &lt;r:panelMenuItem label="Item 2.4.2"/&gt;
         &lt;r:panelMenuItem label="Item 2.4.3"/&gt;
      &lt;/r:panelMenuGroup&gt;
      &lt;r:panelMenuItem label="Item 2.5"/&gt;
   &lt;/r:panelMenuGroup&gt;
   &lt;r:panelMenuItem label="Item 3"/&gt;
&lt;/r:panelMenu&gt;
</programlisting>
          <figure>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-panelMenu-panelMenu.png" contentwidth="which is currently selected and expanded. The third menu item is not a group and as such is not expandable."/>
              </imageobject>
              <textobject>
                <phrase>A panel menu. The first menu group is collapsed. The second menu group is expanded; it contains menu items and a further menu group</phrase>
              </textobject>
            </mediaobject>
          </figure>
        </example>
        <section id="sect-Component_Reference-panelMenu-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component does not need any extra attributes declared for basic usage. However, it does require child <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> components. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-panelMenuGroup"/> and <xref linkend="sect-Component_Reference-Menus_and_toolbars-panelMenuItem"/> for details on these child components.</simpara>
        </section>
        <section id="sect-Component_Reference-panelMenu-Interactivity_options">
          <title>Interactivity options</title>
          <simpara>The <literal><phrase role="varname">activeItem</phrase></literal> attribute is used to point to the name of the currently selected menu item.</simpara>
          <simpara>By default, the event to expand the menu is a mouse click. Set the <literal><phrase role="varname">expandEvent</phrase></literal> attribute to specify a different event to expand menus. Multiple levels of sub-menus can be expanded in one action. Set <literal><phrase role="code">expandSingle="true"</phrase></literal> to only expand one sub-menu at a time.</simpara>
          <simpara>Similarly, the default event to collapse the menu is a mouse click. Set the <literal><phrase role="varname">collapseEvent</phrase></literal> attribute to specify a different event to collapse menus.</simpara>
          <simpara>As with other control components, set <literal><phrase role="code">disabled="true"</phrase></literal> to disable the <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> comonent. Child menu components can be disabled in the same way.</simpara>
        </section>
        <section id="sect-Component_Reference-panelMenu-Appearance">
          <title>Appearance</title>
          <simpara>Icons for the panel menu can be chosen from a set of standard icons. Icons can be set for the top panel menu, child panel menus, and child item. There are three different menu states that the icon represents, as well as icons for both the left and right side of the item title.</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">topGroupExpandedLeftIcon</phrase>
                </literal>
              </term>
              <listitem>
                <simpara><literal><phrase role="varname">topGroupExpandedRightIcon</phrase></literal>:: These attributes determine the icons for the top level menu when it is expanded.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">topGroupCollapsedLeftIcon</phrase></literal>:: <literal><phrase role="varname">topGroupCollapsedRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for the top level menu when it is collapsed.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">topGroupDisabledLeftIcon</phrase></literal>:: <literal><phrase role="varname">topGroupDisabledRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for the top level menu when it is disabled.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">topItemLeftIcon</phrase></literal>:: <literal><phrase role="varname">topItemRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for a top level menu item.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">topItemDisabledLeftIcon</phrase></literal>:: <literal><phrase role="varname">topItemDisabledRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for a top level menu item when it is disabled.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">groupExpandedLeftIcon</phrase></literal>:: <literal><phrase role="varname">groupExpandedRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for sub-menus that are not the top-level menu when they are expanded.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">groupCollapsedLeftIcon</phrase></literal>:: <literal><phrase role="varname">groupCollapsedRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for sub-menus that are not the top-level menu when they are collapsed.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">groupDisabledLeftIcon</phrase></literal>:: <literal><phrase role="varname">groupDisabledRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for sub-menus that are not the top-level menu when they are disabled.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">itemLeftIcon</phrase></literal>:: <literal><phrase role="varname">itemRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for items in the menus.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term><literal><phrase role="varname">itemDisabledLeftIcon</phrase></literal>:: <literal><phrase role="varname">itemDisabledRightIcon</phrase></literal></term>
              <listitem>
                <simpara>These attributes determine the icons for items in the menus when they are disabled.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara><xref linkend="exam-Component_Reference-panelMenu-panelMenu"/> demonstrates the use of icon declaration at the panel menu level. The standard icons are shown in <xref linkend="figu-Component_Reference-panelMenu-Standard_icons"/>.</simpara>
          <figure id="figu-Component_Reference-panelMenu-Standard_icons">
            <title>
              <literal>
                <phrase role="sgmltag">&lt;Standard icons&gt;</phrase>
              </literal>
            </title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-panelMenuGroup-Standard_icons.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-panelMenuGroup-Standard_icons</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <simpara>Alternatively, point the icon attributes to the paths of image files. The image files are then used as icons.</simpara>
          <simpara>Any icons specified by child <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> components overwrite the relevant icons declared with the parent <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-panelMenu-Submission_modes">
          <title>Submission modes</title>
          <simpara>The <literal><phrase role="varname">itemMode</phrase></literal> attribute defines the submission mode for normal menu items that link to content, and the <literal><phrase role="varname">groupMode</phrase></literal> attribute defines the submission mode for menu items that expand and collapse. The settings for these attributes apply to the entire menu unless a menu item defines its own individual <literal><phrase role="varname">itemMode</phrase></literal> or <literal><phrase role="varname">groupMode</phrase></literal>. The possible values for <literal><phrase role="varname">itemMode</phrase></literal> and <literal><phrase role="varname">groupMode</phrase></literal> are as follows:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal>server</literal>, the default setting, which submits the form normally and completely refreshes the page.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>ajax</literal>, which performs an Ajax form submission, and re-renders elements specified with the <literal><phrase role="varname">render</phrase></literal> attribute.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>client</literal>, which causes the <literal><phrase role="varname">action</phrase></literal> and <literal><phrase role="varname">actionListener</phrase></literal> items to be ignored, and the behavior is fully defined by the nested components instead of responses from submissions.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-panelMenu-panelMenu_server-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> server-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component fires the <literal>ItemChangeEvent</literal> event on the server side when the menu is changed. The event only fires in the <literal>server</literal> and <literal>ajax</literal> submission modes. The event provides the <literal><phrase role="varname">itemChangeListener</phrase></literal> attribute to reference the event listener. Refer to <xref linkend="sect-Component_Reference-Panels-itemChangeListener"/> for details on the <literal><phrase role="sgmltag">&lt;r:itemChangeListener&gt;</phrase></literal> tag.</simpara>
        </section>
        <section id="sect-Component_Reference-panelMenu-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">expandAll()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Expand all the panel menu groups in the component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">collapseAll()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Collapse all the panel menu groups in the component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">selectItem(id)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Select the menu item with the <literal><phrase role="parameter">id</phrase></literal> identifier.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-panelMenu-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPanelMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenu</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.html.PanelMenuTagHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-panelMenu-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="panelMenu-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the panel menu itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-pm-colps</literal>:: These classes define styles for the panel menu when it is expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the panel menu icons.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-ico-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-pm-ico-colps</literal>:: These classes define styles for the panel menu icons when they are expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-hdr-exp</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-pm-hdr-colps</literal>:: These classes define styles for the panel menu headers when they are expanded or collapsed.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu item as part of a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rf-pm-itm:hover</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu item when the mouse hovers over it.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu item when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu item when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a panel menu item when it is expanded.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in a panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-top-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu group as part of another panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a panel menu group when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rf-pm-gr-hdr:hover</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of a panel menu group when the mouse hovers over it.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-hdr-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of a panel menu group when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in a panel menu group when it is expanded.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-gr-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu item as part of a panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rf-pm-top-itm:hover</literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu item when the mouse hovers over it.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu item when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu item when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in the top panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in the top panel menu item when it is expanded.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-itm-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in the top panel menu item.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-gr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu group as part of another panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-sel</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the top panel menu group when it is selected.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-hdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the top panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-hdr-dis</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the header of the top panel menu group when it is disabled.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tabDisabledTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>additionalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in the top panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-exp-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the icon in the top panel menu group when it is expanded.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the label in the top panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pm-top-gr-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the content of the top panel menu group.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Menus_and_toolbars-panelMenuGroup">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component defines a group of <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> components inside a <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal>.</simpara>
          <section id="sect-Component_Reference-panelMenuGroup-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component needs the <literal><phrase role="varname">label</phrase></literal> attribute declared, which specifies the text to show for the menu entry. Alternatively, the <literal>label</literal> facet can be used to specify the menu text.</simpara>
            <simpara>In addition, the <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component at least one <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> or <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> components as child elements.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuGroup-Appearance">
            <title>Appearance</title>
            <simpara>Icons for the menu group are inherited from the parent <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-panelMenu-Appearance"/> for details on icon attributes and facets. Alternatively, the menu group’s icons can be re-defined at the <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component level, and these settings will be used instead of the parent component’s settings.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuGroup-Submission_modes">
            <title>Submission modes</title>
            <simpara>If the <literal><phrase role="varname">mode</phrase></literal> attribute is unspecified, the submission behavior for the group is inherited from the parent <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal>. Otherwise, the <literal><phrase role="varname">groupMode</phrase></literal> setting of the panel menu is used instead of the parent’s behavior. Refer to <xref linkend="sect-Component_Reference-panelMenu-Submission_modes"/> for submission mode settings.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuGroup-panelMenuGroup_server-side_events">
            <title><literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> server-side events</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component fires the <literal>ActionEvent</literal> event on the server side when the menu group receives a user action. The event only fires in the <literal>server</literal> and <literal>ajax</literal> submission modes. The event provides the <literal><phrase role="varname">action</phrase></literal> attribute to specify the user action method, and the <literal><phrase role="varname">actionListener</phrase></literal> attribute to reference the event listener.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuGroup-JavaScript_API">
            <title>JavaScript API</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">expand()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Expand this panel menu group.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">collapse()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Collapse this panel menu group.</simpara>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">select(id)</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Select the menu item with the <literal><phrase role="parameter">id</phrase></literal> identifier.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section id="sect-Component_Reference-panelMenuGroup-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPanelMenuGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuGroupRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
        <section id="sect-Component_Reference-Menus_and_toolbars-panelMenuItem">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> component represents a single item inside a <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component, which is in turn part of a <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> component.</simpara>
          <section id="sect-Component_Reference-panelMenuItem-Basic_usage">
            <title>Basic usage</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> component needs the <literal><phrase role="varname">label</phrase></literal> attribute declared, which specifies the text to show for the menu entry. Alternatively, the <literal>label</literal> facet can be used to specify the menu text.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuItem-Appearance">
            <title>Appearance</title>
            <simpara>Icons for the menu item are inherited from the parent <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal> or <literal><phrase role="sgmltag">&lt;r:panelMenuGroup&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-panelMenu-Appearance"/> for details on icon attributes and facets. Alternatively, the menu item’s icons can be re-defined at the <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> component level, and these settings will be used instead of the parent component’s settings.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuItem-Submission_modes">
            <title>Submission modes</title>
            <simpara>If the <literal><phrase role="varname">mode</phrase></literal> is unspecified, the submission behavior for the item is inherited from the parent <literal><phrase role="sgmltag">&lt;r:panelMenu&gt;</phrase></literal>. Otherwise, the <literal><phrase role="varname">itemMode</phrase></literal> setting from the panel menu is used instead of the parent’s behavior.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuItem-panelMenuItem_server-side_events">
            <title><literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> server-side events</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> component fires the <literal>ActionEvent</literal> event on the server side when the menu item receives a user action. The event only fires in the <literal>server</literal> and <literal>ajax</literal> submission modes. The event provides the <literal><phrase role="varname">action</phrase></literal> attribute to specify the user action performed, and the <literal><phrase role="varname">actionListener</phrase></literal> attribute to reference the event listener.</simpara>
          </section>
          <section id="sect-Component_Reference-panelMenuItem-JavaScript_API">
            <title>JavaScript API</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:panelMenuItem&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
            <variablelist>
              <varlistentry>
                <term>
                  <literal>
                    <phrase role="function">select()</phrase>
                  </literal>
                </term>
                <listitem>
                  <simpara>Select this menu item.</simpara>
                </listitem>
              </varlistentry>
            </variablelist>
          </section>
          <section id="sect-Component_Reference-panelMenuItem-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPanelMenuItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuItem</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PanelMenuItemRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
      <section id="sect-Component_Reference-Menus_and_toolbars-toolbar">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:toolbar&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component is a horizontal toolbar. Any JavaServer Faces ( <acronym>JSF</acronym>) component can be added to the toolbar.</simpara>
        <figure id="figu-Component_Reference-toolbar-toolbar">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:toolbar&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-toolbar-toolbar.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-toolbar-toolbar</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-toolbar-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component does not require any attributes to be defined for basic usage. Add child components to the <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component to have them appear on the toolbar when rendered.</simpara>
          <example id="exam-Component_Reference-toolbar-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:toolbar&gt;
   &lt;h:commandLink value="News" /&gt;
   &lt;h:commandLink value="Reviews" /&gt;
   &lt;h:commandLink value="Galleries" /&gt;
&lt;/r:toolbar&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-toolbar-Appearance">
          <title>Appearance</title>
          <simpara>Set the width and height of the toolbar using the common <literal><phrase role="varname">width</phrase></literal> and <literal><phrase role="varname">height</phrase></literal> attributes.</simpara>
          <simpara>Items on the toolbar can be separated by a graphical item separator. Use the <literal><phrase role="varname">itemSeparator</phrase></literal> attribute to specify one of the standard separator styles:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal>none</literal>, the default appearance, does not show any item separators.</simpara>
            </listitem>
            <listitem>
              <simpara><literal>disc</literal> shows a small circular disc to separate items: <inlinemediaobject><imageobject><imagedata fileref="images/figu-Component_Reference-toolbar-disc.png"/></imageobject><textobject><phrase>figu-Component_Reference-toolbar-disc</phrase></textobject></inlinemediaobject></simpara>
            </listitem>
            <listitem>
              <simpara><literal>grid</literal> shows a grid pattern to separate items: <inlinemediaobject><imageobject><imagedata fileref="images/figu-Component_Reference-toolbar-grid.png"/></imageobject><textobject><phrase>figu-Component_Reference-toolbar-grid</phrase></textobject></inlinemediaobject></simpara>
            </listitem>
            <listitem>
              <simpara><literal>line</literal> shows a vertical line to separate items: <inlinemediaobject><imageobject><imagedata fileref="images/figu-Component_Reference-toolbar-line.png"/></imageobject><textobject><phrase>figu-Component_Reference-toolbar-line</phrase></textobject></inlinemediaobject></simpara>
            </listitem>
            <listitem>
              <simpara><literal>square</literal> shows a small square to separate items: <inlinemediaobject><imageobject><imagedata fileref="images/figu-Component_Reference-toolbar-square.png"/></imageobject><textobject><phrase>figu-Component_Reference-toolbar-square</phrase></textobject></inlinemediaobject></simpara>
            </listitem>
          </itemizedlist>
          <simpara>Alternatively, use the <literal><phrase role="varname">itemSeparator</phrase></literal> attribute to specify a URL to an image. The image is then used as an item separator. The appearance of the item separator can be additionally customized by using the <literal>itemSeparator</literal> facet.</simpara>
        </section>
        <section id="sect-Component_Reference-toolbar-Grouping_items">
          <title>Grouping items</title>
          <simpara>Group together multiple items on the toolbar by using the <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> child component. Refer to <xref linkend="sect-Component_Reference-Menus_and_toolbars-toolbarGroup"/> for full details on the <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-toolbar-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Toolbar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIToolbar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Toolbar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ToolbarRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-toolbar-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="toolbar-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="5">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tb</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the toolbar itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerWeightFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-weight</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tb-itm</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an item in the toolbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tb-sep</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a separator in the toolbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tb-sep-grid</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-tb-sep-line</literal>:: <literal>.rf-tb-sep-disc</literal>:: <literal>.rf-tb-sep-square</literal>:: These classes define styles for grid, line, disc, and square separators.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tb-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the container of the toolbar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
        <section id="sect-Component_Reference-Menus_and_toolbars-toolbarGroup">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase>
            </literal>
          </title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> component is a child component of the <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> component is used to group a number of items together on a toolbar.</simpara>
          <section id="sect-Component_Reference-toolbarGroup-Basic_usage">
            <title>Basic usage</title>
            <simpara>Like the <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> parent component, the <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> component does not require any extra attributes for basic functionality. Add child components to the <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> component to have them appear grouped on the parent toolbar when rendered.</simpara>
          </section>
          <section id="sect-Component_Reference-toolbarGroup-Appearance">
            <title>Appearance</title>
            <simpara>Similar to the <literal><phrase role="sgmltag">&lt;r:toolbar&gt;</phrase></literal> component, items within a <literal><phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase></literal> can be separated by specifying the <literal><phrase role="varname">itemSeparator</phrase></literal> attribute. Refer to <xref linkend="sect-Component_Reference-toolbar-Appearance"/> for details on using the <literal><phrase role="varname">itemSeparator</phrase></literal> attribute.</simpara>
            <simpara>Groups of toolbar items can be located on either the left-hand side or the right-hand side of the parent toolbar. By default, they appear to the left. To locate the toolbar group to the right of the parent toolbar, set <literal><phrase role="code">location="right"</phrase></literal>.</simpara>
            <example id="exam-Component_Reference-toolbarGroup-toolbarGroup">
              <title>
                <literal>
                  <phrase role="sgmltag">&lt;r:toolbarGroup&gt;</phrase>
                </literal>
              </title>
              <programlisting language="XML" linenumbering="unnumbered">&lt;r:toolBar height="26" itemSeparator="grid"&gt;
   &lt;r:toolBarGroup&gt;
      &lt;h:graphicImage value="/images/icons/create_doc.gif"/&gt;
      &lt;h:graphicImage value="/images/icons/create_folder.gif"/&gt;
      &lt;h:graphicImage value="/images/icons/copy.gif"/&gt;
   &lt;/r:toolBarGroup&gt;
   &lt;r:toolBarGroup&gt;
      &lt;h:graphicImage value="/images/icons/save.gif"/&gt;
      &lt;h:graphicImage value="/images/icons/save_as.gif"/&gt;
      &lt;h:graphicImage value="/images/icons/save_all.gif"/&gt;
   &lt;/r:toolBarGroup&gt;
   &lt;r:toolBarGroup location="right"&gt;
      &lt;h:graphicImage value="/images/icons/find.gif"/&gt;
      &lt;h:graphicImage value="/images/icons/filter.gif"/&gt;
   &lt;/r:toolBarGroup&gt;
&lt;/r:toolBar&gt;
</programlisting>
              <simpara>The example shows how to locate a toolbar group to the right-hand side of the parent toolbar. It also demonstrates how item separators on the parent toolbar work with toolbar groups.</simpara>
              <figure>
                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/figu-Component_Reference-toolbarGroup-toolbarGroup.png"/>
                  </imageobject>
                  <textobject>
                    <phrase>A toolbar using icons. Two toolbar groups are located on the left-hand side of the toolbar and separated by a grid pattern. The third toolbar group is located to the right-hand side.</phrase>
                  </textobject>
                </mediaobject>
              </figure>
            </example>
          </section>
          <section id="sect-Component_Reference-toolbarGroup-Reference_data">
            <title>Reference data</title>
            <itemizedlist>
              <listitem>
                <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ToolbarGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIToolbarGroup</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Toolbar</phrase></literal></simpara>
              </listitem>
              <listitem>
                <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ToolbarGroupRenderer</phrase></literal></simpara>
              </listitem>
            </itemizedlist>
          </section>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Output_and_messages">
      <title>Output and messages</title>
      <simpara>Read this chapter for details on components that display messages and other feedback to the user.</simpara>
      <section id="sect-Component_Reference-Output_and_messages-message">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:message&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component renders a single <literal><phrase role="classname">FacesMessage</phrase></literal> message instance added for the component. The appearance of the message can be customized, and tool-tips can be used for further information about the message.</simpara>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component is rendered in the same way as the standard <literal><phrase role="sgmltag">&lt;h:message&gt;</phrase></literal> component, but allows separate styling of the message summary and detail. It allows unified icons to be set using background images in predefined classes.</simpara>
        <figure id="figu-Component_Reference-message-message_component">
          <title>r:message component</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-message-message_component.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-message-message_component</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-message-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component needs the <literal><phrase role="varname">for</phrase></literal> attribute to point to the <literal><phrase role="varname">id</phrase></literal> identifier of the related component. The message is displayed after the <literal><phrase role="classname">FacesMessage</phrase></literal> message instance is created and added for the client identifier of the related component.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component is automatically rendered after an Ajax request. This occurs without the use of an <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component or a specific reference through the <literal><phrase role="varname">render</phrase></literal> attribute of the Ajax request source.</simpara>
          <example id="exam-Component_Reference-message-message_example">
            <title>r:message example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:outputText value="Zip:" /&gt;
&lt;h:inputText label="Zip" id="zip" required="true"
             value="#{userBean.zip}"&gt;
   &lt;f:validateLength minimum="4" maximum="9" /&gt;
&lt;/h:inputText&gt;
&lt;r:message for="zip" ajaxRendered="true"/&gt;
</programlisting>
            <simpara>The example contains a text input for zip codes. The simple validation requires the entered zip code to be between 4 and 9 characters long. The <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component references the input box, and reports any messages relating to the input validation.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-message-Appearance">
          <title>Appearance</title>
          <simpara>The <literal><phrase role="varname">showSummary</phrase></literal> attribute specifies whether to display only a summary of the full message. The full message can be displayed in a tool-tip when hovering the mouse over the summary.</simpara>
          <simpara>Use CSS (Cascading Style Sheets) to customize the appearance and icon for the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component. To use a custom icon, set the <literal><phrase role="property">background-image</phrase></literal> property to the icon graphic, as shown in <xref linkend="exam-Component_Reference-message-Message_icons"/>. Refer to <xref linkend="sect-Component_Reference-message-Style_classes_and_skin_parameters"/> for a complete list of style classes for the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-message-Message_icons">
            <title>Message icons</title>
            <screen>.rf-msg-err{
   background-image: url('#{facesContext.externalContext.requestContextPath}/images/icons/error.gif');
}
</screen>
            <simpara>The example demonstrates how an icon for an error message could be added using CSS.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-message-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.RichMessage</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIRichMessage</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Message</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MessageRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-message-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="message-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the message itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-err</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an error message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>errorColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-ftl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a fatal message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>errorColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-inf</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an information message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-wrn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a warning message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>warningTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-ok</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a basic <guilabel>OK</guilabel> message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msg-sum</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-msg-det</literal>:: These classes define styles for the summary or details of a message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-messages">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:messages&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> components works similarly to the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component, but can display all the validation messages added for the current view instead of just a single message. Refer to <xref linkend="sect-Component_Reference-Output_and_messages-message"/> for details on the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component.</simpara>
        <figure id="figu-Component_Reference-messages-messages_component">
          <title>r:messages component</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-messages-messages_component.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-messages-messages_component</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-messages-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> component doesn’t require any extra attributes for basic usage. It displays all messages relating to requests from components.</simpara>
          <simpara>To limit the messages to a specific component, use the <literal><phrase role="varname">for</phrase></literal> attribute to reference the component’s identifier.</simpara>
          <simpara>To show only those messages that are not attached to specific components, set <literal><phrase role="code">globalOnly="true"</phrase></literal>.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> component is automatically rendered after an Ajax request. This occurs without the use of an <literal><phrase role="sgmltag">&lt;r:outputPanel&gt;</phrase></literal> component or a specific reference through the <literal><phrase role="varname">render</phrase></literal> attribute of the Ajax request source.</simpara>
        </section>
        <section id="sect-Component_Reference-messages-Appearance">
          <title>Appearance</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> component displays error messages for each validating component in the same container.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:messages&gt;</phrase></literal> component can be further styled through CSS, the same as for the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component. Refer to <xref linkend="sect-Component_Reference-message-Appearance"/> for an example of message styling, and refer to <xref linkend="sect-Component_Reference-messages-Style_classes_and_skin_parameters"/> for a complete list of style classes for the <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal> component.</simpara>
          <simpara>The layout of the messages can also be customized through CSS. By default, the messages are arranged in a block as shown in <xref linkend="figu-Component_Reference-messages-Messages_in_a_block"/>.</simpara>
          <figure id="figu-Component_Reference-messages-Messages_in_a_block">
            <title>Messages in a block</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-messages-Messages_in_a_block.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-messages-Messages_in_a_block</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <simpara>Override the <literal><phrase role="property">display</phrase></literal> property for all CSS message classes to customize the layout as follows:</simpara>
          <variablelist>
            <varlistentry>
              <term>Display messages in a list with no icons</term>
              <listitem>
                <simpara>To display the messages in a list format without the default icons, override the message styles as follows:</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <screen>.rf-msg-err, .rf-msgs-err, .rf-msg-ftl, .rf-msgs-ftl, .rf-msg-inf,
.rf-msgs-inf, .rf-msg-wrn, .rf-msgs-wrn, .rf-msg-ok, .rf-msgs-ok {
   display: list-item;
   margin-left: 20px;
   padding-left: 0px; }

.rf-msg-err, .rf-msgs-err{ background-image:none; }
</screen>
          <figure id="figu-Component_Reference-messages-Messages_in_a_list">
            <title>Messages in a list</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-messages-Messages_in_a_list.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-messages-Messages_in_a_list</phrase>
              </textobject>
            </mediaobject>
          </figure>
          <variablelist>
            <varlistentry>
              <term>Display in-line messages</term>
              <listitem>
                <simpara>To display the messages in line with text, override the message styles as follows:</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <screen>.rf-msg-err, .rf-msgs-err, .rf-msg-ftl, .rf-msgs-ftl, .rf-msg-inf,
.rf-msgs-inf, .rf-msg-wrn, .rf-msgs-wrn, .rf-msg-ok, .rf-msgs-ok { display:inline; }
</screen>
          <figure id="figu-Component_Reference-messages-In-line_messages">
            <title>In-line messages</title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-messages-In-line_messages.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-messages-In-line_messages</phrase>
              </textobject>
            </mediaobject>
          </figure>
        </section>
        <section id="sect-Component_Reference-messages-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.RichMessages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIRichMessages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Messages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.MessagesRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-messages-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="messages-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the message itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-err</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an error message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">errorColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-ftl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a fatal message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">errorColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-inf</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an information message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-wrn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a warning message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">warningTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-ok</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a basic <guilabel>OK</guilabel> message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-msgs-sum</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-msgs-det</literal>:: These classes define styles for the summary or details of a message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-notify">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:notify&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal> component serves for advanced user interaction, using notification boxes to give the user instant feedback on what’s happening within the application. Each time this component is rendered, a floating notification box is displayed in the selected corner of the browser screen.</simpara>
        <section id="sect-Component_Reference-notify-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal> has two message customization attributes: <literal><phrase role="parameter">summary</phrase></literal> is short text summarizing the message, while <literal><phrase role="parameter">detail</phrase></literal> configures the detailed body of the message. Both attributes have their counterparts in form of facets with the same names as the corresponding attributes.</simpara>
        </section>
        <section id="sect-Component_Reference-notify-Customizing_notifications">
          <title>Customizing notifications</title>
          <simpara>A notification appears on the page each time it is rendered, either on full-page or ajax requests. The notification remains on the screen for 8 seconds and then disappears. Users can close the notification with the close button in the top-right corner of the notification.</simpara>
          <simpara>Notification stacks can be used to create sequences. For customization of stacking see the <literal><phrase role="sgmltag">&lt;r:notifyStack&gt;</phrase></literal> component.</simpara>
          <simpara>There are several attributes that can change default behavior:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">sticky</phrase></literal>: notifications does not disappear automatically, they needs to be closed explicitly with close button (this attribute can’t be used together with <literal><phrase role="parameter">nonblocking</phrase></literal> and <literal><phrase role="parameter">stayTime</phrase></literal>)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">stayTime</phrase></literal>: configures how long notification stays on the screen before it disappears (in miliseconds)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">styleClass</phrase></literal>: defines the class customizing the notification</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">nonblocking</phrase></literal>: defines notifications which becomes partially transparent and user can click through. Non-blocking notifications don’t have close button.</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">nonblockingOpacity</phrase></literal>: defines opacity of nonblocking notifications when mouse hovers over notification (decimal number between 0 and 1)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">showShadow</phrase></literal>: defines whether shadow will be displayed under the notification</simpara>
            </listitem>
          </itemizedlist>
          <note>
            <simpara>Nonblocking notifications can be clicked through, but because they are using jQuery mechanism to bypass events, only jQuery event handlers are triggered. IThis means that standard links won’t be triggered.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-notify-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Notify</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UINotify</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Notify</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-notify-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <simpara>Note that skinning is common for <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal></simpara>
          <table id="notify-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for notification</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-shdw</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style of the shadow under notification box.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>headerTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style of the content of notification box.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalBackgroundColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>panelTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style for notification icon.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-sum</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style for notification message summary.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-det</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style for notification message detail.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-cls</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style for element wrapping close button.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-cls-ico</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines style for close button icon.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-notifyMessage">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase>
          </literal>
        </title>
        <section id="sect-Component_Reference-notifyMessage-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> component is built on top of <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>, the difference is in usage. The <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> component displays <literal><phrase role="code">FacesMessage</phrase></literal> s associated with a given component, similar to <literal><phrase role="sgmltag">&lt;r:message&gt;</phrase></literal>: one notification is displayed for first <literal><phrase role="code">FacesMessage</phrase></literal> in the stack that is risen either programatically or during conversion/validation of the component. The severity of the message determines the color and icon of the resulting notification.</simpara>
          <simpara>For customization of notification behavior, please refer to <link linkend="sect-Component_Reference-notify-Customizing_notifications">Customizing notifications</link> of <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-notifyMessage-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HtmlNotifyMessage</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.html.HtmlNotifyMessage</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Message</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyMessageRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-notifyMessage-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <simpara>Note that <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> shares common classes with <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>, since there is exactly one notification rendered for each JSF message.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> specific classes are redefining the look for various message severity levels.</simpara>
          <table id="notifyMessage-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-inf</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for an informative message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalTextColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-wrn</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a warning notifications.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-err</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a error notifications.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-ftl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for a fatal notifications.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>.rf-ntf-inf .rf-ntf-ico</literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-ntf-wrn .rf-ntf-ico</literal>:: <literal>.rf-ntf-err .rf-ntf-ico</literal>:: <literal>.rf-ntf-ftl .rf-ntf-ico</literal>:: These classes define style for notification icon based on severity of notification message.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-notifyMessages">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal> component is the same as the <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> component, but each of the available messages generates one notification.</simpara>
        <simpara><literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal> shares the same set of attributes with <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal></simpara>
        <figure id="figu-Component_Reference-notifyMessages-notifyMessages">
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-notifyMessages-notifyMessages.png" contentwidth="200"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-notifyMessages-notifyMessages</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-notifyMessages-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HtmlNotifyMessages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.html.HtmlNotifyMessages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">javax.faces.Messages</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyMessagesRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-notifyMessages-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <simpara><literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal> shares style classes with <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal>.</simpara>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-notifyStack">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:notifyStack&gt;</phrase>
          </literal>
        </title>
        <simpara>Notifications emited by <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> and <literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal> are displayed in top-right corner of the screen by default.</simpara>
        <simpara>It is <literal><phrase role="sgmltag">&lt;r:notifyStack&gt;</phrase></literal> which defines where messages will appear and handles their stacking.</simpara>
        <simpara>Stack also provides way how to remove messages from screen - when stack is re-rendered, current notifications are destroyed, freeing place for new notifications.</simpara>
        <section id="sect-Component_Reference-notifyStack-Basic_usage">
          <title>Basic usage</title>
          <simpara>They are three alternative ways to bind notifications with a stack:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><emphasis>wrapping</emphasis>: nesting <literal><phrase role="sgmltag">&lt;r:notify&gt;</phrase></literal>, <literal><phrase role="sgmltag">&lt;r:notifyMessage&gt;</phrase></literal> or <literal><phrase role="sgmltag">&lt;r:notifyMessages&gt;</phrase></literal> binds notifications with the stack in which they are wrapped</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>binding by id</emphasis>: notification can be bound directly to a stack using it’s <literal><phrase role="code">componentId</phrase></literal> in the <literal><phrase role="parameter">stack</phrase></literal> attribute</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>using default stack</emphasis>: a default stack is used when no other binding is defined for a given notification</simpara>
            </listitem>
          </itemizedlist>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:notifyStack position="bottomRight"&gt;
    &lt;r:notifyMessages /&gt;
&lt;/r:notifyStack&gt;</programlisting>
          <simpara>The sample above defines the stack explicitly, where notifications use the stack in which they are wrapped.</simpara>
          <simpara>The sample bellow uses a notification rendered into the top-left corner of the screen. The notification is bound to a stack using it’s id.</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:notifyStack id="leftStack" position="topLeft" /&gt;

&lt;r:notify stack="leftStack" /&gt;</programlisting>
        </section>
        <section id="sect-Component_Reference-notifyStack-Positioning_notifications">
          <title>Positioning notifications</title>
          <simpara>To redefine the position of a notification, one needs to define a stack and bind it with the given notification.</simpara>
          <simpara><literal><phrase role="sgmltag">&lt;r:notifyStack&gt;</phrase></literal> uses the <literal><phrase role="parameter">position</phrase></literal> attribute to place the stack and it’s notifications into one of four corners: <literal><phrase role="code">topRight</phrase></literal> (default), <literal><phrase role="code">bottomRight</phrase></literal>, <literal><phrase role="code">bottomLeft</phrase></literal>, <literal><phrase role="code">topLeft</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-notifyStack-Stacking_notifications">
          <title>Stacking notifications</title>
          <simpara>There are two attributes which influences how notifications are placed into a stack:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">method</phrase></literal>: defines where new notifications are placed and how they are removed. Options: <literal><phrase role="code">first</phrase></literal> (default), <literal><phrase role="code">last</phrase></literal>.
<literal><phrase role="parameter">direction</phrase></literal>: defines in which direction will be messages stacked. Options: <literal><phrase role="code">vertical</phrase></literal> (default), <literal><phrase role="code">horizontal</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
          <simpara>The following sample shows a stack which will place new notifications up front - the incoming message will appear first, causing all notifications currently in stack to shift. Subsequently, messages at the end of stack will be then removed.</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:notifyStack method="first" /&gt;</programlisting>
          <simpara>On the other hand, stacking method <literal><phrase role="code">last</phrase></literal> provides a method to place messages on the end of the stack, and when removing a notification, it is removed from the start, causing all other notifications to shift.</simpara>
        </section>
        <section id="sect-Component_Reference-notifyStack-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyStack</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UINotifyStack</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyStack</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.NotifyStackRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-notifyStack-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="notifyStack-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-pos-tl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines where top-left stack of notification will be positioned</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-pos-tr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines where top-right stack of notification will be positioned</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-pos-bl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines where bottom-left stack of notification will be positioned</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-ntf-pos-br</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines where bottom-right stack of notification will be positioned</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-progressBar">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:progressBar&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component displays a progress bar to indicate the status of a process to the user. It can update either through Ajax or on the client side, and the look and feel can be fully customized.</simpara>
        <figure id="figu-Component_Reference-progressBar-progressBar">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:progressBar&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-progressBar-progressBar.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-progressBar-progressBar</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-progressBar-Basic_usage">
          <title>Basic usage</title>
          <simpara>Basic usage of the <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component requires the <literal><phrase role="varname">value</phrase></literal> attribute, which points to the property that holds the current progress value. When the value is greater than or equal to the minimum value ( <literal>0</literal> by default), the progress bar becomes active, and starts sending Ajax requests if in <literal>ajax</literal> mode.</simpara>
          <example id="exam-Component_Reference-progressBar-Basic_usage">
            <title>Basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:progressBar value="#{bean.incValue}" /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-progressBar-Customizing_the_appearance">
          <title>Customizing the appearance</title>
          <simpara>By default, the minimum value of the progress bar is <literal>0</literal> and the maximum value of the progress bar is <literal>100</literal>. These values can be customized using the <literal><phrase role="varname">minValue</phrase></literal> and <literal><phrase role="varname">maxValue</phrase></literal> attributes respectively.</simpara>
          <simpara>The progress bar can be labeled in one of two ways:</simpara>
          <variablelist>
            <varlistentry>
              <term>Using the <literal><phrase role="varname">label</phrase></literal>  attribute</term>
              <listitem>
                <simpara>The content of the <literal><phrase role="varname">label</phrase></literal> attribute is displayed over the progress bar.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <example id="exam-Component_Reference-progressBar-Using_the_label_attribute">
            <title>Using the <literal><phrase role="varname">label</phrase></literal> attribute</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:progressBar value="#{bean.incValue}" id="progrs" label="#{bean.incValue} % complete"/&gt;
</programlisting>
          </example>
          <variablelist>
            <varlistentry>
              <term>Using nested child components</term>
              <listitem>
                <simpara>Child components, such as the JSF <literal><phrase role="sgmltag">&lt;h:outputText&gt;</phrase></literal> component, can be nested in the <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component to display over the progress bar.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <example id="exam-Component_Reference-progressBar-Using_nested_child_components">
            <title>Using nested child components</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:progressBar value="#{bean.incValue}"&gt;
    &lt;h:outputText value="#{bean.incValue} % complete"/&gt;
&lt;/r:progressBar&gt;
</programlisting>
          </example>
          <simpara>Define the <literal>initial</literal> and <literal>finish</literal> facets to customize the progress bar’s appearance before progress has started and after progress has finished. When the current progress bar value is less than the minimum value, the <literal>initial</literal> facet is displayed. When the current progress bar is greater than the maximum value, the <literal>finish</literal> facet is displayed.</simpara>
          <example id="exam-Component_Reference-progressBar-Initial_and_complete_states">
            <title>Initial and finished states</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:progressBar value="#{bean.incValue1}"&gt;
    &lt;f:facet name="initial"&gt;
        &lt;h:outputText value="Process has not started"/&gt;
    &lt;/f:facet&gt;
    &lt;f:facet name="finish"&gt;
        &lt;h:outputText value="Process has completed"/&gt;
    &lt;/f:facet&gt;
&lt;/r:progressBar&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-progressBar-Update_mode">
          <title>Update mode</title>
          <simpara>The mode for updating the progress bar is determined by the <literal><phrase role="varname">mode</phrase></literal> attribute, which can have one of the following values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>The progress bar updates in the same way as the <literal><phrase role="sgmltag">&lt;r:poll&gt;</phrase></literal> component. The <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component repeatedly polls the server for the current progress value.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>The progress bar must be explicitly updated on the client side through the JavaScript API.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-progressBar-Using_set_intervals">
          <title>Using set intervals</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component can be set to constantly poll for updates at a constant interval. Use the <literal><phrase role="varname">interval</phrase></literal> component to set the interval in milliseconds. The progress bar is updated whenever the polled value changes. Polling is only active when the <literal><phrase role="varname">enabled</phrase></literal> attribute is set to <literal>true</literal>.</simpara>
          <example id="exam-Component_Reference-progressBar-Using_set_intervals">
            <title>Using set intervals</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:progressBar value="#{bean.incValue1}" id="progress" interval="900" enabled="#{bean.enabled1}"/&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-progressBar-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:progressBar&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the current value displayed on the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">setValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Set the current value to display on the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getMinValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the minimum value for the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">getMaxValue()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Return the maximum value for the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">disable()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Disables the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">enable()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Enables the progress bar.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">isEnabled()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Returns a boolean value indicating whether the progress bar is enabled.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-progressBar-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ProgressBar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIProgressBar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.ProgressBar</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.ProgressBarRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-progressBar-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="progressBar-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pb-lbl</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for labels on the progress bar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="1">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pb-prgs</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the progressed portion of the progress bar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">panelBorderColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">selectControlColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">background-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-pb-init</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara><literal>.rf-pb-fin</literal>:: These classes define styles for the initial state and finished state.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalTextColor</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalFamilyFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="parameter">generalSizeFont</phrase>
                      </literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
      <section id="sect-Component_Reference-Output_and_messages-tooltip">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:tooltip&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component provides an informational tool-tip. The tool-tip can be attached to any control and is displayed when hovering the mouse cursor over the control.</simpara>
        <figure id="figu-Component_Reference-tooltip-tooltip">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:tooltip&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-toolTip-toolTip.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-toolTip-toolTip</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-tooltip-Basic_usage">
          <title>Basic usage</title>
          <simpara>For basic usage, define the tool-tip text using the <literal><phrase role="varname">value</phrase></literal> attribute. The <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component is then automatically attached to the parent element, and is usually shown when the mouse cursor hovers.</simpara>
          <simpara>Alternatively, the content of the tool-tip can be defined inside the <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> tags, and the <literal><phrase role="varname">value</phrase></literal> attribute is not used. This allows HTML tags to be used to define the content, and provides for rich content such as images, links, buttons, and other RichFaces components.</simpara>
          <example id="exam-Component_Reference-tooltip-Defining_tool-tip_content">
            <title>Defining tool-tip content</title>
            <variablelist>
              <varlistentry>
                <term>Basic content</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel&gt;
    &lt;r:tooltip value="This is a tool-tip."/&gt;
&lt;/r:panel&gt;
</programlisting>
            <variablelist>
              <varlistentry>
                <term>Rich content</term>
                <listitem>
</listitem>
              </varlistentry>
            </variablelist>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel&gt;
    &lt;r:tooltip&gt;
        This is a &lt;b&gt;tool-tip&lt;/b&gt;.
    &lt;/r:tooltip&gt;
&lt;/r:panel&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-tooltip-Attaching_the_tool-tip_to_another_component">
          <title>Attaching the tool-tip to another component</title>
          <simpara>If not otherwise specified, the tool-tip is attached to the parent element in which it is defined. The <literal><phrase role="varname">target</phrase></literal> attribute is used to attach the tool-tip to another component, pointing to the target component’s <literal><phrase role="varname">id</phrase></literal> identifier. This allows the <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component to be specified outside the target element. This approach is demonstrated in <xref linkend="exam-Component_Reference-tooltip-Attaching_the_tool-tip"/>.</simpara>
          <example id="exam-Component_Reference-tooltip-Attaching_the_tool-tip">
            <title>Attaching the tool-tip</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel id="panelId"&gt;
...
&lt;/r:panel&gt;

&lt;r:tooltip value="This is a tool-tip." target="panelId"/&gt;
</programlisting>
          </example>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component can alternatively be left unattached, and is instead invoked through an event handler on the target component. To leave the <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component unattached, set <literal><phrase role="code">attached="false"</phrase></literal>, and define the event handler to trigger the tool-tip on the target component. This approach is demonstrated in <xref linkend="exam-Component_Reference-tooltip-Unattached_tool-tips"/>. When leaving the <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component unattached, ensure it has an <literal><phrase role="varname">id</phrase></literal> identifier defined. If it is defined outside the target element, it must be nested in an <literal><phrase role="sgmltag">&lt;h:form&gt;</phrase></literal> component.</simpara>
          <example id="exam-Component_Reference-tooltip-Unattached_tool-tips">
            <title>Unattached tool-tips</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:panel id="panelId" onclick="#{r:component('tooltipId')}.show(event);" /&gt;

&lt;h:form&gt;
    &lt;r:tooltip id="toolTipId" attached="false" value="This is a tool-tip."/&gt;
&lt;/h:form&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-tooltip-Appearance">
          <title>Appearance</title>
          <simpara>By default, the <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component is positioned intelligently based on the position of the mouse cursor. Use the <literal><phrase role="varname">jointPoint</phrase></literal> attribute to specify a corner of the target component at which to display the tool-tip instead, and use the <literal><phrase role="varname">direction</phrase></literal> attribute to specify the direction the tool-tip will appear relative to that corner. Possible values for both attributes are <literal>top-left</literal>, <literal>top-right</literal>, <literal>bottom-left</literal>, and <literal>bottom-right</literal>. Use the <literal><phrase role="varname">horizontalOffset</phrase></literal> and <literal><phrase role="varname">verticalOffset</phrase></literal> attributes to specify the horizontal offset and vertical offset at which to display the tool-tip.</simpara>
          <simpara>Use the <literal><phrase role="varname">showEvent</phrase></literal> attribute to specify when the tool-tip is shown. By default it appears when the attached component is hovered-over with the mouse. Use the <literal><phrase role="varname">hideEvent</phrase></literal> attribute to specify when the tool-tip is hidden. The default value is <literal>none</literal>, so the tool-tip remains shown. However, it can be linked to an event on the target component, such as the <literal>mouseout</literal> event.</simpara>
          <simpara>Set <literal><phrase role="code">followMouse="true"</phrase></literal> to cause the tool-tip to follow the user’s mouse movements.</simpara>
          <simpara>Advanced appearance features are demonstrated in <xref linkend="exam-Component_Reference-tooltip-Advanced_tool-tip_usage"/>.</simpara>
        </section>
        <section id="sect-Component_Reference-tooltip-Update_mode">
          <title>Update mode</title>
          <simpara>The mode for updating the tool-tip is determined by the <literal><phrase role="varname">mode</phrase></literal> attribute, which can have one of the following values:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>ajax</literal>
              </term>
              <listitem>
                <simpara>The tool-tip content is requested from the server with every activation.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>client</literal>
              </term>
              <listitem>
                <simpara>The tool-tip content is rendered once on the server. An external submit causes the content to re-render.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <simpara>When using <literal><phrase role="code">mode="ajax"</phrase></literal>, define the <literal>loading</literal> facet. The tool-tip displays the content of the <literal>loading</literal> facet while loading the actual content from the server.</simpara>
          <example id="exam-Component_Reference-tooltip-Advanced_tool-tip_usage">
            <title>Advanced tool-tip usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:commandLink value="Simple Link" id="link"&gt;
    &lt;r:tooltip followMouse="true" direction="topRight" mode="ajax" value="#{bean.toolTipContent}"
                  horizontalOffset="5" verticalOffset="5" layout="block"&gt;
        &lt;f:facet name="loading"&gt;
            &lt;f:verbatim&gt;Loading...&lt;/f:verbatim&gt;
        &lt;/f:facet&gt;
    &lt;/r:tooltip&gt;
&lt;/h:commandLink&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-tooltip-tooltip_client-side_events">
          <title><literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> client-side events</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component supports the following client-side events:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>click</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the tool-tip is clicked with the mouse.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>dblclick</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the tool-tip is double-clicked with the mouse.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>mouseout</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the mouse cursor leaves the tool-tip.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>mousemove</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the mouse cursor moves over the tool-tip.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>mouseover</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the mouse cursor hovers over the tool-tip.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>show</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the tool-tip is shown.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>complete</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the tool-tip is completed.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>hide</literal>
              </term>
              <listitem>
                <simpara>This event is activated when the tool-tip is hidden.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tooltip-JavaScript_API">
          <title>JavaScript API</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:tooltip&gt;</phrase></literal> component can be controlled through the JavaScript API. The JavaScript API provides the following functions:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">show(event)</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Show the tool-tip.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="function">hide()</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>Hide the tool-tip.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-tooltip-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tooltip</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UITooltip</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Tooltip</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.TooltipRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-tooltip-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="tooltip-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tool-tip itself.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tt-loading</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tool-tip when it is loading.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tt-cnt</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the tool-tip content.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top" namest="col_2" nameend="col_3">
                    <simpara>No skin parameters.</simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top" morerows="2">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-tt-cntr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class defines styles for the progressed portion of the progress bar.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>tipBorderColor</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">border-color</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalFamilyFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-family</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
                <row>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>generalSizeFont</literal>
                    </simpara>
                  </entry>
                  <entry align="left" valign="top">
                    <simpara>
                      <literal>
                        <phrase role="property">font-size</phrase>
                      </literal>
                    </simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Drag_and_drop">
      <title>Drag and drop</title>
      <simpara>Read this chapter for details on adding drag and drop support to controls.</simpara>
      <section id="sect-Component_Reference-Drag_and_drop-dragSource">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dragSource&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component can be added to a component to indicate it is capable of being dragged by the user. The dragged item can then be dropped into a compatible drop area, designated using the <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component.</simpara>
        <section id="sect-Component_Reference-dragSource-Basic_usage">
          <title>Basic usage</title>
          <simpara>To add drag support to a component, attach the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component as a child element.</simpara>
          <simpara>The <literal><phrase role="varname">type</phrase></literal> attribute must be specified, and can be any identifying string. Dragged items can only be dropped in drop zones where the <literal><phrase role="varname">type</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component is listed in the <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component.</simpara>
        </section>
        <section id="sect-Component_Reference-dragSource-Dragging_an_object">
          <title>Dragging an object</title>
          <simpara>Use the <literal><phrase role="varname">dragIndicator</phrase></literal> parameter to customize the appearance of a dragged object while it is being dragged. The <literal><phrase role="varname">dragIndicator</phrase></literal> parameter must point to the <literal><phrase role="varname">id</phrase></literal> identifier of a <literal><phrase role="sgmltag">&lt;r:dragIndicator&gt;</phrase></literal> component. If the <literal><phrase role="varname">dragIndicator</phrase></literal> attribute is not defined, the drag indicator appears as a clone of the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component’s parent control.</simpara>
          <simpara>To bind data to the dragged object, use the <literal><phrase role="varname">dragValue</phrase></literal> attribute. The <literal><phrase role="varname">dragValue</phrase></literal> attribute specifies a server-side object, which is then bound to the parent component when it is dragged. This facilitates handling event data during a drop event.</simpara>
        </section>
        <section id="sect-Component_Reference-dragSource-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragSource</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDragSource</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragSource</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragSourceRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Drag_and_drop-dropTarget">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component can be added to a component so that the component can accept dragged items. The dragged items must be defined with a compatible drop type for the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component.</simpara>
        <section id="sect-Component_Reference-dropTarget-Basic_usage">
          <title>Basic usage</title>
          <simpara>To allow dragged items to be dropped on a component, attach the <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component as a child element to the component.</simpara>
          <simpara>The <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute must be specified. The <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute is a comma-separated list of strings that match the types of dragged items. Dragged items can only be dropped in drop zones where the <literal><phrase role="varname">type</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component is listed in the <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute of the <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component.</simpara>
          <simpara>The <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute can optionally be set to either <literal>@none</literal> or <literal>@all</literal>. If set to <literal>@none</literal>, the component will not accept any type of dropped object. If set to <literal>@all</literal>, the component accepts all dropped objects. If the <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute is not specified, the default value is <literal>null</literal>, which is the same as a <literal>@none</literal> setting.</simpara>
        </section>
        <section id="sect-Component_Reference-dropTarget-Handling_dropped_data">
          <title>Handling dropped data</title>
          <simpara>To provide additional parameters for the server-side drop event, use the <literal><phrase role="varname">dropValue</phrase></literal> attribute.</simpara>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component raises the <literal><phrase role="varname">DropEvent</phrase></literal> server-side event when an object is dropped. The event uses the following parameters:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="parameter">dragSource</phrase></literal> identifies the component being dragged (the parent of the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component).</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="parameter">dragValue</phrase></literal> parameter is the content of the <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component’s <literal><phrase role="varname">dragValue</phrase></literal> attribute.</simpara>
            </listitem>
            <listitem>
              <simpara>The <literal><phrase role="parameter">dropValue</phrase></literal> parameter is the content of the <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component’s <literal><phrase role="varname">dropValue</phrase></literal> attribute.</simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dropTarget-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropTarget</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDropTarget</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropTarget</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DropTargetRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.DropHandler</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dropTarget-Style_classes">
          <title>Style classes</title>
          <variablelist id="dropTarget-Style_classes">
            <title>Style classes (selectors)</title>
            <varlistentry>
              <term>
                <literal>.rf-drp-hvr</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the drop target when a dragged item is hovering over it.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-drp-hlight</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for a highlighted drop target.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
      <section id="sect-Component_Reference-Drag_and_drop-dragIndicator">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:dragIndicator&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:dragIndicator&gt;</phrase></literal> component defines a graphical element to display under the mouse cursor during a drag-and-drop operation.</simpara>
        <section id="sect-Component_Reference-dragIndicator-Basic_usage">
          <title>Basic usage</title>
          <simpara>To use a drag indicator, define the inner content that appears during a drag event. No additional attributes are required. If a drag indicator is not used, a clone of the drag source is used instead.</simpara>
        </section>
        <section id="sect-Component_Reference-dragIndicator-Styling_the_indicator">
          <title>Styling the indicator</title>
          <simpara>The drag indicator can be styled depending on the current state of the dragged element. There are three attributes for different states. The attributes reference the CSS class to use for styling the drag indicator when the dragged element is in the relevant state.</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">acceptClass</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">acceptClass</phrase></literal> attribute specifies the style when the dragged element is over an acceptable drop target. It indicates that the <literal><phrase role="varname">type</phrase></literal> attribute of the element’s <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component matches <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute of the drop target’s <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">rejectClass</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">rejectClass</phrase></literal> attribute specifies the style when the dragged element is over a drop target that is not acceptable. It indicates that the <literal><phrase role="varname">type</phrase></literal> attribute of the element’s <literal><phrase role="sgmltag">&lt;r:dragSource&gt;</phrase></literal> component is not found in the <literal><phrase role="varname">acceptedTypes</phrase></literal> attribute of the drop target’s <literal><phrase role="sgmltag">&lt;r:dropTarget&gt;</phrase></literal> component.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>
                  <phrase role="varname">draggingClass</phrase>
                </literal>
              </term>
              <listitem>
                <simpara>The <literal><phrase role="varname">draggingClass</phrase></literal> attribute specifies the style when the dragged element is being dragged. It indicates that the dragged element is not over a drop target.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-dragIndicator-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragIndicator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIDragIndicator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragIndicator</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.DragIndicatorRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-dragIndicator-Style_classes">
          <title>Style classes</title>
          <variablelist id="dragIndicator-Style_classes">
            <title>Style classes (selectors)</title>
            <varlistentry>
              <term>
                <literal>.rf-ind</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the drag indicator.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-ind-drag.accept</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the indicator when it is over an acceptable drop target.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-ind-drag.reject</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the indicator when it is over an unacceptable drop target.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>.rf-ind-drag.default</literal>
              </term>
              <listitem>
                <simpara>This class defines styles for the indicator when it is being dragged, and is not over any drop targets.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Layout_and_appearance">
      <title>Layout and appearance</title>
      <simpara>Read this chapter to alter the layout and appearance of web applications using special components.</simpara>
      <section id="sect-Component_Reference-Layout_and_appearance-jQuery">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:jQuery&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> component applies styles and custom behavior to both <acronym>JSF</acronym> (JavaServer Faces) objects and regular <acronym>DOM</acronym> (Document Object Model) objects. It uses the jQueryJavaScript framework to add functionality to web applications.</simpara>
        <section id="sect-Component_Reference-jQuery-Basic_usage">
          <title>Basic usage</title>
          <simpara>The query triggered by the <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> component is specified using the <literal><phrase role="varname">query</phrase></literal> attribute.</simpara>
          <simpara>With the query defined, the component is used to trigger the query as either a timed queryor a named query. The query can be bound to an event to act as an event handler. These different approaches are covered in the following sections.</simpara>
        </section>
        <section id="sect-Component_Reference-jQuery-Defining_a_selector">
          <title>Defining a selector</title>
          <simpara>Any objects or lists of objects used in the query are specified using the <literal><phrase role="varname">selector</phrase></literal> attribute. The <literal><phrase role="varname">selector</phrase></literal> attribute references objects using the following method:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>The <literal><phrase role="varname">selector</phrase></literal> attribute can refer to the elements by using syntax of the jQuery Selectors (a superset of CSS selectors defined by W3C consortium) and additionally it expands JSF component IDs to client-side IDs (see the VDL documentation for the <literal><phrase role="varname">selector</phrase></literal> attribute).</simpara>
            </listitem>
            <listitem>
              <simpara>If the <literal><phrase role="varname">selector</phrase></literal> attribute does not match the <literal><phrase role="varname">id</phrase></literal> identifier attribute of any JSF components or clients on the page, it instead uses syntax defined by the World Wide Web Consortium (W3C)for the <acronym>CSS</acronym> rule selector.
Refer to the syntax specification at <ulink url="http://api.jquery.com/category/selectors/">http://api.jquery.com/category/selectors/</ulink> for full details.</simpara>
            </listitem>
          </itemizedlist>
          <simpara>Because the <literal><phrase role="varname">selector</phrase></literal> attribute can be either an <literal><phrase role="varname">id</phrase></literal> identifier attribute or CSS selector syntax, conflicting values could arise. <xref linkend="exam-Component_Reference-jQuery-Avoiding_syntax_confusion"/> demonstrates how to use double backslashes to escape colon characters in <literal><phrase role="varname">id</phrase></literal> identifier values.</simpara>
          <example id="exam-Component_Reference-jQuery-Avoiding_syntax_confusion">
            <title>Avoiding syntax confusion</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form id="form"&gt;
    &lt;h:panelGrid id="menu"&gt;
        &lt;h:graphicImage value="pic1.jpg" /&gt;
        &lt;h:graphicImage value="pic2.jpg" /&gt;
    &lt;/h:panelGrid&gt;
&lt;/h:form&gt;
</programlisting>
            <simpara>The <literal><phrase role="varname">id</phrase></literal> identifier for the <literal><phrase role="sgmltag">&lt;h:panelGrid&gt;</phrase></literal> element is <literal>form:menu</literal>, which can conflict with CSS selector syntax. Double backslashes can be used to escape the colon character such that the identifier is read correctly instead of being interpreted as CSS selector syntax.</simpara>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:jQuery selector="#form\\:menu img" query="..." /&gt;
</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-jQuery-Event_handlers">
          <title>Event handlers</title>
          <simpara>Queries set as event handlers are triggered when the component specified in the <literal><phrase role="varname">selector</phrase></literal> attribute raises an event. The query is bound to the event defined using the <literal><phrase role="varname">event</phrase></literal> attribute.</simpara>
          <simpara>Use the <literal><phrase role="varname">attachType</phrase></literal> attribute to specify how the event-handling queries are attached to the events:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>bind</literal>
              </term>
              <listitem>
                <simpara>This is the default for attaching queries to events. The event handler is bound to all elements currently defined by the <literal><phrase role="varname">selector</phrase></literal> attribute.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>live</literal>
              </term>
              <listitem>
                <simpara>The event handler is bound to all current and future elements defined by the <literal><phrase role="varname">selector</phrase></literal> attribute.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>one</literal>
              </term>
              <listitem>
                <simpara>The event handler is bound to all elements currently defined by the <literal><phrase role="varname">selector</phrase></literal> attribute. After the first invocation of the event, the event handler is unbound such that it no longer fires when the event is raised.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
        </section>
        <section id="sect-Component_Reference-jQuery-Timed_queries">
          <title>Timed queries</title>
          <simpara>Timed queries are triggered at specified times. This can be useful for calling simple methods when a page is rendered, or for adding specific functionality to an element. Use the <literal><phrase role="varname">timing</phrase></literal> attribute to specify the point at which the timed query is triggered:</simpara>
          <variablelist>
            <varlistentry>
              <term>
                <literal>domready</literal>
              </term>
              <listitem>
                <simpara>This is the default behavior. The query is triggered when the document is loaded and the DOM is ready. The query is called as a <literal><phrase role="methodname">jQuery()</phrase></literal> function.</simpara>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>
                <literal>immediate</literal>
              </term>
              <listitem>
                <simpara>The query is triggered immediately. The query is called as an in-line script.</simpara>
              </listitem>
            </varlistentry>
          </variablelist>
          <example id="exam-Component_Reference-jQuery-jQuery_example">
            <title><literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> example</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:dataTable id="customList" ... &gt;
   ...
&lt;/r:dataTable&gt;

&lt;r:jQuery selector="#customList tr:odd" timing="domready" query="addClass(odd)" /&gt;
</programlisting>
            <simpara>In the example, the selector picks out the odd <literal><phrase role="sgmltag">&lt;tr&gt;</phrase></literal> elements that are children of the element with an <literal><phrase role="code">id="customlist"</phrase></literal> attribute. The query <literal><phrase role="code">addClass(odd)</phrase></literal> is then performed on the selection during page loading ( <literal>load</literal>) such that the <literal>odd</literal> CSS class is added to the selected elements.</simpara>
            <figure>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/Component_Reference-jQuery-jQuery_example.png" contentwidth="with every odd row colored."/>
                </imageobject>
                <textobject>
                  <phrase>A table highlighted in a "zebra" fashion</phrase>
                </textobject>
              </mediaobject>
            </figure>
          </example>
        </section>
        <section id="sect-Component_Reference-jQuery-Named_queries">
          <title>Named queries</title>
          <simpara>Named queries are given a name such that they can be triggered by other functions or handlers. Use the <literal><phrase role="varname">name</phrase></literal> attribute to name the query. The query can then be accessed as though it were a JavaScript function using the specified <literal><phrase role="varname">name</phrase></literal> attribute as the function name.</simpara>
          <simpara>Calls to the function must pass a direct reference ( <literal>this</literal>) to the calling object as a parameter. This is treated the same as an item defined through the <literal><phrase role="varname">selector</phrase></literal> attribute.</simpara>
          <simpara>If the function requires extra parameters itself, these are provided in JavaScript Object Notation (JSON) syntax as a second parameter in the JavaScript call. The <literal>options</literal> namespace is then used in the <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> query to access the passed function parameters. <xref linkend="exam-Component_Reference-jQuery-Calling_a_jQuery_component_as_a_function"/> demonstrates the use of the <literal><phrase role="varname">name</phrase></literal> attribute and how to pass function parameters through the JavaScript calls.</simpara>
          <example id="exam-Component_Reference-jQuery-Calling_a_jQuery_component_as_a_function">
            <title>Calling a <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> component as a function</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:graphicImage width="50" value="/images/price.png" onmouseover="enlargePic(this, {pwidth:'60px'})" onmouseout="releasePic(this)"  /&gt;
&lt;h:graphicImage width="50" value="/images/discount.png" onmouseover="enlargePic(this, {pwidth:'100px'})" onmouseout="releasePic(this)"  /&gt;
...
&lt;r:jQuery name="enlargePic" query="animate({width:options.pwidth})" /&gt;
&lt;r:jQuery name="releasePic" query="animate({width:'50px'})"/&gt;
</programlisting>
            <simpara>The example enlarges the images when the mouse moves over them. The <literal>enlargePic</literal> and <literal>releasePic</literal> components are called like ordinary JavaScript functions from the image elements.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-jQuery-Dynamic_rendering">
          <title>Dynamic rendering</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> component applies style and behavioral changes to DOM objects dynamically. As such, changes applied during an Ajax response are overwritten, and will need to be re-applied once the Ajax response is complete.</simpara>
          <simpara>Any timed queries with the <literal><phrase role="varname">timing</phrase></literal> attribute set to <literal>domready</literal> may not update during an Ajax response, as the DOM document is not completely reloaded. To ensure the query is re-applied after an Ajax response, include the <literal><phrase role="varname">name</phrase></literal> attribute in the <literal><phrase role="sgmltag">&lt;r:jQuery&gt;</phrase></literal> component and invoke it using JavaScript from the <literal><phrase role="varname">complete</phrase></literal> event attribute of the component that triggered the Ajax interaction.</simpara>
        </section>
        <section id="sect-Component_Reference-jQuery-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.JQuery</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIJQuery</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.JQuery</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.JQueryRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Functions">
      <title>Functions</title>
      <simpara>Read this chapter for details on special functions for use with particular components. Using JavaServer Faces Expression Language ( <acronym>JSF</acronym>[acronym]EL), these functions can be accessed through the <literal><phrase role="varname">data</phrase></literal> attribute of components. Refer to <xref linkend="sect-Component_Reference-Events_and_JavaScript_interactions-data"/> for details on the <literal><phrase role="varname">data</phrase></literal> attribute.</simpara>
      <section id="sect-Component_Reference-Functions-clientId">
        <title>
          <literal>
            <phrase role="function">r:clientId</phrase>
          </literal>
        </title>
        <simpara>The [function]<literal>r:clientId('id')</literal> function returns the client identifier related to the passed component identifier ( [code]<literal>'id'</literal>). If the specified component identifier is not found, <literal>null</literal> is returned instead.</simpara>
      </section>
      <section id="sect-Component_Reference-Functions-component">
        <title>
          <literal>
            <phrase role="function">r:component</phrase>
          </literal>
        </title>
        <simpara>The [function]<literal>r:component('id')</literal> function is equivalent to the [code]<literal>RichFaces.$('clientId')</literal> code. It returns the client object instance based on the passed server-side component identifier ( [code]<literal>'id'</literal>). If the specified component identifier is not found, <literal>null</literal> is returned instead. The function can be used to get an object from a component to call a JavaScript API function without using the <literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> component.</simpara>
      </section>
      <section id="sect-Component_Reference-Functions-element">
        <title>
          <literal>
            <phrase role="function">r:element</phrase>
          </literal>
        </title>
        <simpara>The [function]<literal>r:element('id')</literal> function is a shortcut for the equivalent [code]<literal>document.getElementById(#{r:clientId('id')})</literal> code. It returns the element from the client, based on the passed server-side component identifier. If the specified component identifier is not found, <literal>null</literal> is returned instead.</simpara>
      </section>
      <section id="sect-Component_Reference-Functions-jquery">
        <title>
          <literal>
            <phrase role="function">r:jQuery</phrase>
          </literal>
        </title>
        <simpara>The [function]<literal>r:jQuery('id')</literal> function is a shortcut for the equivalent [code]<literal>jQuery('##{r:clientId('id')})</literal> code. It returns the jQuery object for the element located by the passed server-side component identifier. If the specified component identifier is not found, <literal>null</literal> is returned instead.</simpara>
      </section>
      <section id="sect-Component_Reference-Functions-findComponent">
        <title>
          <literal>
            <phrase role="function">r:findComponent</phrase>
          </literal>
        </title>
        <simpara>The [function]<literal>r:findComponent('id')</literal> function returns the a UIComponent instance of the passed component identifier. If the specified component identifier is not found, <literal>null</literal> is returned instead.</simpara>
        <example id="exam-Component_Reference-findComponent-findComponent_example">
          <title><literal><phrase role="function">r:findComponent</phrase></literal> example</title>
          <programlisting language="XML" linenumbering="unnumbered">&lt;h:inputText id="myInput"&gt;
   &lt;r:support event="keyup" render="outtext"/&gt;
&lt;/h:inputText&gt;
&lt;h:outputText id="outtext" value="#{r:findComponent('myInput').value}" /&gt;
</programlisting>
        </example>
      </section>
      <section id="sect-Component_Reference-Functions-isUserInRole">
        <title>
          <literal>
            <phrase role="function">r:isUserInRole</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="function">r:isUserInRole(Object)</phrase></literal> function checks whether the logged-in user belongs to a certain user role, such as being an administrator. User roles are defined in the <literal><phrase role="filename">web.xml</phrase></literal> settings file.</simpara>
        <example id="exam-Component_Reference-isUserInRole-isUserInRole_example">
          <title><literal><phrase role="function">r:isUserInRole</phrase></literal> example</title>
          <simpara>The <literal><phrase role="function">r:isUserInRole(Object)</phrase></literal> function can be used in conjunction with the <literal><phrase role="varname">rendered</phrase></literal> attribute of a component to only display certain controls to authorized users.</simpara>
          <programlisting language="XML" linenumbering="unnumbered">&lt;r:editor value="#{bean.text}" rendered="#{r:isUserInRole('admin')}"/&gt;
</programlisting>
        </example>
      </section>
    </chapter>
    <chapter id="chap-Component_Reference-Functionality_extension">
      <title>Functionality extension</title>
      <simpara>Read this chapter for details on miscellaneous components that provide extended functionality to web applications.</simpara>
      <section id="sect-Component_Reference-Functionality_extension-componentControl">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:componentControl&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> behavior allows JavaScript API functions to be called on target components. The functions are called after defined events are triggered on the component to with the <literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> behavior is attached. Initialization variants and activation events can be customized, and parameters can be passed to the target component.</simpara>
        <section id="sect-Component_Reference-componentControl-Basic_usage">
          <title>Basic usage</title>
          <simpara>The <literal><phrase role="varname">operation</phrase></literal> attribute is required to attach JavaScript functions to the parent component, along with either the <literal><phrase role="varname">target</phrase></literal> or <literal><phrase role="varname">selector</phrase></literal> attributes. Use the <literal><phrase role="varname">operation</phrase></literal> attribute to specify the JavaScript API function to perform. Use the <literal><phrase role="varname">target</phrase></literal> attribute to define the <literal><phrase role="varname">id</phrase></literal> identifier of the target component, or use the <literal><phrase role="varname">selector</phrase></literal> attribute to define a number of target components through the use of valid jQuery selectors.</simpara>
          <simpara>Use the <literal><phrase role="varname">event</phrase></literal> attribute to specify the event that triggers the JavaScript API function call if it is different from the default triggering event for the parent component.</simpara>
          <example id="exam-Component_Reference-componentControl-componentControl_basic_usage">
            <title><literal><phrase role="sgmltag">&lt;r:componentControl&gt;</phrase></literal> basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:commandButton value="Show Modal Panel"&gt;
    &lt;!--componentControl is attached to the commandButton--&gt;
    &lt;r:componentControl target="ccModalPanelID" event="click" operation="show"/&gt;
&lt;/h:commandButton&gt;
</programlisting>
            <simpara>The example contains a single command button, which when clicked shows the modal panel with the identifier <literal>ccModalPanelID</literal>.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-componentControl-Passing_parameters_to_API_methods">
          <title>Passing parameters to API methods</title>
          <simpara>The operation can receive parameters through nested <literal><phrase role="sgmltag">&lt;f:param&gt;</phrase></literal> elements.</simpara>
          <example id="exam-Component_Reference-componentControl-Using_parameters">
            <title>Using parameters</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:componentControl event="click" target="modalPanel" operation="show"&gt;
   &lt;f:param value="width" name="500"/&gt;
&lt;/r:componentControl&gt;
</programlisting>
          </example>
          <simpara>To group multiple parameters for a function, use the <literal><phrase role="sgmltag">&lt;r:hashParam&gt;</phrase></literal> component to create a hash map. Refer to <xref linkend="sect-Component_Reference-Functionality_extension-hashParam"/> for details.</simpara>
        </section>
        <section id="sect-Component_Reference-componentControl-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.behavior.ComponentControlBehavior</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-id</phrase></literal>: <literal><phrase role="classname">org.richfaces.behavior.ComponentControlBehavior</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.taglib.ComponentControlHandler</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">behavior-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.behavior.ComponentControlBehavior</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">client-behavior-renderer-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.renderkit.html.ToggleControlRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Functionality_extension-focus">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:focus&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:focus&gt;</phrase></literal> component allows one to manipulate the focus of components on a page. It is intended to be used with any input field.</simpara>
        <section id="sect-Component_Reference-focus-Placement">
          <title>Placement</title>
          <simpara>The component will behave differently when placed:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>in a form - defines behavior for components in the given form</simpara>
            </listitem>
            <listitem>
              <simpara>in a view (outside of forms) - defines behavior for components in all forms in the view</simpara>
            </listitem>
          </itemizedlist>
          <simpara>There can be only one focus per form.</simpara>
          <simpara>If both, form- and view-based focuses are defined, the form one takes a priority.</simpara>
        </section>
        <section id="sect-Component_Reference-focus-Applying_focus">
          <title>Applying Focus</title>
          <simpara>The focus is applied each time it is rendered - either on form submission or after an AJAX request. Only focuses inside the form which is submitted are applied.</simpara>
          <simpara>You can turn focusing-after-AJAX-requests off by setting the <literal><phrase role="varname">ajaxRendered</phrase></literal> attribute to <literal><phrase role="varname">false</phrase></literal>.</simpara>
        </section>
        <section id="sect-Component_Reference-focus-Validation_aware">
          <title>Validation-Aware</title>
          <simpara>The <literal><phrase role="sgmltag">&lt;r:focus&gt;</phrase></literal> component reflects the results of validation of components in a view. Focus is given to the first input component in the page which is invalid.</simpara>
          <simpara>If all components are valid, then first component in the form is focused.</simpara>
          <simpara>The order of input components is determined on the client-side and reflects the <literal><phrase role="varname">tabindex</phrase></literal> and position in the page. You can prioritize the focusing of a specific component by increasing its tabindex.</simpara>
          <simpara>You can turn validation awareness off by setting the <literal><phrase role="varname">validationAware</phrase></literal> attribute to <literal><phrase role="varname">false</phrase></literal>.</simpara>
          <figure id="figu-Component_Reference-focus-Validation_aware">
            <title>Validation-aware <literal><phrase role="sgmltag">&lt;r:focus&gt;</phrase></literal></title>
            <mediaobject>
              <imageobject>
                <imagedata fileref="images/figu-Component_Reference-focus-Validation_aware.png"/>
              </imageobject>
              <textobject>
                <phrase>figu-Component_Reference-focus-Validation_aware</phrase>
              </textobject>
            </mediaobject>
          </figure>
        </section>
        <section id="sect-Component_Reference-focus-Preserving_focus">
          <title>Preserving Focus</title>
          <simpara>Focus can be configured to keep focus on the input component which had focus before sending the JSF request (using either AJAX or form submission).</simpara>
          <example id="exam-Component_Reference-focus-focus_preserving_focus">
            <title><literal><phrase role="sgmltag">&lt;r:focus&gt;</phrase></literal> preserving focus</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:form&gt;
    &lt;r:focus preserve="true" /&gt;

    &lt;h:inputText id="query" value="#{query}" /&gt;
    &lt;r:commandButton value="Search" render="output" /&gt;

    &lt;h:outputText value="Searched query:" /&gt;
    &lt;h:outputText id="output" value="#{query}" /&gt;
&lt;/h:form&gt;</programlisting>
            <simpara>In the example above, everytime the user hits Search (or hits enter), the focus is given back to the query input after the request.</simpara>
          </example>
          <simpara>This configuration will take priority over any other focus setup.</simpara>
        </section>
        <section id="sect-Component_Reference-focus-Delaying_focus">
          <title>Delaying Focus</title>
          <simpara>In certain situations, focus needs to be applied with a delay - once suitable conditions are met.</simpara>
          <simpara>By configuring a focus with the attribute <literal><phrase role="varname">delayed</phrase></literal> to <literal><phrase role="varname">true</phrase></literal>, the focus won’t be applied on initial page request.</simpara>
          <simpara>Then it is possible to call the <literal><phrase role="varname">applyFocus()</phrase></literal> JavaScript API method in order to let the focus be applied.</simpara>
        </section>
        <section id="sect-Component_Reference-focus-Focus_Manager">
          <title>Focus Manager</title>
          <simpara>For a situation when none of the options above help one to achieve the desired focus behavior, one can use the server-side component <literal><phrase role="varname">FocusManager</phrase></literal>.</simpara>
          <simpara>A component focus chosen by the <literal><phrase role="varname">FocusManager</phrase></literal> will take priority over any focus configuration.</simpara>
          <example id="exam-Component_Reference-focus-Focus_Manager">
            <title><literal><phrase role="sgmltag">&lt;r:focus&gt;</phrase></literal> preserving focus</title>
            <programlisting language="Java" linenumbering="unnumbered">FocusManager focusManager = ServiceTracker.getService(FocusManager.class);
focusManager.focus("input2");</programlisting>
          </example>
        </section>
        <section id="sect-Component_Reference-focus-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Focus</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIFocus</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Focus</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.FocusRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Functionality_extension-hotKey">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:hotKey&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> component allows one to register hot keys for the page or particular elements and to define client-side processing functions for these keys.</simpara>
        <section id="sect-Component_Reference-hotKey-Basic_usage">
          <title>Basic usage</title>
          <simpara>There are two ways to register <literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal>:</simpara>
          <itemizedlist>
            <listitem>
              <simpara>place it anywhere on the page. In this case the <literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> component is attached to the whole page. This is the default scenario.</simpara>
            </listitem>
            <listitem>
              <simpara>attach it to specific elements by defining the <literal><phrase role="varname">selector</phrase></literal> attribute. This attribute uses the syntax of the jQuery Selectors (a superset of CSS selectors defined by W3C consortium) and additionally it expands JSF component IDs to client-side IDs (see the VDL documentation for the <literal><phrase role="varname">selector</phrase></literal> attribute).</simpara>
            </listitem>
          </itemizedlist>
          <simpara>The <literal><phrase role="varname">key</phrase></literal> attribute defines the hot key itself, which is processed by the component.</simpara>
          <simpara>The key sequences can be defined using a " <literal><phrase role="code">+</phrase></literal>" key separator. The key sequence modifiers needs to be defined in alphabetical order, e.g. <literal><phrase role="code">alt+ctrl+shift</phrase></literal>.</simpara>
          <simpara>Hot key processing can be disabled by setting <literal><phrase role="varname">rendered</phrase></literal> to <literal><phrase role="code">false</phrase></literal>.</simpara>
          <example id="exam-Component_Reference-hotkey-hotkey_basic_usage">
            <title><literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> basic usage</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:hotKey key="ctrl+z"&gt;
    &lt;r:componentControl target="popup" operation="show" /&gt;
&lt;/r:hotKey&gt;

&lt;r:popupPanel id="popup"&gt;
	...
&lt;/r:popupPanel&gt;</programlisting>
            <simpara>The example contains <literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> which handles the <literal><phrase role="code">Ctrl+Z</phrase></literal> key sequence on the whole page. When the key sequence is pressed, the <literal><phrase role="sgmltag">&lt;r:popupPanel&gt;</phrase></literal> is displayed.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-hotKey-Event_processing">
          <title>Event processing</title>
          <simpara>The <literal><phrase role="varname">enabledInInput</phrase></literal> attribute enables the hot key event processing when form inputs are focused. This attribute is <literal><phrase role="code">false</phrase></literal> by default.</simpara>
          <simpara>The <literal><phrase role="varname">preventDefault</phrase></literal> attribute specifies whether the hot key binding should prevent default browser-specific actions to be taken (e.g. <literal><phrase role="code">Ctrl+A</phrase></literal> hot key selecting all available text, Ctrl+B opening bookmarks bar, etc.). This attribute has a default value of <literal><phrase role="code">true</phrase></literal>.</simpara>
          <note>
            <title>Cross-browser support for preventing default actions</title>
            <simpara>Even though RichFaces instructs the browser to prevent the default action, browser implementations do not support preventing browser’s native actions for selected key combinations.</simpara>
            <simpara>Although the inability to prevent default action is not usual, you may experience that both the programatically-defined action and the browser’s native action are triggered (e.g. native popup appears).</simpara>
            <simpara>To keep an application accessible, it is convenient to not depend on hot keys or hot key combinations heavily. Best practice is using a hot key only as shortcut for a given action.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-hotKey-Event_handlers">
          <title>Event handlers</title>
          <simpara>The following event handlers could be used to trigger client-side behaviors or to invoke javascript directly:</simpara>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="varname">keydown</phrase></literal> (default event) is fired when the hot key sequence is initiated (the keys are down)</simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="varname">keyup</phrase></literal> is fired when the hot key sequence is finished (the keys are up)</simpara>
            </listitem>
          </itemizedlist>
          <example id="exam-Component_Reference-hotKey-hotkKey_event_handlers">
            <title><literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> event handlers</title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;r:hotKey key="ctrl+a" onkeyup="alert('Ctrl+A was pressed')" /&gt;</programlisting>
          </example>
          <note>
            <title>Hot Key in Editor</title>
            <simpara>The <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal> uses <literal><phrase role="sgmltag">&lt;iframe&gt;</phrase></literal> for the editable area.</simpara>
            <simpara>The <literal><phrase role="sgmltag">&lt;iframe&gt;</phrase></literal> doesn’t allow one to propagate events outside of the <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal>, making <literal><phrase role="sgmltag">&lt;r:hotKey&gt;</phrase></literal> unusable for handling events from <literal><phrase role="sgmltag">&lt;r:editor&gt;</phrase></literal>.</simpara>
            <simpara>The CKEditor specific event handling mechanism should be used instead.</simpara>
          </note>
        </section>
        <section id="sect-Component_Reference-hotKey-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HotKey</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIHotKey</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.HotKey</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HotKeyRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Functionality_extension-hashParam">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:hashParam&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:hashParam&gt;</phrase></literal> component allows client-side parameters to be grouped into a hash map. The hash map can then be passed to the client JavaScript API functions of any RichFaces component.</simpara>
        <section id="sect-Component_Reference-hashParam-Basic_usage">
          <title>Basic usage</title>
          <simpara>Nest parameter tags in the <literal><phrase role="sgmltag">&lt;r:hashParam&gt;</phrase></literal> component to group them in the hash map. The hash map itself can then be passed as a function parameter.</simpara>
          <example id="exam-Component_Reference-hashParam-hashParam">
            <title>
              <literal>
                <phrase role="sgmltag">&lt;r:hashParam&gt;</phrase>
              </literal>
            </title>
            <programlisting language="XML" linenumbering="unnumbered">&lt;h:commandButton value="Show popup"&gt;
   &lt;r:componentControl target="popupPanel" operation="show"&gt;
      &lt;r:param noEscape="true" value="event" /&gt;
      &lt;r:hashParam&gt;
         &lt;f:param name="width" value="500" /&gt;
         &lt;f:param name="height" value="300" /&gt;
         &lt;f:param name="minWidth" value="300" /&gt;
         &lt;f:param name="minHeight" value="150" /&gt;
         &lt;r:param noEscape="true" name="left" value="(jQuery(window).width()/2)-250" /&gt;
         &lt;r:param noEscape="true" name="top" value="(jQuery(window).height()/2)-150" /&gt;
      &lt;/r:hashParam&gt;
   &lt;/r:componentControl&gt;
&lt;/h:commandButton&gt;
</programlisting>
            <simpara>The example illustrates the use of the <literal><phrase role="sgmltag">&lt;r:hashParam&gt;</phrase></literal> component to group multiple parameters into a hash map. The parameters are passed through to the <literal><phrase role="function">show</phrase></literal> function pop-up panel with the <literal>popupPanel</literal> identifier.</simpara>
          </example>
        </section>
        <section id="sect-Component_Reference-hashParam-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HashParam</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIHashParam</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.HashParam</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.HashParamRenderer</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">handler-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.view.facelets.HashParamTag</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
      </section>
      <section id="sect-Component_Reference-Functionality_extension-placeholder">
        <title>
          <literal>
            <phrase role="sgmltag">&lt;r:placeholder&gt;</phrase>
          </literal>
        </title>
        <simpara>The <literal><phrase role="sgmltag">&lt;r:placeholder&gt;</phrase></literal> component allows one to use functionality similar to the HTML5 <literal><phrase role="varname">placeholder</phrase></literal> attribute for input components.</simpara>
        <simpara>This component brings a backward compatibility for HTML5 non-compliant browsers and some additional features:</simpara>
        <itemizedlist>
          <listitem>
            <simpara>per-component styling using <literal><phrase role="varname">styleClass</phrase></literal> attribute</simpara>
          </listitem>
          <listitem>
            <simpara>application to multiple components at once using <literal><phrase role="varname">selector</phrase></literal> attribute</simpara>
          </listitem>
        </itemizedlist>
        <example id="exam-Component_Reference-placeholder-Input_components">
          <title><literal><phrase role="sgmltag">&lt;r:placeholder&gt;</phrase></literal> with input components</title>
          <programlisting language="XML" linenumbering="unnumbered">&lt;h:outputLabel value="Input text:" /&gt;
&lt;h:inputText id="input"&gt;
    &lt;r:placeholder value="Type text here..." /&gt;
&lt;/h:inputText&gt;

&lt;h:outputLabel value="Textarea:" /&gt;
&lt;h:inputTextarea id="textarea"&gt;
    &lt;r:placeholder value="A space for long content..." /&gt;
&lt;/h:inputTextarea&gt;

&lt;h:outputLabel value="Date:" /&gt;
&lt;r:calendar datePattern="dd/M/yyyy" enableManualInput="true"&gt;
    &lt;r:placeholder value="dd/mm/yyyy" /&gt;
&lt;/r:calendar&gt;</programlisting>
        </example>
        <figure id="figu-Component_Reference-placeholder-Input_components">
          <title>
            <literal>
              <phrase role="sgmltag">&lt;r:placeholder&gt;</phrase>
            </literal>
          </title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/figu-Component_Reference-placeholder-Input_components.png"/>
            </imageobject>
            <textobject>
              <phrase>figu-Component_Reference-placeholder-Input_components</phrase>
            </textobject>
          </mediaobject>
        </figure>
        <section id="sect-Component_Reference-placeholder-Reference_data">
          <title>Reference data</title>
          <itemizedlist>
            <listitem>
              <simpara><literal><phrase role="parameter">component-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.Placeholder</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-class</phrase></literal>: <literal><phrase role="classname">org.richfaces.component.UIPlaceholder</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">component-family</phrase></literal>: <literal><phrase role="classname">org.richfaces.Placeholder</phrase></literal></simpara>
            </listitem>
            <listitem>
              <simpara><literal><phrase role="parameter">renderer-type</phrase></literal>: <literal><phrase role="classname">org.richfaces.PlaceholderRenderer</phrase></literal></simpara>
            </listitem>
          </itemizedlist>
        </section>
        <section id="sect-Component_Reference-placeholder-Style_classes_and_skin_parameters">
          <title>Style classes and skin parameters</title>
          <table id="placeholder-Style_classes_and_corresponding_skin_parameters" frame="all" rowsep="1" colsep="1">
            <title>Style classes (selectors) and corresponding skin parameters</title>
            <tgroup cols="3">
              <colspec colname="col_1" colwidth="33*"/>
              <colspec colname="col_2" colwidth="33*"/>
              <colspec colname="col_3" colwidth="33*"/>
              <thead>
                <row>
                  <entry align="left" valign="top">Class (selector)</entry>
                  <entry align="left" valign="top">Skin Parameters</entry>
                  <entry align="left" valign="top">Mapped CSS properties</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry align="left" valign="top">
                    <variablelist>
                      <varlistentry>
                        <term>
                          <literal>
                            <phrase role="classname">.rf-plhdr</phrase>
                          </literal>
                        </term>
                        <listitem>
                          <simpara>This class identifies which input elements have their placeholder text managed by the placeholder component. Use this class to apply custom styles to the placeholder text.</simpara>
                        </listitem>
                      </varlistentry>
                    </variablelist>
                  </entry>
                  <entry align="left" valign="top"/>
                  <entry align="left" valign="top">
                    <simpara>[property]++</simpara>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </table>
        </section>
      </section>
    </chapter>
  </part>
</book>
